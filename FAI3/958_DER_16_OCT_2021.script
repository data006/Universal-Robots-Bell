def P958_DER_16_OCT_2021():
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_safety_mode_transition_hardness(1)
  set_tcp(p[1.5056042997465408E-4,-0.1671653624070516,0.03508840029654564,1.578426503296317,-0.07286998940142633,0.068713436990727])
  set_target_payload(1.510000, [0.009000, -0.060000, 0.035000], [0.003059, 0.003059, 0.003059, 0.000000, 0.000000, 0.000000])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_runstate_standard_digital_outputs([2])
  set_runstate_configurable_digital_outputs([1])
  set_runstate_standard_digital_output_to_value(2, 1)
  set_runstate_configurable_digital_output_to_value(1, 1)
  set_gravity([0.0, 0.0, 9.82])
  step_count_f225eacc_363a_431d_9128_56c8cedd7b7b = 0.0
  thread Step_Counter_Thread_f2380df0_5e59_408c_854c_73896ac10fc7():
    while (True):
      step_count_f225eacc_363a_431d_9128_56c8cedd7b7b = step_count_f225eacc_363a_431d_9128_56c8cedd7b7b + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_f2380df0_5e59_408c_854c_73896ac10fc7()
  modbus_add_signal("192.168.10.45", 255, 187, 1, "postrnas_m187", False)
  modbus_set_signal_update_frequency("postrnas_m187", 10)
  modbus_add_signal("192.168.10.45", 255, 289, 1, "ini_cambro_m289", False)
  modbus_set_signal_update_frequency("ini_cambro_m289", 10)
  modbus_add_signal("192.168.10.45", 255, 290, 0, "fin_cambro_m290", False)
  modbus_set_signal_update_frequency("fin_cambro_m290", 10)
  modbus_add_signal("192.168.10.45", 255, 291, 1, "outputbroc_m291", False)
  modbus_set_signal_update_frequency("outputbroc_m291", 10)
  modbus_add_signal("192.168.10.45", 255, 292, 0, "fciclocarr_m292", False)
  modbus_set_signal_update_frequency("fciclocarr_m292", 10)
  modbus_add_signal("192.168.10.45", 255, 7, 1, "avancarrusel_m7", False)
  modbus_set_signal_update_frequency("avancarrusel_m7", 10)
  modbus_add_signal("192.168.10.45", 255, 252, 1, "pose2_m252", False)
  modbus_set_signal_update_frequency("pose2_m252", 10)
  modbus_add_signal("192.168.10.45", 255, 253, 1, "pose3_m253", False)
  modbus_set_signal_update_frequency("pose3_m253", 10)
  modbus_add_signal("192.168.10.45", 255, 254, 1, "pose4_m254", False)
  modbus_set_signal_update_frequency("pose4_m254", 10)
  modbus_add_signal("192.168.10.45", 255, 441, 1, "finciclo_m441", False)
  modbus_set_signal_update_frequency("finciclo_m441", 10)
  modbus_add_signal("192.168.10.45", 255, 503, 0, "homecobot_m503", False)
  modbus_set_signal_update_frequency("homecobot_m503", 10)
  modbus_add_signal("192.168.10.45", 255, 288, 1, "cargar_run_m288", False)
  modbus_set_signal_update_frequency("cargar_run_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 287, 0, "desactiver_m288", False)
  modbus_set_signal_update_frequency("desactiver_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 183, 0, "eje7home_m183", False)
  modbus_set_signal_update_frequency("eje7home_m183", 10)
  modbus_add_signal("192.168.10.45", 255, 444, 1, "finciclo_m444", False)
  modbus_set_signal_update_frequency("finciclo_m444", 10)
  modbus_add_signal("192.168.10.45", 255, 381, 0, "pat1_m381", False)
  modbus_set_signal_update_frequency("pat1_m381", 10)
  modbus_add_signal("192.168.10.45", 255, 382, 0, "pat2_m382", False)
  modbus_set_signal_update_frequency("pat2_m382", 10)
  modbus_add_signal("192.168.10.45", 255, 383, 0, "pat3_m383", False)
  modbus_set_signal_update_frequency("pat3_m383", 10)
  modbus_add_signal("192.168.10.45", 255, 384, 0, "pat4_m384", False)
  modbus_set_signal_update_frequency("pat4_m384", 10)
  modbus_add_signal("192.168.10.45", 255, 385, 0, "pat5_m385", False)
  modbus_set_signal_update_frequency("pat5_m385", 10)
  modbus_add_signal("192.168.10.45", 255, 386, 0, "pat6_m386", False)
  modbus_set_signal_update_frequency("pat6_m386", 10)
  modbus_add_signal("192.168.10.45", 255, 387, 0, "pat7_m387", False)
  modbus_set_signal_update_frequency("pat7_m387", 10)
  modbus_add_signal("192.168.10.45", 255, 388, 0, "pat8_m388", False)
  modbus_set_signal_update_frequency("pat8_m388", 10)
  modbus_add_signal("192.168.10.45", 255, 389, 0, "pat9_m389", False)
  modbus_set_signal_update_frequency("pat9_m389", 10)
  modbus_add_signal("192.168.10.45", 255, 390, 0, "pat10_m390", False)
  modbus_set_signal_update_frequency("pat10_m390", 10)
  modbus_add_signal("192.168.10.45", 255, 11, 3, "secuencia_mw11", False)
  modbus_set_signal_update_frequency("secuencia_mw11", 10)
  modbus_add_signal("192.168.10.45", 255, 430, 0, "modeloDer_m430", False)
  modbus_set_signal_update_frequency("modeloDer_m430", 10)
  modbus_add_signal("192.168.10.45", 255, 10, 3, "mensaje_mw10", False)
  modbus_set_signal_update_frequency("mensaje_mw10", 10)
  modbus_add_signal("192.168.10.45", 255, 379, 0, "respues_m379", False)
  modbus_set_signal_update_frequency("respues_m379", 10)
  modbus_add_signal("192.168.10.45", 255, 251, 1, "pose1_m251", False)
  modbus_set_signal_update_frequency("pose1_m251", 10)
  modbus_add_signal("192.168.10.45", 255, 3, 3, "pos_2_mw3", False)
  modbus_set_signal_update_frequency("pos_2_mw3", 10)
  modbus_add_signal("192.168.10.45", 255, 4, 2, "pasofin_mw4", False)
  modbus_set_signal_update_frequency("pasofin_mw4", 10)
  modbus_add_signal("192.168.10.45", 255, 20, 1, "Home_M20", False)
  modbus_set_signal_update_frequency("Home_M20", 10)
  modbus_add_signal("192.168.10.45", 255, 303, 1, "Home_Carrusel", False)
  modbus_set_signal_update_frequency("Home_Carrusel", 10)
  modbus_add_signal("192.168.10.45", 255, 30, 0, "Continuar_M30", False)
  modbus_set_signal_update_frequency("Continuar_M30", 10)
  modbus_add_signal("192.168.10.45", 255, 31, 1, "Msj_d_cobot_M31", False)
  modbus_set_signal_update_frequency("Msj_d_cobot_M31", 10)
  modbus_add_signal("192.168.10.45", 255, 501, 1, "posicion_non2", False)
  modbus_set_signal_update_frequency("posicion_non2", 10)
  modbus_add_signal("192.168.10.45", 255, 22, 1, "pos1_izq_m22", False)
  modbus_set_signal_update_frequency("pos1_izq_m22", 10)
  modbus_add_signal("192.168.10.45", 255, 7, 2, "Lado_Correr", False)
  modbus_set_signal_update_frequency("Lado_Correr", 10)
  modbus_add_signal("192.168.10.45", 255, 697, 1, "pos2_izq_m697", False)
  modbus_set_signal_update_frequency("pos2_izq_m697", 10)
  modbus_add_signal("192.168.10.45", 255, 13, 2, "pos_eje7_mw13", False)
  modbus_set_signal_update_frequency("pos_eje7_mw13", 10)
  modbus_add_signal("192.168.10.45", 255, 12, 3, "alarma_HMI_mw12", False)
  modbus_set_signal_update_frequency("alarma_HMI_mw12", 10)
  modbus_add_signal("192.168.10.45", 255, 9, 2, "pos_sig_der", False)
  modbus_set_signal_update_frequency("pos_sig_der", 10)
  modbus_add_signal("192.168.10.45", 255, 698, 1, "pos2_der_mw698", False)
  modbus_set_signal_update_frequency("pos2_der_mw698", 10)
  modbus_add_signal("192.168.10.45", 255, 648, 1, "carrusel_home", False)
  modbus_set_signal_update_frequency("carrusel_home", 10)
  modbus_add_signal("192.168.10.45", 255, 8, 1, "sig_carrusel_m8", False)
  modbus_set_signal_update_frequency("sig_carrusel_m8", 10)
  modbus_add_signal("192.168.10.45", 255, 611, 1, "pos1_term_m611", False)
  modbus_set_signal_update_frequency("pos1_term_m611", 10)
  modbus_add_signal("192.168.10.45", 255, 612, 1, "pos4_term_m612", False)
  modbus_set_signal_update_frequency("pos4_term_m612", 10)
  modbus_set_runstate_dependent_choice("postrnas_m187",0)
  modbus_set_runstate_dependent_choice("ini_cambro_m289",0)
  modbus_set_runstate_dependent_choice("outputbroc_m291",0)
  modbus_set_runstate_dependent_choice("avancarrusel_m7",0)
  modbus_set_runstate_dependent_choice("pose2_m252",0)
  modbus_set_runstate_dependent_choice("pose3_m253",0)
  modbus_set_runstate_dependent_choice("pose4_m254",0)
  modbus_set_runstate_dependent_choice("finciclo_m441",0)
  modbus_set_runstate_dependent_choice("cargar_run_m288",0)
  modbus_set_runstate_dependent_choice("finciclo_m444",0)
  modbus_set_runstate_dependent_choice("secuencia_mw11",0)
  modbus_set_runstate_dependent_choice("mensaje_mw10",0)
  modbus_set_runstate_dependent_choice("pose1_m251",0)
  modbus_set_runstate_dependent_choice("pos_2_mw3",0)
  modbus_set_runstate_dependent_choice("Home_M20",0)
  modbus_set_runstate_dependent_choice("Home_Carrusel",0)
  modbus_set_runstate_dependent_choice("Msj_d_cobot_M31",0)
  modbus_set_runstate_dependent_choice("posicion_non2",0)
  modbus_set_runstate_dependent_choice("pos1_izq_m22",0)
  modbus_set_runstate_dependent_choice("pos2_izq_m697",0)
  modbus_set_runstate_dependent_choice("alarma_HMI_mw12",0)
  modbus_set_runstate_dependent_choice("pos2_der_mw698",0)
  modbus_set_runstate_dependent_choice("carrusel_home",0)
  modbus_set_runstate_dependent_choice("sig_carrusel_m8",0)
  modbus_set_runstate_dependent_choice("pos1_term_m611",0)
  modbus_set_runstate_dependent_choice("pos4_term_m612",0)
  global Line_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_2=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_4=p[-0.2932874787951964,0.3932288129452105,0.013749459185886714,0.019478391032120013,-0.0350876085014595,1.5300278925331599]
  global Line_5=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_6=p[-0.8534043480453131,0.702447272711755,-0.28895464606575716,2.5692512849242175,-1.7952327304622913,0.016877746986721606]
  global Plane_1=p[-0.4357649673792705,0.3571224276764373,-0.011331751409534768,-0.03455953496512708,-0.012487423981114925,3.103751116092306]
  global Plane_2=p[-0.4823864034329737,0.3302516442079689,0.014283714098506706,0.017125077458443067,0.05770060098903715,-2.9134709732588786]
  global Plane_3=p[0.003678615545088639,0.4082921331082374,0.10477407557236007,-2.072177303174012E-4,7.379081343290108E-4,-6.424400645467977E-4]
  global Plane_4=p[-0.4500206307677429,-0.2823718146925442,-0.4767416657426552,0.013278190059218174,0.013334473770785706,1.8479691991032237]
  global Plane_5=p[-0.41463155496548926,-0.36477068260681855,-0.008600875771562433,0.005091590071719368,-3.1306630971044838,9.935069716473452E-4]
  global Plano_patron1=p[-0.7699005610122596,0.304894434078545,0.0420369514744936,-0.0031270356010209216,1.7180543614697593E-4,-3.508888786211572E-5]
  global Point_13=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_16=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_17=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_8=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_prot_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_seg_der=p[0.23741638234469645,0.3587772222537799,0.42419077585740217,0.818517054876345,1.4216436941132238,1.005041187710707]
  global pisp_958=p[-0.41395442210486977,-0.2082168853247176,0.041553466664982,0.014014788518713659,0.01101911827984854,1.569193423241601]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  # begin: URCap Installation Node
  #   Source: Robotiq_Copilot, 1.21.1.12738, Robotiq Inc.
  #   Type: Copilot
  # end: URCap Installation Node
  global Off_derecha_p=p[.175178167123, -.046665512771, .017813687701, -1.998242252627, .091332794558, .057870219884]
  global Off_derecha_q=[1.570791244506836, -1.5707929891398926, 2.7033608595477503, -7.705097534227434E-6, 1.5707988739013672, 9.96917879092507E-6]
  global Waypoint_8_p=p[.175236898651, -.168918833698, .168903309792, 3.058520621344, -.138715206059, .006183334838]
  global Waypoint_8_q=[1.5708106756210327, -2.79253687481069, 2.7033897081958216, -4.644811663823134E-5, 1.570803165435791, 5.7777564506977797E-5]
  global Traslacion_der_p=p[.174612079691, -.721747397013, .506266782689, 3.138286633586, -.143210876968, .000063560178]
  global Traslacion_der_q=[1.570634365081787, -1.5751105747618617, 1.5775416533099573, -0.011642770176269579, 1.5703482627868652, 2.4653974105603993E-4]
  global Posicion_Cero_p=p[.000641351067, -.324741705269, 1.651531526035, -.004182956484, -.015368016391, -3.049931731316]
  global Posicion_Cero_q=[-1.5083943502247621E-5, -1.570850511590475, -1.960420559043996E-5, -1.5707971058287562, -3.0199159795074593E-7, 2.6342635464970954E-5]
  global Zona_der1_p=p[-.721714488857, -.174597296586, .506288710684, 2.112771825275, -2.325027693609, -.000026971048]
  global Zona_der1_q=[9.938566945493221E-4, -1.574824949304098, 1.577212158833639, -0.011585430507995653, 1.5758851766586304, 1.494884490966797E-4]
  def calculate_point_to_move_towards(feature, direction, position_distance):
    local posDir=[direction[0], direction[1], direction[2]]
    if (norm(posDir) < 1e-6):
      return get_target_waypoint()
    end
    local direction_vector_normalized=normalize(posDir)
    local displacement_pose=p[direction_vector_normalized[0] * position_distance,direction_vector_normalized[1] * position_distance,direction_vector_normalized[2] * position_distance,0,0,0]
    local wanted_displacement_in_base_frame=pose_sub(pose_trans(feature, displacement_pose), feature)
    return pose_add(get_target_waypoint(), wanted_displacement_in_base_frame)
  end
  global Precambio_der_p=p[.000184297050, .459544816335, .420003217411, .278849187896, 3.125635568807, -.030498093103]
  global Precambio_der_q=[2.2073731422424316, -1.0365256828120728, -2.1024060249328613, -3.155086179772848, -0.8465288321124476, 0.0036061820574104786]
  global Dejar_der_p=p[.000169060380, .459556427735, .061149837271, .278815303094, 3.125662915414, -.030500145187]
  global Dejar_der_q=[2.2068281173706055, -1.3842844378999253, -2.61541748046875, -2.2948833904662074, -0.8491523901568812, 0.004479336552321911]
  global Paso1_Der1_p=p[-.487790901224, -.375840633107, .078446835108, 2.112752331285, -2.324960407622, -.000006490463]
  global Paso1_Der1_q=[0.48904722929000854, -1.427612082367279, 2.2607925573932093, -0.8439992231181641, 2.062290668487549, -0.0034015814410608414]
  global Paso1_Der2_p=p[-.769184003762, -.406837751181, .070613574059, 2.112704500794, -2.325079749474, -.000069429408]
  global Paso1_Der2_q=[0.34545251727104187, -1.094377414589264, 1.7959054152118128, -0.7115634244731446, 1.9189287424087524, -0.0018165747271936539]
  global Sacar1_der1_p=p[-.413834270321, -.368954471380, .039259975635, 2.112740802415, -2.324947603668, -.000051090761]
  global Sacar1_der1_q=[0.5586947202682495, -1.4377972197583695, 2.3821519056903284, -0.9555508655360718, 2.1318230628967285, -0.004032437001363576]
  global Sacar1_der2_p=p[-.425600429896, -.361059448383, .042962407429, 2.112489811776, -2.325051041633, -.000038352911]
  global Sacar1_der2_q=[0.5280184745788574, -1.4439301204732438, 2.3787854353534144, -0.9459217351726075, 2.101321220397949, -0.003636662160054982]
  global Sacar1h_der1_p=p[-.482894103199, -.364214906242, .062588172071, 2.112790734239, -2.324957709381, -.000053243798]
  global Sacar1h_der1_q=[0.4718237519264221, -1.4199203115752717, 2.293452564870016, -0.8841951650432129, 2.0450029373168945, -0.00312215486635381]
  global Sacar1h_der2_p=p[-.495382082129, -.357989983429, .085829318159, -2.112650287499, 2.325069257444, -.000013782528]
  global Sacar1h_der2_q=[0.44778329133987427, -1.4512812879732628, 2.270275417958395, -0.8294717234424134, 2.0211448669433594, -0.00299245515932256]
  global Waypoint_9_p=p[-.607439705135, -.375849052095, .078449135272, 2.112722921323, -2.324959607581, .000059262301]
  global Waypoint_9_q=[0.39092984795570374, -1.3026757699302216, 2.096058193837301, -0.8036227387240906, 1.9642220735549927, -0.0021856466876428726]
  global Sacar2_der1_p=p[-1.163959795995, -.371853941646, .042187325735, 2.112731668239, -2.325044686010, .000117311499]
  global Sacar2_der1_q=[0.190265491604805, -0.5571816724589844, 0.871828858052389, -0.3241298955729981, 1.7645820379257202, -3.7795702089482575E-4]
  global Sacar2_der2_p=p[-1.175947370286, -.378923210709, .043214571747, 2.112548938060, -2.325151203428, -.000096379438]
  global Sacar2_der2_q=[0.19462428987026215, -0.5288713735393067, 0.8144801298724573, -0.2952347558787842, 1.7691478729248047, -5.362669574182632E-4]
  global Waypoint_11_p=p[-1.163976150910, -.371873307946, .073926482339, 2.112661123770, -2.325004466255, .000110421890]
  global Waypoint_11_q=[0.1902569979429245, -0.5769973558238526, 0.8523271719561976, -0.28488655508074956, 1.7646628618240356, -4.079977618616226E-4]
  global Waypoint_10_p=p[-1.131946584948, -.365226365129, .069176805325, 2.112619232823, -2.324932916215, .000072133325]
  global Waypoint_10_q=[0.18981991708278656, -0.6384801429561158, 0.979323689137594, -0.3504679960063477, 1.7640471458435059, -3.36949025289357E-4]
  global Sacar2h_der2_p=p[-1.152871527512, -.362091319653, .046762774553, 2.112673055421, -2.324961754179, -.000205716109]
  global Sacar2h_der2_q=[0.183163121342659, -0.5879504841617127, 0.9234550634967249, -0.3451838058284302, 1.7574114799499512, -4.2564073671513825E-4]
  global Paso2_der1_p=p[-.429675342377, -.212097722593, .078415003472, -2.112797603799, 2.324978520009, -.000051144133]
  global Paso2_der1_q=[0.13061046600341797, -1.704588075677389, 2.5399776140796106, -0.8447194260409852, 1.7039413452148438, 1.361399336019531E-4]
  global Paso2_der2_p=p[-.416302525245, -.231102315167, .083617046598, -2.104059803776, 2.315929057610, -.017863718327]
  global Paso2_der2_q=[0.19778059422969818, -1.7082559070982875, 2.5228849093066614, -0.8068645757487793, 1.7714014053344727, 0.002792841987684369]
  global Sacar3_der1_p=p[-.387228063354, -.086477605186, .043602586129, 2.112706840264, -2.325005688619, -.000051119905]
  global Sacar3_der1_q=[-0.4163273016559046, -1.8954006634154261, 2.75283390680422, -0.8671015065959473, 1.1571497917175293, 0.005261373706161976]
  global Sacar3_der2_p=p[-.404090793469, -.076521489004, .043706620733, -2.102220661920, 2.313311624134, -.022235544578]
  global Sacar3_der2_q=[-0.42042857805360967, -1.8396984539427699, 2.715156141911642, -0.8619196575931092, 1.1529783010482788, -0.004210297261373341]
  global Sacar4_der1_p=p[-.385950961961, -.340144515855, .045401434550, -2.112773454497, 2.325015448389, -.000039840378]
  global Sacar4_der1_q=[0.5329575538635254, -1.512728029196598, 2.4518125692950647, -0.9500070971301575, 2.106123924255371, -0.0037444273578088882]
  global Sacar4_der2_p=p[-.399044058753, -.315797637485, .044220999169, -2.104018870262, 2.315973207593, -.017918735503]
  global Sacar4_der2_q=[0.45441287755966187, -1.5291782778552552, 2.4656909147845667, -0.9280565542033692, 2.027864933013916, 0.005458872765302658]
  def Poner_Broca():
    $ 1822 "Poner_Broca" "noBreak"
    $ 1823 "If Lado_Correr≟2"
    if (modbus_get_signal_status("Lado_Correr") == 2):
      $ 1824 "Poner_Broca"
      $ 1825 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 1826 "MoveJ"
      $ 1827 "Precambio_der" "breakAfter"
      movej(get_inverse_kin(Precambio_der_p, qnear=Precambio_der_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1828 "MoveL"
      $ 1829 "Dejar_der" "breakAfter"
      movel(Dejar_der_p, a=1.2, v=0.25)
      $ 1830 "Set ini_cambro_m289=Encender"
      modbus_set_output_signal("ini_cambro_m289", True)
      $ 1831 "Wait: 3.8"
      sleep(3.8)
      $ 1832 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 1833 "Wait: 0.5"
      sleep(0.5)
      $ 1834 "Wait fciclocarr_m292=LO"
      while (modbus_get_signal_status("fciclocarr_m292") == True):
        sync()
      end
      $ 1835 "Wait: 0.5"
      sleep(0.5)
      $ 1836 "freedrive_mode()"
      freedrive_mode()
      $ 1837 "Wait: 2.0"
      sleep(2.0)
      $ 1838 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 1839 "MoveJ"
      $ 1840 "Dejar_der" "breakAfter"
      movej(get_inverse_kin(Dejar_der_p, qnear=Dejar_der_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1841 "MoveL"
      $ 1842 "Precambio_der" "breakAfter"
      movel(Precambio_der_p, a=1.2, v=0.25)
    else:
      $ 1843 "ElseIf Lado_Correr≟1"
      if (modbus_get_signal_status("Lado_Correr") == 1):
      else:
        $ 1845 "ElseIf Lado_Correr≟0"
        if (modbus_get_signal_status("Lado_Correr") == 0):
        else:
          $ 1847 "Else" "noBreak"
          $ 1848 "Lado≔ False "
          global Lado=  False  
          $ 1849 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
  def Quitar_Broca_Chida():
    $ 1850 "Quitar_Broca_Chida" "noBreak"
    $ 1851 "If Lado_Correr≟2"
    if (modbus_get_signal_status("Lado_Correr") == 2):
      $ 1852 "Quitar_Broca"
      $ 1853 "MoveJ"
      $ 1854 "Loop 1 times"
      Loop_3 = 0
      while (Loop_3 < 1):
        $ 1855 "MoveL"
        $ 1856 "MoveJ"
        $ 1857 "Precambio_der" "breakAfter"
        movej(get_inverse_kin(Precambio_der_p, qnear=Precambio_der_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 1858 "Dejar_der" "breakAfter"
        movel(Dejar_der_p, a=0.08, v=0.1)
        $ 1859 "Wait: 0.5"
        sleep(0.5)
        $ 1860 "freedrive_mode()"
        freedrive_mode()
        $ 1861 "Wait: 2.0"
        sleep(2.0)
        $ 1862 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1863 "Set outputbroc_m291=Encender"
        modbus_set_output_signal("outputbroc_m291", True)
        $ 1864 "Wait: 0.5"
        sleep(0.5)
        $ 1865 "Set outputbroc_m291=Apagar"
        modbus_set_output_signal("outputbroc_m291", False)
        $ 1866 "Wait: 0.5"
        sleep(0.5)
        $ 1867 "Wait fciclocarr_m292=LO"
        while (modbus_get_signal_status("fciclocarr_m292") == True):
          sync()
        end
        $ 1868 "Wait: 0.5"
        sleep(0.5)
        $ 1869 "freedrive_mode()"
        freedrive_mode()
        $ 1870 "Wait: 2.0"
        sleep(2.0)
        $ 1871 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1872 "Precambio_der" "breakAfter"
        movel(Precambio_der_p, a=1.2, v=0.25)
        $ 1873 "Set avancarrusel_m7=Encender"
        modbus_set_output_signal("avancarrusel_m7", True)
        $ 1874 "Wait: 1.1"
        sleep(1.1)
        $ 1875 "Set avancarrusel_m7=Apagar"
        modbus_set_output_signal("avancarrusel_m7", False)
        Loop_3 = Loop_3 + 1
      end
    else:
      $ 1876 "ElseIf Lado_Correr≟1"
      if (modbus_get_signal_status("Lado_Correr") == 1):
      else:
        $ 1878 "ElseIf Lado_Correr≟0"
        if (modbus_get_signal_status("Lado_Correr") == 0):
        else:
          $ 1880 "Else" "noBreak"
          $ 1881 "Lado≔ False "
          global Lado=  False  
          $ 1882 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
  def Calibracion():
    $ 1883 "Calibracion" "noBreak"
    $ 1904 "Offsets factor"
    $ 1905 "broca≔1645"
    global broca=1645
    $ 1906 "L1B1x≔((0.09525))"
    global L1B1x=((0.09525))
    $ 1907 "L1B1y≔((-0.0127))"
    global L1B1y=((-0.0127))
    $ 1908 "L1B2x≔((0.75565))"
    global L1B2x=((0.75565))
    $ 1909 "L1B2y≔(-0.0127)"
    global L1B2y=(-0.0127)
    $ 1910 "L2B1x≔((0.09525))"
    global L2B1x=((0.09525))
    $ 1911 "L2B1y≔((0.3937))"
    global L2B1y=((0.3937))
    $ 1912 "L2B2x≔((0.75565))"
    global L2B2x=((0.75565))
    $ 1913 "L2B2y≔((0.3937))"
    global L2B2y=((0.3937))
    $ 1914 "If Lado_Correr≟2"
    if (modbus_get_signal_status("Lado_Correr") == 2):
      $ 1915 "Subvariables"
      $ 1916 "muestras≔1"
      global muestras=1
      $ 1917 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1918 "P1≔p[0,0,0,0,0,0]"
      global P1=p[0,0,0,0,0,0]
      $ 1919 "P2≔p[0,0,0,0,0,0]"
      global P2=p[0,0,0,0,0,0]
      $ 1920 "P3≔p[0,0,0,0,0,0]"
      global P3=p[0,0,0,0,0,0]
      $ 1921 "P4≔p[0,0,0,0,0,0]"
      global P4=p[0,0,0,0,0,0]
      $ 1922 "P1h≔p[0,0,0,0,0,0]"
      global P1h=p[0,0,0,0,0,0]
      $ 1923 "P2h≔p[0,0,0,0,0,0]"
      global P2h=p[0,0,0,0,0,0]
      $ 1924 "altura≔0"
      global altura=0
      $ 1925 "rotaciones≔p[0,0,0,0,0,0]"
      global rotaciones=p[0,0,0,0,0,0]
      $ 1926 "PosFinal≔p[0,0,0,0,0,0]"
      global PosFinal=p[0,0,0,0,0,0]
      $ 1927 "m1≔0"
      global m1=0
      $ 1928 "m2≔0"
      global m2=0
      $ 1929 "b1≔0"
      global b1=0
      $ 1930 "b2≔0"
      global b2=0
      $ 1931 "Xd≔0"
      global Xd=0
      $ 1932 "Yd≔0"
      global Yd=0
      $ 1933 "Xp≔0"
      global Xp=0
      $ 1934 "Yp≔0"
      global Yp=0
      $ 1935 "Xfin≔0"
      global Xfin=0
      $ 1936 "Yfin≔0"
      global Yfin=0
      $ 1937 "Calibracion"
      $ 1938 "MoveL"
      $ 1939 "Direction: Base Z+"
      global move_thread_flag_1939=0
      thread move_thread_1939():
        enter_critical
        move_thread_flag_1939 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.1)
        movel(towardsPos, a=1.2, v=0.25)
        move_thread_flag_1939 = 2
        exit_critical
      end
      move_thread_flag_1939 = 0
      move_thread_han_1939 = run move_thread_1939()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1939 > 1):
          join move_thread_han_1939
          $ 1940 "Until (distance)"
          break
        end
        sync()
      end
      $ 1941 "MoveJ"
      $ 1942 "Zona_der1" "breakAfter"
      movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1943 "MoveL"
      $ 1944 "MoveJ"
      $ 1945 "If pos_eje7_mw13≟1"
      if (modbus_get_signal_status("pos_eje7_mw13") == 1):
        $ 1946 "Paso1_Der1" "breakAfter"
        movej(get_inverse_kin(Paso1_Der1_p, qnear=Paso1_Der1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 1947 "ElseIf pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1948 "Paso1_Der2" "breakAfter"
          movej(get_inverse_kin(Paso1_Der2_p, qnear=Paso1_Der2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 1949 "P1"
      $ 1950 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1951 "MoveJ"
        $ 1952 "If pos_eje7_mw13≟1"
        if (modbus_get_signal_status("pos_eje7_mw13") == 1):
          $ 1953 "Sacar1_der1" "breakAfter"
          movej(get_inverse_kin(Sacar1_der1_p, qnear=Sacar1_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1954 "ElseIf pos_eje7_mw13≟2"
          if (modbus_get_signal_status("pos_eje7_mw13") == 2):
            $ 1955 "Sacar1_der2" "breakAfter"
            movej(get_inverse_kin(Sacar1_der2_p, qnear=Sacar1_der2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1956 "Wait: 0.5"
        sleep(0.5)
        $ 1957 "Direction: Base Y+"
        global move_thread_flag_1957=0
        thread move_thread_1957():
          enter_critical
          move_thread_flag_1957 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,1.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1957 = 2
          exit_critical
        end
        move_thread_flag_1957 = 0
        move_thread_han_1957 = run move_thread_1957()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1957
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1958 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1959 "Wait: 2.0"
        sleep(2.0)
        $ 1960 "P1≔pose_add(get_actual_tcp_pose(), P1)"
        global P1= pose_add ( get_actual_tcp_pose (), P1)
        $ 1961 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1962 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1963 "var_1≔(P1[0])/muestras"
      global var_1=(P1[0])/muestras
      $ 1964 "var_2≔(P1[1])/muestras"
      global var_2=(P1[1])/muestras
      $ 1965 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1966 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1967 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1968 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1969 "P1≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P1=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 1970 "P1h"
      $ 1971 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1972 "Direction: Base Z+"
        global move_thread_flag_1972=0
        thread move_thread_1972():
          enter_critical
          move_thread_flag_1972 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
          movel(towardsPos, a=1.2, v=0.25)
          move_thread_flag_1972 = 2
          exit_critical
        end
        move_thread_flag_1972 = 0
        move_thread_han_1972 = run move_thread_1972()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1972 > 1):
            join move_thread_han_1972
            $ 1973 "Until (distance)"
            break
          end
          sync()
        end
        $ 1974 "MoveJ"
        $ 1975 "If pos_eje7_mw13≟1"
        if (modbus_get_signal_status("pos_eje7_mw13") == 1):
          $ 1976 "Sacar1h_der1" "breakAfter"
          movej(get_inverse_kin(Sacar1h_der1_p, qnear=Sacar1h_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1977 "ElseIf pos_eje7_mw13≟2"
          if (modbus_get_signal_status("pos_eje7_mw13") == 2):
            $ 1978 "Sacar1h_der2" "breakAfter"
            movej(get_inverse_kin(Sacar1h_der2_p, qnear=Sacar1h_der2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1979 "Wait: 0.5"
        sleep(0.5)
        $ 1980 "Direction: Base Z-"
        global move_thread_flag_1980=0
        thread move_thread_1980():
          enter_critical
          move_thread_flag_1980 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.02)
          movel(towardsPos, a=1.2, v=0.25)
          move_thread_flag_1980 = 2
          exit_critical
        end
        move_thread_flag_1980 = 0
        move_thread_han_1980 = run move_thread_1980()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1980 > 1):
            join move_thread_han_1980
            $ 1981 "Until (distance)"
            break
          end
          sync()
        end
        $ 1982 "Direction: Base Z-"
        global move_thread_flag_1982=0
        thread move_thread_1982():
          enter_critical
          move_thread_flag_1982 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1982 = 2
          exit_critical
        end
        move_thread_flag_1982 = 0
        move_thread_han_1982 = run move_thread_1982()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1982
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1983 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1984 "Wait: 2.0"
        sleep(2.0)
        $ 1985 "P1h≔pose_add(get_actual_tcp_pose(), P1h)"
        global P1h= pose_add ( get_actual_tcp_pose (), P1h)
        $ 1986 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1987 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1988 "var_1≔(P1h[0])/muestras"
      global var_1=(P1h[0])/muestras
      $ 1989 "var_2≔(P1h[1])/muestras"
      global var_2=(P1h[1])/muestras
      $ 1990 "var_9≔(P1h[2])/muestras"
      global var_9=(P1h[2])/muestras
      $ 1991 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1992 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1993 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1994 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1995 "P1h≔p[var_1,var_2,var_9,var_3,var_4,var_5]"
      global P1h=p[var_1,var_2,var_9,var_3,var_4,var_5]
      $ 1996 "MoveJ"
      $ 1997 "If pos_eje7_mw13≟1"
      if (modbus_get_signal_status("pos_eje7_mw13") == 1):
        $ 1998 "Paso1_Der1" "breakAfter"
        movej(get_inverse_kin(Paso1_Der1_p, qnear=Paso1_Der1_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 1999 "Waypoint_9" "breakAfter"
        movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 2000 "ElseIf pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 2001 "Paso1_Der2" "breakAfter"
          movej(get_inverse_kin(Paso1_Der2_p, qnear=Paso1_Der2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 2002 "P2"
      $ 2003 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 2004 "MoveJ"
        $ 2005 "If pos_eje7_mw13≟1"
        if (modbus_get_signal_status("pos_eje7_mw13") == 1):
          $ 2006 "Sacar2_der1" "breakAfter"
          movej(get_inverse_kin(Sacar2_der1_p, qnear=Sacar2_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 2007 "ElseIf pos_eje7_mw13≟2"
          if (modbus_get_signal_status("pos_eje7_mw13") == 2):
            $ 2008 "Sacar2_der2" "breakAfter"
            movej(get_inverse_kin(Sacar2_der2_p, qnear=Sacar2_der2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 2009 "Wait: 0.5"
        sleep(0.5)
        $ 2010 "Direction: Base Y+"
        global move_thread_flag_2010=0
        thread move_thread_2010():
          enter_critical
          move_thread_flag_2010 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,1.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_2010 = 2
          exit_critical
        end
        move_thread_flag_2010 = 0
        move_thread_han_2010 = run move_thread_2010()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_2010
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 2011 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 2012 "Wait: 2.0"
        sleep(2.0)
        $ 2013 "P2≔pose_add(get_actual_tcp_pose(), P2)"
        global P2= pose_add ( get_actual_tcp_pose (), P2)
        $ 2014 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 2015 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 2016 "var_1≔(P2[0])/muestras"
      global var_1=(P2[0])/muestras
      $ 2017 "var_2≔(P2[1])/muestras"
      global var_2=(P2[1])/muestras
      $ 2018 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2019 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2020 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2021 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2022 "P2≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P2=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 2023 "P2h"
      $ 2024 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 2025 "MoveJ"
        $ 2026 "If pos_eje7_mw13≟1"
        if (modbus_get_signal_status("pos_eje7_mw13") == 1):
          $ 2027 "Waypoint_11" "breakAfter"
          movej(get_inverse_kin(Waypoint_11_p, qnear=Waypoint_11_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 2028 "Waypoint_10" "breakAfter"
          movej(get_inverse_kin(Waypoint_10_p, qnear=Waypoint_10_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 2029 "ElseIf pos_eje7_mw13≟2"
          if (modbus_get_signal_status("pos_eje7_mw13") == 2):
            $ 2030 "Paso1_Der2" "breakAfter"
            movej(get_inverse_kin(Paso1_Der2_p, qnear=Paso1_Der2_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 2031 "Sacar2h_der2" "breakAfter"
            movej(get_inverse_kin(Sacar2h_der2_p, qnear=Sacar2h_der2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 2032 "Wait: 0.5"
        sleep(0.5)
        $ 2033 "Direction: Base Z-"
        global move_thread_flag_2033=0
        thread move_thread_2033():
          enter_critical
          move_thread_flag_2033 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_2033 = 2
          exit_critical
        end
        move_thread_flag_2033 = 0
        move_thread_han_2033 = run move_thread_2033()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_2033
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 2034 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 2035 "Wait: 2.0"
        sleep(2.0)
        $ 2036 "P2h≔pose_add(get_actual_tcp_pose(), P2h)"
        global P2h= pose_add ( get_actual_tcp_pose (), P2h)
        $ 2037 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 2038 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 2039 "var_1≔(P2h[0])/muestras"
      global var_1=(P2h[0])/muestras
      $ 2040 "var_2≔(P2h[1])/muestras"
      global var_2=(P2h[1])/muestras
      $ 2041 "var_9≔(P2h[2])/muestras"
      global var_9=(P2h[2])/muestras
      $ 2042 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2043 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2044 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2045 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2046 "P2h≔p[var_1,var_2,var_9,var_3,var_4,var_5]"
      global P2h=p[var_1,var_2,var_9,var_3,var_4,var_5]
      $ 2047 "MoveJ"
      $ 2048 "If pos_eje7_mw13≟1"
      if (modbus_get_signal_status("pos_eje7_mw13") == 1):
        $ 2049 "Waypoint_9" "breakAfter"
        movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 2050 "Paso1_Der1" "breakAfter"
        movej(get_inverse_kin(Paso1_Der1_p, qnear=Paso1_Der1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 2051 "ElseIf pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 2052 "Paso1_Der2" "breakAfter"
          movej(get_inverse_kin(Paso1_Der2_p, qnear=Paso1_Der2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 2053 "m1"
      $ 2054 "var_1≔(P1[0])"
      global var_1=(P1[0])
      $ 2055 "var_2≔(P1[1])"
      global var_2=(P1[1])
      $ 2056 "var_3≔(P2[0])"
      global var_3=(P2[0])
      $ 2057 "var_4≔(P2[1])"
      global var_4=(P2[1])
      $ 2058 "m1≔(var_4-var_2)/(var_3-var_1)"
      global m1=(var_4-var_2)/(var_3-var_1)
      $ 2059 "b1"
      $ 2060 "b1≔((m1*var_1)-var_2)*(-1)"
      global b1=((m1*var_1)-var_2)*(-1)
      $ 2061 "MoveJ"
      $ 2062 "If pos_eje7_mw13≟1"
      if (modbus_get_signal_status("pos_eje7_mw13") == 1):
        $ 2063 "Paso2_der1" "breakAfter"
        movej(get_inverse_kin(Paso2_der1_p, qnear=Paso2_der1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 2064 "ElseIf pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 2065 "Paso2_der2" "breakAfter"
          movej(get_inverse_kin(Paso2_der2_p, qnear=Paso2_der2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 2066 "P3"
      $ 2067 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 2068 "MoveJ"
        $ 2069 "If pos_eje7_mw13≟1"
        if (modbus_get_signal_status("pos_eje7_mw13") == 1):
          $ 2070 "Sacar3_der1" "breakAfter"
          movej(get_inverse_kin(Sacar3_der1_p, qnear=Sacar3_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 2071 "ElseIf pos_eje7_mw13≟2"
          if (modbus_get_signal_status("pos_eje7_mw13") == 2):
            $ 2072 "Sacar3_der2" "breakAfter"
            movej(get_inverse_kin(Sacar3_der2_p, qnear=Sacar3_der2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 2073 "Wait: 0.5"
        sleep(0.5)
        $ 2074 "Direction: Base X+"
        global move_thread_flag_2074=0
        thread move_thread_2074():
          enter_critical
          move_thread_flag_2074 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [1.0,0.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_2074 = 2
          exit_critical
        end
        move_thread_flag_2074 = 0
        move_thread_han_2074 = run move_thread_2074()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_2074
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 2075 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 2076 "Wait: 2.0"
        sleep(2.0)
        $ 2077 "P3≔pose_add(get_actual_tcp_pose(), P3)"
        global P3= pose_add ( get_actual_tcp_pose (), P3)
        $ 2078 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 2079 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 2080 "var_1≔(P3[0])/muestras"
      global var_1=(P3[0])/muestras
      $ 2081 "var_2≔(P3[1])/muestras"
      global var_2=(P3[1])/muestras
      $ 2082 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2083 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2084 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2085 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2086 "P3≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P3=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 2087 "MoveJ"
      $ 2088 "If pos_eje7_mw13≟1"
      if (modbus_get_signal_status("pos_eje7_mw13") == 1):
        $ 2089 "Paso2_der1" "breakAfter"
        movej(get_inverse_kin(Paso2_der1_p, qnear=Paso2_der1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 2090 "ElseIf pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 2091 "Paso2_der2" "breakAfter"
          movej(get_inverse_kin(Paso2_der2_p, qnear=Paso2_der2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 2092 "P4"
      $ 2093 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 2094 "MoveJ"
        $ 2095 "If pos_eje7_mw13≟1"
        if (modbus_get_signal_status("pos_eje7_mw13") == 1):
          $ 2096 "Sacar4_der1" "breakAfter"
          movej(get_inverse_kin(Sacar4_der1_p, qnear=Sacar4_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 2097 "ElseIf pos_eje7_mw13≟2"
          if (modbus_get_signal_status("pos_eje7_mw13") == 2):
            $ 2098 "Sacar4_der2" "breakAfter"
            movej(get_inverse_kin(Sacar4_der2_p, qnear=Sacar4_der2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 2099 "Wait: 0.5"
        sleep(0.5)
        $ 2100 "Direction: Base X+"
        global move_thread_flag_2100=0
        thread move_thread_2100():
          enter_critical
          move_thread_flag_2100 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [1.0,0.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_2100 = 2
          exit_critical
        end
        move_thread_flag_2100 = 0
        move_thread_han_2100 = run move_thread_2100()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_2100
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 2101 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 2102 "Wait: 2.0"
        sleep(2.0)
        $ 2103 "P4≔pose_add(get_actual_tcp_pose(), P4)"
        global P4= pose_add ( get_actual_tcp_pose (), P4)
        $ 2104 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 2105 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 2106 "var_1≔(P4[0])/muestras"
      global var_1=(P4[0])/muestras
      $ 2107 "var_2≔(P4[1])/muestras"
      global var_2=(P4[1])/muestras
      $ 2108 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2109 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2110 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2111 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2112 "P4≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P4=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 2113 "MoveJ"
      $ 2114 "If pos_eje7_mw13≟1"
      if (modbus_get_signal_status("pos_eje7_mw13") == 1):
        $ 2115 "Paso2_der1" "breakAfter"
        movej(get_inverse_kin(Paso2_der1_p, qnear=Paso2_der1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 2116 "ElseIf pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 2117 "Paso2_der2" "breakAfter"
          movej(get_inverse_kin(Paso2_der2_p, qnear=Paso2_der2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 2118 "m2"
      $ 2119 "var_1≔(P3[0])"
      global var_1=(P3[0])
      $ 2120 "var_2≔(P3[1])"
      global var_2=(P3[1])
      $ 2121 "var_3≔(P4[0])"
      global var_3=(P4[0])
      $ 2122 "var_4≔(P4[1])"
      global var_4=(P4[1])
      $ 2123 "m2≔(var_4-var_2)/(var_3-var_1)"
      global m2=(var_4-var_2)/(var_3-var_1)
      $ 2124 "b2"
      $ 2125 "b2≔((m2*var_1)-var_2)*(-1)"
      global b2=((m2*var_1)-var_2)*(-1)
      $ 2126 "Xd y Yd"
      $ 2127 "Xd≔(b2-b1)/(m1-m2)"
      global Xd=(b2-b1)/(m1-m2)
      $ 2128 "Yd≔(m1*Xd)+b1"
      global Yd=(m1*Xd)+b1
      $ 2133 "Xp y Yp"
      $ 2134 "Xp≔((1)/(sqrt((m1*m1)+1)))*(1)"
      global Xp=((1)/(sqrt((m1*m1)+1)))*(1)
      $ 2135 "Yp≔((m2)/(sqrt((m2*m2)+1)))*(1)"
      global Yp=((m2)/(sqrt((m2*m2)+1)))*(1)
      $ 2136 "Origen"
      $ 2137 "Xfin≔((0*Xp)-(Xd)-(0*(1/m2)))*(-1)"
      global Xfin=((0*Xp)-(Xd)-(0*(1/m2)))*(-1)
      $ 2138 "Yfin≔((0*Yp)-(Yd)+(0*m1))*(-1)"
      global Yfin=((0*Yp)-(Yd)+(0*m1))*(-1)
      $ 2139 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2140 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2141 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2142 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2143 "If broca≟1645"
      if (broca == 1645):
        $ 2144 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.065,var_3,var_4,var_5]"
        global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.065,var_3,var_4,var_5]
      else:
        $ 2145 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2146 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]
        else:
          $ 2147 "ElseIf broca≟217"
          if (broca == 217):
            $ 2148 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]
          end
        end
      end
      $ 2149 "origen≔PosFinal"
      global origen=PosFinal
      $ 2150 "Linea1_Buje1"
      $ 2151 "Xfin≔(((L1B1x)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1)"
      global Xfin=(((L1B1x)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1)
      $ 2152 "Yfin≔(((L1B1y)*Yp)-(Yd)+((L1B1x)*m1))*(-1)"
      global Yfin=(((L1B1y)*Yp)-(Yd)+((L1B1x)*m1))*(-1)
      $ 2153 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2154 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2155 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2156 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2157 "If broca≟1645"
      if (broca == 1645):
        $ 2158 "PosFinal≔p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]
      else:
        $ 2159 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2160 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]
        else:
          $ 2161 "ElseIf broca≟217"
          if (broca == 217):
            $ 2162 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]
          end
        end
      end
      $ 2163 "Linea1_Buje1≔PosFinal"
      global Linea1_Buje1=PosFinal
      $ 2164 "Linea1_Buje27"
      $ 2165 "Xfin≔(((L1B2x)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1)"
      global Xfin=(((L1B2x)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1)
      $ 2166 "Yfin≔(((L1B2y)*Yp)-(Yd)+((L1B2x)*m1))*(-1)"
      global Yfin=(((L1B2y)*Yp)-(Yd)+((L1B2x)*m1))*(-1)
      $ 2167 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2168 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2169 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2170 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2171 "If broca≟1645"
      if (broca == 1645):
        $ 2172 "PosFinal≔p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]
      else:
        $ 2173 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2174 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]
        else:
          $ 2175 "ElseIf broca≟217"
          if (broca == 217):
            $ 2176 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]
          end
        end
      end
      $ 2177 "Linea1_Buje27≔PosFinal"
      global Linea1_Buje27=PosFinal
      $ 2178 "Linea2_Buje1"
      $ 2179 "Xfin≔(((L2B1x)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1)"
      global Xfin=(((L2B1x)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1)
      $ 2180 "Yfin≔(((L2B1y)*Yp)-(Yd)+((L2B1x)*m1))*(-1)"
      global Yfin=(((L2B1y)*Yp)-(Yd)+((L2B1x)*m1))*(-1)
      $ 2181 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2182 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2183 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2184 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2185 "If broca≟1645"
      if (broca == 1645):
        $ 2186 "PosFinal≔p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]
      else:
        $ 2187 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2188 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]
        else:
          $ 2189 "ElseIf broca≟217"
          if (broca == 217):
            $ 2190 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]
          end
        end
      end
      $ 2191 "Linea2_Buje1≔PosFinal"
      global Linea2_Buje1=PosFinal
      $ 2192 "Linea2_Buje27"
      $ 2193 "Xfin≔(((L2B2x)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1)"
      global Xfin=(((L2B2x)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1)
      $ 2194 "Yfin≔(((L2B2y)*Yp)-(Yd)+((L2B2x)*m1))*(-1)"
      global Yfin=(((L2B2y)*Yp)-(Yd)+((L2B2x)*m1))*(-1)
      $ 2195 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2196 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2197 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2198 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2199 "If broca≟1645"
      if (broca == 1645):
        $ 2200 "PosFinal≔p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin+0.00208915)*1000,(Yfin+0.00208915)*1000,0.065,var_3,var_4,var_5]
      else:
        $ 2201 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2202 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.065,var_3,var_4,var_5]
        else:
          $ 2203 "ElseIf broca≟217"
          if (broca == 217):
            $ 2204 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.065,var_3,var_4,var_5]
          end
        end
      end
      $ 2205 "Linea2_Buje27≔PosFinal"
      global Linea2_Buje27=PosFinal
      $ 2206 "Altura"
      $ 2207 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 2208 "altura≔(P2h[2]-P1h[2])*1000"
        global altura=(P2h[2]-P1h[2])*1000
        $ 2209 "alta≔(P2h[2])"
        global alta=(P2h[2])
      else:
        $ 2210 "Else" "noBreak"
        $ 2211 "altura≔(P1h[2]-P2h[2])*1000"
        global altura=(P1h[2]-P2h[2])*1000
        $ 2212 "alta≔(P1h[2])"
        global alta=(P1h[2])
      end
      $ 2213 "Direction: Base Z+"
      global move_thread_flag_2213=0
      thread move_thread_2213():
        enter_critical
        move_thread_flag_2213 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.1)
        movel(towardsPos, a=1.2, v=0.25)
        move_thread_flag_2213 = 2
        exit_critical
      end
      move_thread_flag_2213 = 0
      move_thread_han_2213 = run move_thread_2213()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_2213 > 1):
          join move_thread_han_2213
          $ 2214 "Until (distance)"
          break
        end
        sync()
      end
      $ 2215 "MoveJ"
      $ 2216 "Zona_der1" "breakAfter"
      movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
    else:
      $ 2217 "ElseIf Lado_Correr≟1"
      if (modbus_get_signal_status("Lado_Correr") == 1):
      else:
        $ 2219 "ElseIf Lado_Correr≟0"
        if (modbus_get_signal_status("Lado_Correr") == 0):
        else:
          $ 2221 "Else" "noBreak"
          $ 2222 "Lado≔ False "
          global Lado=  False  
          $ 2223 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
  while (True):
    $ 1 "Robot Program"
    $ 9 "Set salida0=Encender"
    set_standard_digital_out(0, True)
    $ 10 "MoveJ"
    $ 11 "Off_derecha" "breakAfter"
    movej(get_inverse_kin(Off_derecha_p, qnear=Off_derecha_q), a=0.8726646259971648, v=0.5235987755982988)
    $ 12 "broca≔1645"
    global broca=1645
    $ 13 "textmsg('----------DAS-----------')"
    textmsg("----------DAS-----------")
    $ 14 "If Lado_Correr≟2"
    if (modbus_get_signal_status("Lado_Correr") == 2):
      $ 15 "If pos_sig_der≟0"
      if (modbus_get_signal_status("pos_sig_der") == 0):
        $ 16 "Arranque"
        $ 17 "Set mensaje_mw10=15"
        modbus_set_output_register("mensaje_mw10", 15)
        $ 18 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 19 "Wait: 1.0"
        sleep(1.0)
        $ 20 "MoveJ"
        $ 21 "Off_derecha" "breakAfter"
        movej(get_inverse_kin(Off_derecha_p, qnear=Off_derecha_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 22 "Set postrnas_m187=Encender"
        modbus_set_output_signal("postrnas_m187", True)
        $ 23 "Wait: 1.0"
        sleep(1.0)
        $ 24 "Set Home_M20=Encender"
        modbus_set_output_signal("Home_M20", True)
        $ 25 "Wait: 1.0"
        sleep(1.0)
        $ 26 "Set postrnas_m187=Apagar"
        modbus_set_output_signal("postrnas_m187", False)
        $ 27 "Set Home_M20=Apagar"
        modbus_set_output_signal("Home_M20", False)
        $ 28 "Set mensaje_mw10=20"
        modbus_set_output_register("mensaje_mw10", 20)
        $ 29 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 30 "Wait: 1.0"
        sleep(1.0)
        $ 31 "Traslacion"
        $ 32 "Set mensaje_mw10=25"
        modbus_set_output_register("mensaje_mw10", 25)
        $ 33 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 34 "Wait: 1.0"
        sleep(1.0)
        $ 35 "MoveJ"
        $ 36 "Waypoint_8" "breakAfter"
        movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 37 "Traslacion_der" "breakAfter"
        movej(get_inverse_kin(Traslacion_der_p, qnear=Traslacion_der_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 38 "Set mensaje_mw10=30"
        modbus_set_output_register("mensaje_mw10", 30)
        $ 39 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 40 "Wait: 1.0"
        sleep(1.0)
        $ 41 "Set postrnas_m187=Encender"
        modbus_set_output_signal("postrnas_m187", True)
        $ 42 "Wait: 1.0"
        sleep(1.0)
        $ 43 "Set pose2_m252=Encender"
        modbus_set_output_signal("pose2_m252", True)
        $ 44 "Wait: 1.0"
        sleep(1.0)
        $ 45 "Set pose2_m252=Apagar"
        modbus_set_output_signal("pose2_m252", False)
        $ 46 "Set postrnas_m187=Apagar"
        modbus_set_output_signal("postrnas_m187", False)
        $ 47 "Wait: 10.0"
        sleep(10.0)
        $ 48 "Set mensaje_mw10=35"
        modbus_set_output_register("mensaje_mw10", 35)
        $ 49 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 50 "Wait: 1.0"
        sleep(1.0)
        $ 51 "Brocas"
        $ 52 "Set carrusel_home=Encender"
        modbus_set_output_signal("carrusel_home", True)
        $ 53 "Wait: 1.0"
        sleep(1.0)
        $ 54 "Set carrusel_home=Apagar"
        modbus_set_output_signal("carrusel_home", False)
        $ 55 "Set mensaje_mw10=40"
        modbus_set_output_register("mensaje_mw10", 40)
        $ 56 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 57 "Wait: 1.0"
        sleep(1.0)
        $ 58 "Set carrusel_home=Encender"
        modbus_set_output_signal("carrusel_home", True)
        $ 59 "Wait: 1.0"
        sleep(1.0)
        $ 60 "Set carrusel_home=Apagar"
        modbus_set_output_signal("carrusel_home", False)
        $ 61 "Set mensaje_mw10=45"
        modbus_set_output_register("mensaje_mw10", 45)
        $ 62 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 63 "Wait: 1.0"
        sleep(1.0)
        $ 64 "Call Poner_Broca"
        Poner_Broca()
        $ 65 "Offsets factor"
        $ 67 "L1B1x≔((0.09525254)/(0.09525))*(0.09525254)"
        global L1B1x=((0.09525254)/(0.09525))*(0.09525254)
        $ 68 "L1B1y≔((-0.01266698)/(-0.0127))*(-0.01266698)"
        global L1B1y=((-0.01266698)/(-0.0127))*(-0.01266698)
        $ 69 "L1B2x≔((0.75576176)/(0.75565))*(0.75576176)"
        global L1B2x=((0.75576176)/(0.75565))*(0.75576176)
        $ 70 "L1B2y≔((-0.01269238)/(-0.0127))*(-0.01269238)"
        global L1B2y=((-0.01269238)/(-0.0127))*(-0.01269238)
        $ 71 "L2B1x≔((0.09513062)/(0.09525))*(0.09525)"
        global L2B1x=((0.09513062)/(0.09525))*(0.09525)
        $ 72 "L2B1y≔((0.39369238)/(0.3937))*(0.39369238)"
        global L2B1y=((0.39369238)/(0.3937))*(0.39369238)
        $ 73 "L2B2x≔((0.75565508)/(0.75565))*(0.75565508)"
        global L2B2x=((0.75565508)/(0.75565))*(0.75565508)
        $ 74 "L2B2y≔((0.39372032)/(0.3937))*(0.39372032)"
        global L2B2y=((0.39372032)/(0.3937))*(0.39372032)
        $ 75 "Calibracion"
        $ 76 "Set mensaje_mw10=50"
        modbus_set_output_register("mensaje_mw10", 50)
        $ 77 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 78 "Wait: 1.0"
        sleep(1.0)
        $ 79 "MoveJ"
        $ 80 "Posicion_Cero" "breakAfter"
        movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 81 "Zona_der1" "breakAfter"
        movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 82 "broca≔1645"
        global broca=1645
        $ 83 "Set mensaje_mw10=125"
        modbus_set_output_register("mensaje_mw10", 125)
        $ 84 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 85 "Wait: 1.0"
        sleep(1.0)
        $ 86 "Set mensaje_mw10=130"
        modbus_set_output_register("mensaje_mw10", 130)
        $ 87 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 88 "Wait: 1.0"
        sleep(1.0)
        $ 89 "Call Calibracion"
        Calibracion()
        $ 90 "GoNoGo"
        $ 91 "Set mensaje_mw10=55"
        modbus_set_output_register("mensaje_mw10", 55)
        $ 92 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 93 "Wait: 1.0"
        sleep(1.0)
        $ 94 "Set mensaje_mw10=60"
        modbus_set_output_register("mensaje_mw10", 60)
        $ 95 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 96 "Wait: 1.0"
        sleep(1.0)
        $ 97 "Linea1_Buje1"
        $ 98 "Xfin≔(((L1B1x)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1)"
        global Xfin=(((L1B1x)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1)
        $ 99 "Yfin≔(((L1B1y)*Yp)-(Yd)+((L1B1x)*m1))*(-1)"
        global Yfin=(((L1B1y)*Yp)-(Yd)+((L1B1x)*m1))*(-1)
        $ 100 "rotaciones≔get_actual_tcp_pose()"
        global rotaciones= get_actual_tcp_pose ()
        $ 101 "var_3≔rotaciones[3]"
        global var_3=rotaciones[3]
        $ 102 "var_4≔rotaciones[4]"
        global var_4=rotaciones[4]
        $ 103 "var_5≔rotaciones[5]"
        global var_5=rotaciones[5]
        $ 104 "If broca≟1645"
        if (broca == 1645):
          $ 105 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
        else:
          $ 106 "ElseIf broca≟1935"
          if (broca == 1935):
            $ 107 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
          else:
            $ 108 "ElseIf broca≟217"
            if (broca == 217):
              $ 109 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
            end
          end
        end
        $ 110 "Buje_Final≔PosFinal"
        global Buje_Final=PosFinal
        $ 111 "MoveJ"
        $ 112 "Buje_Final" "breakAfter"
        movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
        $ 113 "Wait: 1.0"
        sleep(1.0)
        $ 114 "Alturas"
        $ 115 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 116 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 117 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
          $ 118 "MoveL"
          $ 119 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        else:
          $ 120 "Else" "noBreak"
          $ 121 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 122 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
          $ 123 "MoveL"
          $ 124 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        end
        $ 125 "MoveL"
        $ 126 "Freemove"
        $ 127 "Wait: 2.0"
        sleep(2.0)
        $ 128 "freedrive_mode()"
        freedrive_mode()
        $ 129 "Wait: 2.5"
        sleep(2.5)
        $ 130 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 131 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 132 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
        global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
        $ 133 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 134 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
        global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
        $ 135 "Direction: Base Z+"
        global move_thread_flag_135=0
        thread move_thread_135():
          enter_critical
          move_thread_flag_135 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
          movel(towardsPos, a=0.08, v=0.06)
          move_thread_flag_135 = 2
          exit_critical
        end
        move_thread_flag_135 = 0
        move_thread_han_135 = run move_thread_135()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_135 > 1):
            join move_thread_han_135
            $ 136 "Until (distance)"
            break
          end
          sync()
        end
        $ 137 "Direction: Base X-"
        global move_thread_flag_137=0
        thread move_thread_137():
          enter_critical
          move_thread_flag_137 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [-1.0,0.0,0.0], 0.42)
          movel(towardsPos, a=0.08, v=0.06)
          move_thread_flag_137 = 2
          exit_critical
        end
        move_thread_flag_137 = 0
        move_thread_han_137 = run move_thread_137()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_137 > 1):
            join move_thread_han_137
            $ 138 "Until (distance)"
            break
          end
          sync()
        end
        $ 139 "L1B1≔var_11"
        global L1B1=var_11
        $ 140 "Linea1_Buje2"
        $ 141 "Xfin≔(((L1B2x)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1)"
        global Xfin=(((L1B2x)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1)
        $ 142 "Yfin≔(((L1B2y)*Yp)-(Yd)+((L1B2x)*m1))*(-1)"
        global Yfin=(((L1B2y)*Yp)-(Yd)+((L1B2x)*m1))*(-1)
        $ 143 "rotaciones≔get_actual_tcp_pose()"
        global rotaciones= get_actual_tcp_pose ()
        $ 144 "var_3≔rotaciones[3]"
        global var_3=rotaciones[3]
        $ 145 "var_4≔rotaciones[4]"
        global var_4=rotaciones[4]
        $ 146 "var_5≔rotaciones[5]"
        global var_5=rotaciones[5]
        $ 147 "If broca≟1645"
        if (broca == 1645):
          $ 148 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
        else:
          $ 149 "ElseIf broca≟1935"
          if (broca == 1935):
            $ 150 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
          else:
            $ 151 "ElseIf broca≟217"
            if (broca == 217):
              $ 152 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
            end
          end
        end
        $ 153 "Buje_Final≔PosFinal"
        global Buje_Final=PosFinal
        $ 154 "MoveJ"
        $ 155 "Buje_Final" "breakAfter"
        movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
        $ 156 "Wait: 1.0"
        sleep(1.0)
        $ 157 "Alturas"
        $ 158 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 159 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 160 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
          $ 161 "MoveL"
          $ 162 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        else:
          $ 163 "Else" "noBreak"
          $ 164 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 165 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
          $ 166 "MoveL"
          $ 167 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        end
        $ 168 "MoveL"
        $ 169 "Freemove"
        $ 170 "Wait: 2.0"
        sleep(2.0)
        $ 171 "freedrive_mode()"
        freedrive_mode()
        $ 172 "Wait: 2.5"
        sleep(2.5)
        $ 173 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 174 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 175 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
        global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
        $ 176 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 177 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
        global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
        $ 178 "Direction: Base Z+"
        global move_thread_flag_178=0
        thread move_thread_178():
          enter_critical
          move_thread_flag_178 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
          movel(towardsPos, a=0.08, v=0.06)
          move_thread_flag_178 = 2
          exit_critical
        end
        move_thread_flag_178 = 0
        move_thread_han_178 = run move_thread_178()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_178 > 1):
            join move_thread_han_178
            $ 179 "Until (distance)"
            break
          end
          sync()
        end
        $ 180 "L1B2≔var_11"
        global L1B2=var_11
        $ 181 "Linea2_Buje2"
        $ 182 "Xfin≔(((L2B2x)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1)"
        global Xfin=(((L2B2x)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1)
        $ 183 "Yfin≔(((L2B2y)*Yp)-(Yd)+((L2B2x)*m1))*(-1)"
        global Yfin=(((L2B2y)*Yp)-(Yd)+((L2B2x)*m1))*(-1)
        $ 184 "rotaciones≔get_actual_tcp_pose()"
        global rotaciones= get_actual_tcp_pose ()
        $ 185 "var_3≔rotaciones[3]"
        global var_3=rotaciones[3]
        $ 186 "var_4≔rotaciones[4]"
        global var_4=rotaciones[4]
        $ 187 "var_5≔rotaciones[5]"
        global var_5=rotaciones[5]
        $ 188 "If broca≟1645"
        if (broca == 1645):
          $ 189 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
        else:
          $ 190 "ElseIf broca≟1935"
          if (broca == 1935):
            $ 191 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
          else:
            $ 192 "ElseIf broca≟217"
            if (broca == 217):
              $ 193 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
            end
          end
        end
        $ 194 "Buje_Final≔PosFinal"
        global Buje_Final=PosFinal
        $ 195 "MoveJ"
        $ 196 "Buje_Final" "breakAfter"
        movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
        $ 197 "Wait: 1.0"
        sleep(1.0)
        $ 198 "Alturas"
        $ 199 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 200 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 201 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
          $ 202 "MoveL"
          $ 203 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        else:
          $ 204 "Else" "noBreak"
          $ 205 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 206 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
          $ 207 "MoveL"
          $ 208 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        end
        $ 209 "MoveL"
        $ 210 "Freemove"
        $ 211 "Wait: 2.0"
        sleep(2.0)
        $ 212 "freedrive_mode()"
        freedrive_mode()
        $ 213 "Wait: 2.5"
        sleep(2.5)
        $ 214 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 215 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 216 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
        global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
        $ 217 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 218 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
        global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
        $ 219 "Direction: Base Z+"
        global move_thread_flag_219=0
        thread move_thread_219():
          enter_critical
          move_thread_flag_219 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
          movel(towardsPos, a=0.08, v=0.06)
          move_thread_flag_219 = 2
          exit_critical
        end
        move_thread_flag_219 = 0
        move_thread_han_219 = run move_thread_219()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_219 > 1):
            join move_thread_han_219
            $ 220 "Until (distance)"
            break
          end
          sync()
        end
        $ 221 "L2B2≔var_11"
        global L2B2=var_11
        $ 222 "Linea2_Buje1"
        $ 223 "Xfin≔(((L2B1x)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1)"
        global Xfin=(((L2B1x)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1)
        $ 224 "Yfin≔(((L2B1y)*Yp)-(Yd)+((L2B1x)*m1))*(-1)"
        global Yfin=(((L2B1y)*Yp)-(Yd)+((L2B1x)*m1))*(-1)
        $ 225 "rotaciones≔get_actual_tcp_pose()"
        global rotaciones= get_actual_tcp_pose ()
        $ 226 "var_3≔rotaciones[3]"
        global var_3=rotaciones[3]
        $ 227 "var_4≔rotaciones[4]"
        global var_4=rotaciones[4]
        $ 228 "var_5≔rotaciones[5]"
        global var_5=rotaciones[5]
        $ 229 "If broca≟1645"
        if (broca == 1645):
          $ 230 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
          global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
        else:
          $ 231 "ElseIf broca≟1935"
          if (broca == 1935):
            $ 232 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
          else:
            $ 233 "ElseIf broca≟217"
            if (broca == 217):
              $ 234 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
            end
          end
        end
        $ 235 "Buje_Final≔PosFinal"
        global Buje_Final=PosFinal
        $ 236 "MoveJ"
        $ 237 "Buje_Final" "breakAfter"
        movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
        $ 238 "Wait: 1.0"
        sleep(1.0)
        $ 239 "Alturas"
        $ 240 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 241 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 242 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
          $ 243 "MoveL"
          $ 244 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        else:
          $ 245 "Else" "noBreak"
          $ 246 "tcp≔get_actual_tcp_pose()"
          global tcp= get_actual_tcp_pose ()
          $ 247 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
          global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
          $ 248 "MoveL"
          $ 249 "offset_altura" "breakAfter"
          movel(offset_altura, a=0.04, v=0.03)
        end
        $ 250 "MoveL"
        $ 251 "Freemove"
        $ 252 "Wait: 2.0"
        sleep(2.0)
        $ 253 "freedrive_mode()"
        freedrive_mode()
        $ 254 "Wait: 2.5"
        sleep(2.5)
        $ 255 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 256 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 257 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
        global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
        $ 258 "var_11≔get_actual_tcp_pose()"
        global var_11= get_actual_tcp_pose ()
        $ 259 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
        global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
        $ 260 "Direction: Base Z+"
        global move_thread_flag_260=0
        thread move_thread_260():
          enter_critical
          move_thread_flag_260 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
          movel(towardsPos, a=0.08, v=0.06)
          move_thread_flag_260 = 2
          exit_critical
        end
        move_thread_flag_260 = 0
        move_thread_han_260 = run move_thread_260()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_260 > 1):
            join move_thread_han_260
            $ 261 "Until (distance)"
            break
          end
          sync()
        end
        $ 262 "L2B1≔var_11"
        global L2B1=var_11
        $ 263 "MoveJ"
        $ 264 "Zona_der1" "breakAfter"
        movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 265 "Colocar broca"
        $ 266 "Call Quitar_Broca_Chida"
        Quitar_Broca_Chida()
        $ 267 "Call Poner_Broca"
        Poner_Broca()
        $ 283 "Barrenado"
        $ 284 "Set mensaje_mw10=65"
        modbus_set_output_register("mensaje_mw10", 65)
        $ 285 "Wait Continuar_M30=HI"
        while (modbus_get_signal_status("Continuar_M30") == False):
          sync()
        end
        $ 286 "Wait: 1.0"
        sleep(1.0)
        $ 287 "Set mensaje_mw10=150"
        modbus_set_output_register("mensaje_mw10", 150)
        $ 288 "Wait: 1.0"
        sleep(1.0)
        $ 289 "Linea 1 a 1645"
        $ 290 "broca≔1645"
        global broca=1645
        $ 291 "Buje_inicial"
        $ 292 "Buje_Inicial≔L1B2"
        global Buje_Inicial=L1B2
        $ 293 "Buje_final"
        $ 294 "Buje_Final≔L1B1"
        global Buje_Final=L1B1
        $ 295 "barrenosTotales≔27"
        global barrenosTotales=27
        $ 296 "barrenoActual≔1"
        global barrenoActual=1
        $ 297 "Loop barrenoActual≤barrenosTotales"
        while (barrenoActual <= barrenosTotales):
          $ 298 "MoveL"
          $ 299 "bajada_broca≔p[0,0,0.006,0,0,0]"
          global bajada_broca=p[0,0,0.006,0,0,0]
          $ 300 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
          global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
          $ 301 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
          if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
            $ 302 "Set mensaje_mw10=200"
            modbus_set_output_register("mensaje_mw10", 200)
            $ 303 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 304 "Wait: 1.0"
            sleep(1.0)
            $ 305 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 306 "Wait: 1.0"
            sleep(1.0)
          end
          $ 307 "MoveJ"
          $ 308 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 309 "Wait: 2.0"
          sleep(2.0)
          $ 310 "Alturas"
          $ 311 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 312 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
            global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
            $ 313 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 314 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 315 "MoveL"
            $ 316 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 317 "Else" "noBreak"
            $ 318 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
            global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
            $ 319 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 320 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 321 "MoveL"
            $ 322 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 323 "Freemove"
          $ 324 "Wait: 2.0"
          sleep(2.0)
          $ 325 "freedrive_mode()"
          freedrive_mode()
          $ 326 "Wait: 2.5"
          sleep(2.5)
          $ 327 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 328 "Wait: 0.3"
          sleep(0.3)
          $ 329 "Set CO[1]=Encender"
          set_configurable_digital_out(1, True)
          $ 330 "Wait: 1.0"
          sleep(1.0)
          $ 331 "Wait: 0.3"
          sleep(0.3)
          $ 332 "Wait: 0.3"
          sleep(0.3)
          $ 333 "Wait: 0.3"
          sleep(0.3)
          $ 334 "Loop 3 times"
          Loop_59 = 0
          while (Loop_59 < 3):
            $ 335 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
            $ 336 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.005, v=0.001)
            $ 337 "If bajada_broca≟p[0,0,0.018,0,0,0]"
            if (bajada_broca == p[0,0,0.018,0,0,0]):
              $ 338 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
              global num_barreno=str_cat("Barreno: ",barrenoActual)
              $ 339 "tcp_actual≔get_actual_tcp_pose()"
              global tcp_actual= get_actual_tcp_pose ()
              $ 340 "X_actual≔str_cat('     X: ',tcp_actual[0])"
              global X_actual=str_cat("     X: ",tcp_actual[0])
              $ 341 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
              global Y_actual=str_cat("     Y: ",tcp_actual[1])
              $ 342 "pos_barreno≔str_cat(X_actual,Y_actual)"
              global pos_barreno=str_cat(X_actual,Y_actual)
              $ 343 "textmsg(num_barreno,pos_barreno)"
              textmsg(num_barreno,pos_barreno)
            end
            $ 344 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
            $ 345 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.01, v=0.01)
            $ 346 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
            global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
            Loop_59 = Loop_59 + 1
          end
          $ 347 "Direction: Base Z+"
          global move_thread_flag_347=0
          thread move_thread_347():
            enter_critical
            move_thread_flag_347 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
            movel(towardsPos, a=0.04, v=0.03)
            move_thread_flag_347 = 2
            exit_critical
          end
          move_thread_flag_347 = 0
          move_thread_han_347 = run move_thread_347()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_347 > 1):
              join move_thread_han_347
              $ 348 "Until (distance)"
              break
            end
            sync()
          end
          $ 349 "MoveJ"
          $ 350 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 351 "Wait: 0.3"
          sleep(0.3)
          $ 352 "Set CO[1]=Apagar"
          set_configurable_digital_out(1, False)
          $ 353 "Wait: 0.3"
          sleep(0.3)
          $ 354 "If barrenoActual≟13 or barrenoActual≟27"
          if (barrenoActual == 13  or  barrenoActual == 27):
            $ 355 "Direction: Base Z+"
            global move_thread_flag_355=0
            thread move_thread_355():
              enter_critical
              move_thread_flag_355 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=0.04, v=0.03)
              move_thread_flag_355 = 2
              exit_critical
            end
            move_thread_flag_355 = 0
            move_thread_han_355 = run move_thread_355()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_355 > 1):
                join move_thread_han_355
                $ 356 "Until (distance)"
                break
              end
              sync()
            end
            $ 357 "MoveJ"
            $ 358 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 359 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 360 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 361 "If barrenoActual≟13"
            if (barrenoActual == 13):
              $ 362 "Call Poner_Broca"
              Poner_Broca()
            else:
              $ 363 "ElseIf barrenoActual≟27"
              if (barrenoActual == 27):
                $ 364 "Call Poner_Broca"
                Poner_Broca()
              end
            end
            $ 365 "MoveJ"
            $ 366 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 367 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
          end
          $ 368 "barrenoActual≔barrenoActual+1"
          global barrenoActual=barrenoActual+1
        end
        $ 369 "Linea 2 a 1645"
        $ 370 "broca≔1645"
        global broca=1645
        $ 371 "Buje_inicial"
        $ 372 "Buje_Inicial≔L2B2"
        global Buje_Inicial=L2B2
        $ 373 "Buje_final"
        $ 374 "Buje_Final≔L2B1"
        global Buje_Final=L2B1
        $ 375 "barrenosTotales≔27"
        global barrenosTotales=27
        $ 376 "barrenoActual≔1"
        global barrenoActual=1
        $ 377 "Loop barrenoActual≤barrenosTotales"
        while (barrenoActual <= barrenosTotales):
          $ 378 "MoveL"
          $ 379 "bajada_broca≔p[0,0,0.006,0,0,0]"
          global bajada_broca=p[0,0,0.006,0,0,0]
          $ 380 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
          global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
          $ 381 "Alturas"
          $ 382 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
          if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
            $ 383 "Set mensaje_mw10=200"
            modbus_set_output_register("mensaje_mw10", 200)
            $ 384 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 385 "Wait: 1.0"
            sleep(1.0)
            $ 386 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 387 "Wait: 1.0"
            sleep(1.0)
          end
          $ 388 "MoveJ"
          $ 389 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 390 "Wait: 2.0"
          sleep(2.0)
          $ 391 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 392 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
            global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
            $ 393 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 394 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 395 "MoveL"
            $ 396 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 397 "Else" "noBreak"
            $ 398 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
            global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
            $ 399 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 400 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 401 "MoveL"
            $ 402 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 403 "Freemove"
          $ 404 "Wait: 2.0"
          sleep(2.0)
          $ 405 "freedrive_mode()"
          freedrive_mode()
          $ 406 "Wait: 2.5"
          sleep(2.5)
          $ 407 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 408 "Wait: 0.3"
          sleep(0.3)
          $ 409 "Set CO[1]=Encender"
          set_configurable_digital_out(1, True)
          $ 410 "Wait: 1.0"
          sleep(1.0)
          $ 411 "Wait: 0.3"
          sleep(0.3)
          $ 412 "Wait: 0.3"
          sleep(0.3)
          $ 413 "Wait: 0.3"
          sleep(0.3)
          $ 414 "Loop 3 times"
          Loop_61 = 0
          while (Loop_61 < 3):
            $ 415 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
            $ 416 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.005, v=0.001)
            $ 417 "If bajada_broca≟p[0,0,0.018,0,0,0]"
            if (bajada_broca == p[0,0,0.018,0,0,0]):
              $ 418 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
              global num_barreno=str_cat("Barreno: ",barrenoActual)
              $ 419 "tcp_actual≔get_actual_tcp_pose()"
              global tcp_actual= get_actual_tcp_pose ()
              $ 420 "X_actual≔str_cat('     X: ',tcp_actual[0])"
              global X_actual=str_cat("     X: ",tcp_actual[0])
              $ 421 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
              global Y_actual=str_cat("     Y: ",tcp_actual[1])
              $ 422 "pos_barreno≔str_cat(X_actual,Y_actual)"
              global pos_barreno=str_cat(X_actual,Y_actual)
              $ 423 "textmsg(num_barreno,pos_barreno)"
              textmsg(num_barreno,pos_barreno)
            end
            $ 424 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
            $ 425 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.01, v=0.01)
            $ 426 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
            global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
            Loop_61 = Loop_61 + 1
          end
          $ 427 "Direction: Base Z+"
          global move_thread_flag_427=0
          thread move_thread_427():
            enter_critical
            move_thread_flag_427 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
            movel(towardsPos, a=0.04, v=0.03)
            move_thread_flag_427 = 2
            exit_critical
          end
          move_thread_flag_427 = 0
          move_thread_han_427 = run move_thread_427()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_427 > 1):
              join move_thread_han_427
              $ 428 "Until (distance)"
              break
            end
            sync()
          end
          $ 429 "MoveJ"
          $ 430 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 431 "Wait: 0.3"
          sleep(0.3)
          $ 432 "Set CO[1]=Apagar"
          set_configurable_digital_out(1, False)
          $ 433 "Wait: 0.3"
          sleep(0.3)
          $ 434 "If barrenoActual≟13"
          if (barrenoActual == 13):
            $ 435 "Direction: Base Z+"
            global move_thread_flag_435=0
            thread move_thread_435():
              enter_critical
              move_thread_flag_435 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_435 = 2
              exit_critical
            end
            move_thread_flag_435 = 0
            move_thread_han_435 = run move_thread_435()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_435 > 1):
                join move_thread_han_435
                $ 436 "Until (distance)"
                break
              end
              sync()
            end
            $ 437 "MoveJ"
            $ 438 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 439 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 440 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 441 "Call Poner_Broca"
            Poner_Broca()
            $ 442 "MoveJ"
            $ 443 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 444 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
          else:
            $ 445 "ElseIf barrenoActual≟27"
            if (barrenoActual == 27):
              $ 446 "Direction: Base Z+"
              global move_thread_flag_446=0
              thread move_thread_446():
                enter_critical
                move_thread_flag_446 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=1.2, v=0.25)
                move_thread_flag_446 = 2
                exit_critical
              end
              move_thread_flag_446 = 0
              move_thread_han_446 = run move_thread_446()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_446 > 1):
                  join move_thread_han_446
                  $ 447 "Until (distance)"
                  break
                end
                sync()
              end
              $ 448 "MoveJ"
              $ 449 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 450 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 451 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 452 "Set carrusel_home=Encender"
              modbus_set_output_signal("carrusel_home", True)
              $ 453 "Wait: 1.0"
              sleep(1.0)
              $ 454 "Set carrusel_home=Apagar"
              modbus_set_output_signal("carrusel_home", False)
              $ 455 "Set mensaje_mw10=70"
              modbus_set_output_register("mensaje_mw10", 70)
              $ 456 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 457 "Wait: 1.0"
              sleep(1.0)
              $ 458 "Set mensaje_mw10=120"
              modbus_set_output_register("mensaje_mw10", 120)
              $ 459 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 460 "Wait: 1.0"
              sleep(1.0)
              $ 461 "Set carrusel_home=Encender"
              modbus_set_output_signal("carrusel_home", True)
              $ 462 "Wait: 1.0"
              sleep(1.0)
              $ 463 "Set carrusel_home=Apagar"
              modbus_set_output_signal("carrusel_home", False)
              $ 464 "Set mensaje_mw10=75"
              modbus_set_output_register("mensaje_mw10", 75)
              $ 465 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 466 "Wait: 1.0"
              sleep(1.0)
              $ 467 "Call Poner_Broca"
              Poner_Broca()
              $ 468 "broca≔1935"
              global broca=1935
              $ 469 "MoveJ"
              $ 470 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 471 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 472 "Set mensaje_mw10=80"
              modbus_set_output_register("mensaje_mw10", 80)
              $ 473 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 474 "Wait: 1.0"
              sleep(1.0)
              $ 475 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 476 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 477 "Wait: 1.0"
              sleep(1.0)
            end
          end
          $ 478 "barrenoActual≔barrenoActual+1"
          global barrenoActual=barrenoActual+1
        end
        $ 479 "Linea 1 a 1935"
        $ 480 "broca≔1935"
        global broca=1935
        $ 481 "Buje_inicial"
        $ 482 "Buje_Inicial≔L1B2"
        global Buje_Inicial=L1B2
        $ 483 "Buje_final"
        $ 484 "Buje_Final≔L1B1"
        global Buje_Final=L1B1
        $ 485 "barrenosTotales≔27"
        global barrenosTotales=27
        $ 486 "barrenoActual≔1"
        global barrenoActual=1
        $ 487 "Loop barrenoActual≤barrenosTotales"
        while (barrenoActual <= barrenosTotales):
          $ 488 "MoveL"
          $ 489 "bajada_broca≔p[0,0,0.009,0,0,0]"
          global bajada_broca=p[0,0,0.009,0,0,0]
          $ 490 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
          global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
          $ 491 "Alturas"
          $ 492 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
          if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
            $ 493 "Set mensaje_mw10=200"
            modbus_set_output_register("mensaje_mw10", 200)
            $ 494 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 495 "Wait: 1.0"
            sleep(1.0)
            $ 496 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 497 "Wait: 1.0"
            sleep(1.0)
          end
          $ 498 "MoveJ"
          $ 499 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 500 "Wait: 2.0"
          sleep(2.0)
          $ 501 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 502 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
            global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
            $ 503 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 504 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 505 "MoveL"
            $ 506 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 507 "Else" "noBreak"
            $ 508 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
            global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
            $ 509 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 510 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 511 "MoveL"
            $ 512 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 513 "Freemove"
          $ 514 "Wait: 2.0"
          sleep(2.0)
          $ 515 "freedrive_mode()"
          freedrive_mode()
          $ 516 "Wait: 2.5"
          sleep(2.5)
          $ 517 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 518 "Wait: 0.3"
          sleep(0.3)
          $ 519 "Set CO[1]=Encender"
          set_configurable_digital_out(1, True)
          $ 520 "Wait: 1.0"
          sleep(1.0)
          $ 521 "Wait: 0.3"
          sleep(0.3)
          $ 522 "Wait: 0.3"
          sleep(0.3)
          $ 523 "Wait: 0.3"
          sleep(0.3)
          $ 524 "Loop 2 times"
          Loop_63 = 0
          while (Loop_63 < 2):
            $ 525 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
            $ 526 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.005, v=0.001)
            $ 527 "If bajada_broca≟p[0,0,0.018,0,0,0]"
            if (bajada_broca == p[0,0,0.018,0,0,0]):
              $ 528 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
              global num_barreno=str_cat("Barreno: ",barrenoActual)
              $ 529 "tcp_actual≔get_actual_tcp_pose()"
              global tcp_actual= get_actual_tcp_pose ()
              $ 530 "X_actual≔str_cat('     X: ',tcp_actual[0])"
              global X_actual=str_cat("     X: ",tcp_actual[0])
              $ 531 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
              global Y_actual=str_cat("     Y: ",tcp_actual[1])
              $ 532 "pos_barreno≔str_cat(X_actual,Y_actual)"
              global pos_barreno=str_cat(X_actual,Y_actual)
              $ 533 "textmsg(num_barreno,pos_barreno)"
              textmsg(num_barreno,pos_barreno)
            end
            $ 534 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
            $ 535 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.01, v=0.01)
            $ 536 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
            global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
            Loop_63 = Loop_63 + 1
          end
          $ 537 "Direction: Base Z+"
          global move_thread_flag_537=0
          thread move_thread_537():
            enter_critical
            move_thread_flag_537 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
            movel(towardsPos, a=0.01, v=0.01)
            move_thread_flag_537 = 2
            exit_critical
          end
          move_thread_flag_537 = 0
          move_thread_han_537 = run move_thread_537()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_537 > 1):
              join move_thread_han_537
              $ 538 "Until (distance)"
              break
            end
            sync()
          end
          $ 539 "MoveJ"
          $ 540 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 541 "Wait: 0.3"
          sleep(0.3)
          $ 542 "Set CO[1]=Apagar"
          set_configurable_digital_out(1, False)
          $ 543 "Wait: 0.3"
          sleep(0.3)
          $ 544 "If barrenoActual≟13 or barrenoActual≟27"
          if (barrenoActual == 13  or  barrenoActual == 27):
            $ 545 "Direction: Base Z+"
            global move_thread_flag_545=0
            thread move_thread_545():
              enter_critical
              move_thread_flag_545 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=0.04, v=0.03)
              move_thread_flag_545 = 2
              exit_critical
            end
            move_thread_flag_545 = 0
            move_thread_han_545 = run move_thread_545()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_545 > 1):
                join move_thread_han_545
                $ 546 "Until (distance)"
                break
              end
              sync()
            end
            $ 547 "MoveJ"
            $ 548 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 549 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 550 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 551 "If barrenoActual≟13"
            if (barrenoActual == 13):
              $ 552 "Call Poner_Broca"
              Poner_Broca()
            else:
              $ 553 "ElseIf barrenoActual≟27"
              if (barrenoActual == 27):
                $ 554 "Call Poner_Broca"
                Poner_Broca()
              end
            end
            $ 555 "MoveJ"
            $ 556 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 557 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
          end
          $ 558 "barrenoActual≔barrenoActual+1"
          global barrenoActual=barrenoActual+1
        end
        $ 559 "Linea 2 a 1935"
        $ 560 "broca≔1935"
        global broca=1935
        $ 561 "Buje_inicial"
        $ 562 "Buje_Inicial≔L2B2"
        global Buje_Inicial=L2B2
        $ 563 "Buje_final"
        $ 564 "Buje_Final≔L2B1"
        global Buje_Final=L2B1
        $ 565 "barrenosTotales≔27"
        global barrenosTotales=27
        $ 566 "barrenoActual≔1"
        global barrenoActual=1
        $ 567 "Loop barrenoActual≤barrenosTotales"
        while (barrenoActual <= barrenosTotales):
          $ 568 "MoveL"
          $ 569 "bajada_broca≔p[0,0,0.009,0,0,0]"
          global bajada_broca=p[0,0,0.009,0,0,0]
          $ 570 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
          global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
          $ 571 "Alturas"
          $ 572 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
          if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
            $ 573 "Set mensaje_mw10=200"
            modbus_set_output_register("mensaje_mw10", 200)
            $ 574 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 575 "Wait: 1.0"
            sleep(1.0)
            $ 576 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 577 "Wait: 1.0"
            sleep(1.0)
          end
          $ 578 "MoveJ"
          $ 579 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 580 "Wait: 2.0"
          sleep(2.0)
          $ 581 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 582 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
            global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
            $ 583 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 584 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 585 "MoveL"
            $ 586 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 587 "Else" "noBreak"
            $ 588 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
            global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
            $ 589 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 590 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 591 "MoveL"
            $ 592 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 593 "Freemove"
          $ 594 "Wait: 2.0"
          sleep(2.0)
          $ 595 "freedrive_mode()"
          freedrive_mode()
          $ 596 "Wait: 2.5"
          sleep(2.5)
          $ 597 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 598 "Wait: 0.3"
          sleep(0.3)
          $ 599 "Set CO[1]=Encender"
          set_configurable_digital_out(1, True)
          $ 600 "Wait: 1.0"
          sleep(1.0)
          $ 601 "Wait: 0.3"
          sleep(0.3)
          $ 602 "Wait: 0.3"
          sleep(0.3)
          $ 603 "Wait: 0.3"
          sleep(0.3)
          $ 604 "Loop 2 times"
          Loop_65 = 0
          while (Loop_65 < 2):
            $ 605 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
            $ 606 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.005, v=0.001)
            $ 607 "If bajada_broca≟p[0,0,0.018,0,0,0]"
            if (bajada_broca == p[0,0,0.018,0,0,0]):
              $ 608 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
              global num_barreno=str_cat("Barreno: ",barrenoActual)
              $ 609 "tcp_actual≔get_actual_tcp_pose()"
              global tcp_actual= get_actual_tcp_pose ()
              $ 610 "X_actual≔str_cat('     X: ',tcp_actual[0])"
              global X_actual=str_cat("     X: ",tcp_actual[0])
              $ 611 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
              global Y_actual=str_cat("     Y: ",tcp_actual[1])
              $ 612 "pos_barreno≔str_cat(X_actual,Y_actual)"
              global pos_barreno=str_cat(X_actual,Y_actual)
              $ 613 "textmsg(num_barreno,pos_barreno)"
              textmsg(num_barreno,pos_barreno)
            end
            $ 614 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
            $ 615 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.01, v=0.01)
            $ 616 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
            global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
            Loop_65 = Loop_65 + 1
          end
          $ 617 "Direction: Base Z+"
          global move_thread_flag_617=0
          thread move_thread_617():
            enter_critical
            move_thread_flag_617 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
            movel(towardsPos, a=0.01, v=0.01)
            move_thread_flag_617 = 2
            exit_critical
          end
          move_thread_flag_617 = 0
          move_thread_han_617 = run move_thread_617()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_617 > 1):
              join move_thread_han_617
              $ 618 "Until (distance)"
              break
            end
            sync()
          end
          $ 619 "MoveJ"
          $ 620 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 621 "Wait: 0.3"
          sleep(0.3)
          $ 622 "Set CO[1]=Apagar"
          set_configurable_digital_out(1, False)
          $ 623 "Wait: 0.3"
          sleep(0.3)
          $ 624 "If barrenoActual≟13"
          if (barrenoActual == 13):
            $ 625 "Direction: Base Z+"
            global move_thread_flag_625=0
            thread move_thread_625():
              enter_critical
              move_thread_flag_625 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=0.04, v=0.03)
              move_thread_flag_625 = 2
              exit_critical
            end
            move_thread_flag_625 = 0
            move_thread_han_625 = run move_thread_625()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_625 > 1):
                join move_thread_han_625
                $ 626 "Until (distance)"
                break
              end
              sync()
            end
            $ 627 "MoveJ"
            $ 628 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 629 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 630 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 631 "Call Poner_Broca"
            Poner_Broca()
            $ 632 "MoveJ"
            $ 633 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 634 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
          else:
            $ 635 "ElseIf barrenoActual≟27"
            if (barrenoActual == 27):
              $ 636 "Direction: Base Z+"
              global move_thread_flag_636=0
              thread move_thread_636():
                enter_critical
                move_thread_flag_636 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.04, v=0.03)
                move_thread_flag_636 = 2
                exit_critical
              end
              move_thread_flag_636 = 0
              move_thread_han_636 = run move_thread_636()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_636 > 1):
                  join move_thread_han_636
                  $ 637 "Until (distance)"
                  break
                end
                sync()
              end
              $ 638 "MoveJ"
              $ 639 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 640 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 641 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 642 "Set carrusel_home=Encender"
              modbus_set_output_signal("carrusel_home", True)
              $ 643 "Wait: 1.0"
              sleep(1.0)
              $ 644 "Set carrusel_home=Apagar"
              modbus_set_output_signal("carrusel_home", False)
              $ 645 "Set mensaje_mw10=85"
              modbus_set_output_register("mensaje_mw10", 85)
              $ 646 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 647 "Wait: 1.0"
              sleep(1.0)
              $ 648 "Set mensaje_mw10=120"
              modbus_set_output_register("mensaje_mw10", 120)
              $ 649 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 650 "Wait: 1.0"
              sleep(1.0)
              $ 651 "Set carrusel_home=Encender"
              modbus_set_output_signal("carrusel_home", True)
              $ 652 "Wait: 1.0"
              sleep(1.0)
              $ 653 "Set carrusel_home=Apagar"
              modbus_set_output_signal("carrusel_home", False)
              $ 654 "Set mensaje_mw10=90"
              modbus_set_output_register("mensaje_mw10", 90)
              $ 655 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 656 "Wait: 1.0"
              sleep(1.0)
              $ 657 "Call Poner_Broca"
              Poner_Broca()
              $ 658 "broca≔217"
              global broca=217
              $ 659 "MoveJ"
              $ 660 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 661 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 662 "Set mensaje_mw10=95"
              modbus_set_output_register("mensaje_mw10", 95)
              $ 663 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 664 "Wait: 1.0"
              sleep(1.0)
              $ 665 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 666 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 667 "Wait: 1.0"
              sleep(1.0)
            end
          end
          $ 668 "barrenoActual≔barrenoActual+1"
          global barrenoActual=barrenoActual+1
        end
        $ 669 "Linea 1 a 217"
        $ 670 "broca≔217"
        global broca=217
        $ 671 "Buje_inicial"
        $ 672 "Buje_Inicial≔L1B2"
        global Buje_Inicial=L1B2
        $ 673 "Buje_final"
        $ 674 "Buje_Final≔L1B1"
        global Buje_Final=L1B1
        $ 675 "barrenosTotales≔27"
        global barrenosTotales=27
        $ 676 "barrenoActual≔1"
        global barrenoActual=1
        $ 677 "Loop barrenoActual≤barrenosTotales"
        while (barrenoActual <= barrenosTotales):
          $ 678 "MoveL"
          $ 679 "bajada_broca≔p[0,0,0.018,0,0,0]"
          global bajada_broca=p[0,0,0.018,0,0,0]
          $ 680 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
          global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
          $ 681 "Wait: 2.0"
          sleep(2.0)
          $ 682 "Alturas"
          $ 683 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
          if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
            $ 684 "Set mensaje_mw10=200"
            modbus_set_output_register("mensaje_mw10", 200)
            $ 685 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 686 "Wait: 1.0"
            sleep(1.0)
            $ 687 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 688 "Wait: 1.0"
            sleep(1.0)
          end
          $ 689 "MoveJ"
          $ 690 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 691 "Wait: 2.0"
          sleep(2.0)
          $ 692 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 693 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
            global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
            $ 694 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 695 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 696 "MoveL"
            $ 697 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 698 "Else" "noBreak"
            $ 699 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
            global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
            $ 700 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 701 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 702 "MoveL"
            $ 703 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 704 "Freemove"
          $ 705 "Wait: 2.0"
          sleep(2.0)
          $ 706 "freedrive_mode()"
          freedrive_mode()
          $ 707 "Wait: 2.5"
          sleep(2.5)
          $ 708 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 709 "Wait: 0.3"
          sleep(0.3)
          $ 710 "Set CO[1]=Encender"
          set_configurable_digital_out(1, True)
          $ 711 "Wait: 1.0"
          sleep(1.0)
          $ 712 "Wait: 0.3"
          sleep(0.3)
          $ 713 "Wait: 0.3"
          sleep(0.3)
          $ 714 "Wait: 0.3"
          sleep(0.3)
          $ 715 "Loop 1 times"
          Loop_67 = 0
          while (Loop_67 < 1):
            $ 716 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
            $ 717 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.005, v=0.001)
            $ 718 "If bajada_broca≟p[0,0,0.018,0,0,0]"
            if (bajada_broca == p[0,0,0.018,0,0,0]):
              $ 719 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
              global num_barreno=str_cat("Barreno: ",barrenoActual)
              $ 720 "tcp_actual≔get_actual_tcp_pose()"
              global tcp_actual= get_actual_tcp_pose ()
              $ 721 "X_actual≔str_cat('     X: ',tcp_actual[0])"
              global X_actual=str_cat("     X: ",tcp_actual[0])
              $ 722 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
              global Y_actual=str_cat("     Y: ",tcp_actual[1])
              $ 723 "pos_barreno≔str_cat(X_actual,Y_actual)"
              global pos_barreno=str_cat(X_actual,Y_actual)
              $ 724 "textmsg(num_barreno,pos_barreno)"
              textmsg(num_barreno,pos_barreno)
            end
            $ 725 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
            $ 726 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.01, v=0.01)
            $ 727 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
            global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
            Loop_67 = Loop_67 + 1
          end
          $ 728 "Direction: Base Z+"
          global move_thread_flag_728=0
          thread move_thread_728():
            enter_critical
            move_thread_flag_728 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
            movel(towardsPos, a=0.01, v=0.01)
            move_thread_flag_728 = 2
            exit_critical
          end
          move_thread_flag_728 = 0
          move_thread_han_728 = run move_thread_728()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_728 > 1):
              join move_thread_han_728
              $ 729 "Until (distance)"
              break
            end
            sync()
          end
          $ 730 "MoveJ"
          $ 731 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 732 "Wait: 0.3"
          sleep(0.3)
          $ 733 "Set CO[1]=Apagar"
          set_configurable_digital_out(1, False)
          $ 734 "Wait: 0.3"
          sleep(0.3)
          $ 735 "If barrenoActual≟13 or barrenoActual≟27"
          if (barrenoActual == 13  or  barrenoActual == 27):
            $ 736 "Direction: Base Z+"
            global move_thread_flag_736=0
            thread move_thread_736():
              enter_critical
              move_thread_flag_736 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=0.03, v=0.04)
              move_thread_flag_736 = 2
              exit_critical
            end
            move_thread_flag_736 = 0
            move_thread_han_736 = run move_thread_736()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_736 > 1):
                join move_thread_han_736
                $ 737 "Until (distance)"
                break
              end
              sync()
            end
            $ 738 "MoveJ"
            $ 739 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 740 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 741 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 742 "If barrenoActual≟13"
            if (barrenoActual == 13):
              $ 743 "Call Poner_Broca"
              Poner_Broca()
            else:
              $ 744 "ElseIf barrenoActual≟27"
              if (barrenoActual == 27):
                $ 745 "Call Poner_Broca"
                Poner_Broca()
              end
            end
            $ 746 "MoveJ"
            $ 747 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
            $ 748 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
          end
          $ 749 "barrenoActual≔barrenoActual+1"
          global barrenoActual=barrenoActual+1
        end
        $ 750 "Linea 2 a 217"
        $ 751 "broca≔217"
        global broca=217
        $ 752 "Buje_inicial"
        $ 753 "Buje_Inicial≔L2B2"
        global Buje_Inicial=L2B2
        $ 754 "Buje_final"
        $ 755 "Buje_Final≔L2B1"
        global Buje_Final=L2B1
        $ 756 "barrenosTotales≔27"
        global barrenosTotales=27
        $ 757 "barrenoActual≔1"
        global barrenoActual=1
        $ 758 "Loop barrenoActual≤barrenosTotales"
        while (barrenoActual <= barrenosTotales):
          $ 759 "MoveL"
          $ 760 "bajada_broca≔p[0,0,0.018,0,0,0]"
          global bajada_broca=p[0,0,0.018,0,0,0]
          $ 761 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
          global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
          $ 762 "Alturas"
          $ 763 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
          if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
            $ 764 "Set mensaje_mw10=200"
            modbus_set_output_register("mensaje_mw10", 200)
            $ 765 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 766 "Wait: 1.0"
            sleep(1.0)
            $ 767 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 768 "Wait: 1.0"
            sleep(1.0)
          end
          $ 769 "MoveJ"
          $ 770 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 771 "Wait: 2.0"
          sleep(2.0)
          $ 772 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 773 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
            global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
            $ 774 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 775 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 776 "MoveL"
            $ 777 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 778 "Else" "noBreak"
            $ 779 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
            global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
            $ 780 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 781 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
            $ 782 "MoveL"
            $ 783 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 784 "Freemove"
          $ 785 "Wait: 2.0"
          sleep(2.0)
          $ 786 "freedrive_mode()"
          freedrive_mode()
          $ 787 "Wait: 2.5"
          sleep(2.5)
          $ 788 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 789 "Wait: 0.3"
          sleep(0.3)
          $ 790 "Set CO[1]=Encender"
          set_configurable_digital_out(1, True)
          $ 791 "Wait: 1.0"
          sleep(1.0)
          $ 792 "Wait: 0.3"
          sleep(0.3)
          $ 793 "Wait: 0.3"
          sleep(0.3)
          $ 794 "Wait: 0.3"
          sleep(0.3)
          $ 795 "Loop 1 times"
          Loop_69 = 0
          while (Loop_69 < 1):
            $ 796 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
            $ 797 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.005, v=0.001)
            $ 798 "If bajada_broca≟p[0,0,0.018,0,0,0]"
            if (bajada_broca == p[0,0,0.018,0,0,0]):
              $ 799 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
              global num_barreno=str_cat("Barreno: ",barrenoActual)
              $ 800 "tcp_actual≔get_actual_tcp_pose()"
              global tcp_actual= get_actual_tcp_pose ()
              $ 801 "X_actual≔str_cat('     X: ',tcp_actual[0])"
              global X_actual=str_cat("     X: ",tcp_actual[0])
              $ 802 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
              global Y_actual=str_cat("     Y: ",tcp_actual[1])
              $ 803 "pos_barreno≔str_cat(X_actual,Y_actual)"
              global pos_barreno=str_cat(X_actual,Y_actual)
              $ 804 "textmsg(num_barreno,pos_barreno)"
              textmsg(num_barreno,pos_barreno)
            end
            $ 805 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
            global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
            $ 806 "Poses_taladrado" "breakAfter"
            movel(Poses_taladrado, a=0.01, v=0.01)
            $ 807 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
            global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
            Loop_69 = Loop_69 + 1
          end
          $ 808 "Direction: Base Z+"
          global move_thread_flag_808=0
          thread move_thread_808():
            enter_critical
            move_thread_flag_808 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
            movel(towardsPos, a=0.01, v=0.01)
            move_thread_flag_808 = 2
            exit_critical
          end
          move_thread_flag_808 = 0
          move_thread_han_808 = run move_thread_808()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_808 > 1):
              join move_thread_han_808
              $ 809 "Until (distance)"
              break
            end
            sync()
          end
          $ 810 "MoveJ"
          $ 811 "internos" "breakAfter"
          movej(internos, a=0.6981317007977318, v=0.5235987755982988)
          $ 812 "Wait: 0.3"
          sleep(0.3)
          $ 813 "Set CO[1]=Apagar"
          set_configurable_digital_out(1, False)
          $ 814 "Wait: 0.3"
          sleep(0.3)
          $ 815 "If barrenoActual≟13"
          if (barrenoActual == 13):
            $ 816 "Direction: Base Z+"
            global move_thread_flag_816=0
            thread move_thread_816():
              enter_critical
              move_thread_flag_816 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=0.04, v=0.03)
              move_thread_flag_816 = 2
              exit_critical
            end
            move_thread_flag_816 = 0
            move_thread_han_816 = run move_thread_816()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_816 > 1):
                join move_thread_han_816
                $ 817 "Until (distance)"
                break
              end
              sync()
            end
            $ 818 "MoveJ"
            $ 819 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 820 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 821 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 822 "Call Poner_Broca"
            Poner_Broca()
            $ 823 "MoveJ"
            $ 824 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 825 "Zona_der1" "breakAfter"
            movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
          else:
            $ 826 "ElseIf barrenoActual≟27"
            if (barrenoActual == 27):
              $ 827 "Direction: Base Z+"
              global move_thread_flag_827=0
              thread move_thread_827():
                enter_critical
                move_thread_flag_827 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.04, v=0.03)
                move_thread_flag_827 = 2
                exit_critical
              end
              move_thread_flag_827 = 0
              move_thread_han_827 = run move_thread_827()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_827 > 1):
                  join move_thread_han_827
                  $ 828 "Until (distance)"
                  break
                end
                sync()
              end
              $ 829 "MoveJ"
              $ 830 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 831 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 832 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 833 "Set carrusel_home=Encender"
              modbus_set_output_signal("carrusel_home", True)
              $ 834 "Wait: 1.0"
              sleep(1.0)
              $ 835 "Set carrusel_home=Apagar"
              modbus_set_output_signal("carrusel_home", False)
              $ 836 "Set mensaje_mw10=120"
              modbus_set_output_register("mensaje_mw10", 120)
              $ 837 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 838 "Wait: 1.0"
              sleep(1.0)
              $ 839 "Set mensaje_mw10=100"
              modbus_set_output_register("mensaje_mw10", 100)
              $ 840 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 841 "Wait: 1.0"
              sleep(1.0)
              $ 842 "MoveJ"
              $ 843 "Traslacion_der" "breakAfter"
              movej(get_inverse_kin(Traslacion_der_p, qnear=Traslacion_der_q), a=1.3962634015954636, v=1.0471975511965976)
            end
          end
          $ 844 "barrenoActual≔barrenoActual+1"
          global barrenoActual=barrenoActual+1
        end
        $ 845 "Set pos1_term_m611=Encender"
        modbus_set_output_signal("pos1_term_m611", True)
        $ 846 "Wait: 1.0"
        sleep(1.0)
        $ 847 "Set pos1_term_m611=Apagar"
        modbus_set_output_signal("pos1_term_m611", False)
      else:
        $ 848 "ElseIf pos_sig_der≟1"
        if (modbus_get_signal_status("pos_sig_der") == 1):
          $ 849 "Arranque"
          $ 850 "Set mensaje_mw10=15"
          modbus_set_output_register("mensaje_mw10", 15)
          $ 851 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 852 "Wait: 1.0"
          sleep(1.0)
          $ 853 "MoveJ"
          $ 854 "Off_derecha" "breakAfter"
          movej(get_inverse_kin(Off_derecha_p, qnear=Off_derecha_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 855 "Set postrnas_m187=Encender"
          modbus_set_output_signal("postrnas_m187", True)
          $ 856 "Wait: 1.0"
          sleep(1.0)
          $ 857 "Set Home_M20=Encender"
          modbus_set_output_signal("Home_M20", True)
          $ 858 "Wait: 1.0"
          sleep(1.0)
          $ 859 "Set postrnas_m187=Apagar"
          modbus_set_output_signal("postrnas_m187", False)
          $ 860 "Set Home_M20=Apagar"
          modbus_set_output_signal("Home_M20", False)
          $ 861 "Set mensaje_mw10=20"
          modbus_set_output_register("mensaje_mw10", 20)
          $ 862 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 863 "Wait: 1.0"
          sleep(1.0)
          $ 864 "Traslacion"
          $ 865 "Set mensaje_mw10=25"
          modbus_set_output_register("mensaje_mw10", 25)
          $ 866 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 867 "Wait: 1.0"
          sleep(1.0)
          $ 868 "MoveJ"
          $ 869 "Waypoint_8" "breakAfter"
          movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 870 "Traslacion_der" "breakAfter"
          movej(get_inverse_kin(Traslacion_der_p, qnear=Traslacion_der_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 871 "Set mensaje_mw10=105"
          modbus_set_output_register("mensaje_mw10", 105)
          $ 872 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 873 "Wait: 1.0"
          sleep(1.0)
          $ 874 "Set mensaje_mw10=145"
          modbus_set_output_register("mensaje_mw10", 145)
          $ 875 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 876 "Wait: 1.0"
          sleep(1.0)
          $ 877 "Set postrnas_m187=Encender"
          modbus_set_output_signal("postrnas_m187", True)
          $ 878 "Wait: 1.0"
          sleep(1.0)
          $ 879 "Set pos2_der_mw698=Encender"
          modbus_set_output_signal("pos2_der_mw698", True)
          $ 880 "Wait: 1.0"
          sleep(1.0)
          $ 881 "Set pos2_der_mw698=Apagar"
          modbus_set_output_signal("pos2_der_mw698", False)
          $ 882 "Set postrnas_m187=Apagar"
          modbus_set_output_signal("postrnas_m187", False)
          $ 883 "Wait: 10.0"
          sleep(10.0)
          $ 884 "Brocas"
          $ 885 "Set carrusel_home=Encender"
          modbus_set_output_signal("carrusel_home", True)
          $ 886 "Wait: 1.0"
          sleep(1.0)
          $ 887 "Set carrusel_home=Apagar"
          modbus_set_output_signal("carrusel_home", False)
          $ 888 "Set mensaje_mw10=40"
          modbus_set_output_register("mensaje_mw10", 40)
          $ 889 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 890 "Wait: 1.0"
          sleep(1.0)
          $ 891 "Set carrusel_home=Encender"
          modbus_set_output_signal("carrusel_home", True)
          $ 892 "Wait: 1.0"
          sleep(1.0)
          $ 893 "Set carrusel_home=Apagar"
          modbus_set_output_signal("carrusel_home", False)
          $ 894 "Set mensaje_mw10=45"
          modbus_set_output_register("mensaje_mw10", 45)
          $ 895 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 896 "Wait: 1.0"
          sleep(1.0)
          $ 897 "Call Poner_Broca"
          Poner_Broca()
          $ 898 "Offsets factor"
          $ 900 "L1B1x≔(((0.09525254)/(0.09525))*(0.09525254))*(1)"
          global L1B1x=(((0.09525254)/(0.09525))*(0.09525254))*(1)
          $ 901 "L1B1y≔(((-0.012)/(-0.0127))*(-0.012))*(1)"
          global L1B1y=(((-0.012)/(-0.0127))*(-0.012))*(1)
          $ 902 "L1B2x≔(((0.74)/(0.75565))*(0.74))*(1.0003)"
          global L1B2x=(((0.74)/(0.75565))*(0.74))*(1.0003)
          $ 903 "L1B2y≔(((-0.00986)/(-0.0127))*(-0.00986))*(1.0086956521739)"
          global L1B2y=(((-0.00986)/(-0.0127))*(-0.00986))*(1.0086956521739)
          $ 904 "L2B1x≔((0.09513062)/(0.09525))*(0.09525)"
          global L2B1x=((0.09513062)/(0.09525))*(0.09525)
          $ 905 "L2B1y≔((0.39369238)/(0.3937))*(0.39369238)"
          global L2B1y=((0.39369238)/(0.3937))*(0.39369238)
          $ 906 "L2B2x≔((0.75565508)/(0.75565))*(0.75565508)"
          global L2B2x=((0.75565508)/(0.75565))*(0.75565508)
          $ 907 "L2B2y≔((0.39290032)/(0.3937))*(0.39290032)"
          global L2B2y=((0.39290032)/(0.3937))*(0.39290032)
          $ 908 "Calibracion"
          $ 909 "Set mensaje_mw10=50"
          modbus_set_output_register("mensaje_mw10", 50)
          $ 910 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 911 "Wait: 1.0"
          sleep(1.0)
          $ 912 "MoveJ"
          $ 913 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 914 "Zona_der1" "breakAfter"
          movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 915 "broca≔1645"
          global broca=1645
          $ 916 "Set mensaje_mw10=125"
          modbus_set_output_register("mensaje_mw10", 125)
          $ 917 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 918 "Wait: 1.0"
          sleep(1.0)
          $ 919 "Set mensaje_mw10=130"
          modbus_set_output_register("mensaje_mw10", 130)
          $ 920 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 921 "Wait: 1.0"
          sleep(1.0)
          $ 922 "Call Calibracion"
          Calibracion()
          $ 923 "GoNoGo"
          $ 924 "Set mensaje_mw10=55"
          modbus_set_output_register("mensaje_mw10", 55)
          $ 925 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 926 "Wait: 1.0"
          sleep(1.0)
          $ 927 "Set mensaje_mw10=60"
          modbus_set_output_register("mensaje_mw10", 60)
          $ 928 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 929 "Wait: 1.0"
          sleep(1.0)
          $ 930 "Linea1_Buje1"
          $ 931 "Xfin≔(((L1B1x)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1)"
          global Xfin=(((L1B1x)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1)
          $ 932 "Yfin≔(((L1B1y)*Yp)-(Yd)+((L1B1x)*m1))*(-1)"
          global Yfin=(((L1B1y)*Yp)-(Yd)+((L1B1x)*m1))*(-1)
          $ 933 "rotaciones≔get_actual_tcp_pose()"
          global rotaciones= get_actual_tcp_pose ()
          $ 934 "var_3≔rotaciones[3]"
          global var_3=rotaciones[3]
          $ 935 "var_4≔rotaciones[4]"
          global var_4=rotaciones[4]
          $ 936 "var_5≔rotaciones[5]"
          global var_5=rotaciones[5]
          $ 937 "If broca≟1645"
          if (broca == 1645):
            $ 938 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
          else:
            $ 939 "ElseIf broca≟1935"
            if (broca == 1935):
              $ 940 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
            else:
              $ 941 "ElseIf broca≟217"
              if (broca == 217):
                $ 942 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
                global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
              end
            end
          end
          $ 943 "Buje_Final≔PosFinal"
          global Buje_Final=PosFinal
          $ 944 "MoveJ"
          $ 945 "Buje_Final" "breakAfter"
          movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
          $ 946 "Wait: 1.0"
          sleep(1.0)
          $ 947 "Alturas"
          $ 948 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 949 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 950 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
            $ 951 "MoveL"
            $ 952 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 953 "Else" "noBreak"
            $ 954 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 955 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
            $ 956 "MoveL"
            $ 957 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 958 "MoveL"
          $ 959 "Freemove"
          $ 960 "Wait: 2.0"
          sleep(2.0)
          $ 961 "freedrive_mode()"
          freedrive_mode()
          $ 962 "Wait: 2.5"
          sleep(2.5)
          $ 963 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 964 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 965 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
          global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
          $ 966 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 967 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
          global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
          $ 968 "Direction: Base Z+"
          global move_thread_flag_968=0
          thread move_thread_968():
            enter_critical
            move_thread_flag_968 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
            movel(towardsPos, a=0.08, v=0.06)
            move_thread_flag_968 = 2
            exit_critical
          end
          move_thread_flag_968 = 0
          move_thread_han_968 = run move_thread_968()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_968 > 1):
              join move_thread_han_968
              $ 969 "Until (distance)"
              break
            end
            sync()
          end
          $ 970 "Direction: Base X-"
          global move_thread_flag_970=0
          thread move_thread_970():
            enter_critical
            move_thread_flag_970 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [-1.0,0.0,0.0], 0.42)
            movel(towardsPos, a=0.08, v=0.06)
            move_thread_flag_970 = 2
            exit_critical
          end
          move_thread_flag_970 = 0
          move_thread_han_970 = run move_thread_970()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_970 > 1):
              join move_thread_han_970
              $ 971 "Until (distance)"
              break
            end
            sync()
          end
          $ 972 "L1B1≔var_11"
          global L1B1=var_11
          $ 973 "Linea1_Buje2"
          $ 974 "Xfin≔(((L1B2x)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1)"
          global Xfin=(((L1B2x)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1)
          $ 975 "Yfin≔(((L1B2y)*Yp)-(Yd)+((L1B2x)*m1))*(-1)"
          global Yfin=(((L1B2y)*Yp)-(Yd)+((L1B2x)*m1))*(-1)
          $ 976 "rotaciones≔get_actual_tcp_pose()"
          global rotaciones= get_actual_tcp_pose ()
          $ 977 "var_3≔rotaciones[3]"
          global var_3=rotaciones[3]
          $ 978 "var_4≔rotaciones[4]"
          global var_4=rotaciones[4]
          $ 979 "var_5≔rotaciones[5]"
          global var_5=rotaciones[5]
          $ 980 "If broca≟1645"
          if (broca == 1645):
            $ 981 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
          else:
            $ 982 "ElseIf broca≟1935"
            if (broca == 1935):
              $ 983 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
            else:
              $ 984 "ElseIf broca≟217"
              if (broca == 217):
                $ 985 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
                global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
              end
            end
          end
          $ 986 "Buje_Final≔PosFinal"
          global Buje_Final=PosFinal
          $ 987 "MoveJ"
          $ 988 "Buje_Final" "breakAfter"
          movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
          $ 989 "Wait: 1.0"
          sleep(1.0)
          $ 990 "Alturas"
          $ 991 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 992 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 993 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
            $ 994 "MoveL"
            $ 995 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 996 "Else" "noBreak"
            $ 997 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 998 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
            $ 999 "MoveL"
            $ 1000 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 1001 "MoveL"
          $ 1002 "Freemove"
          $ 1003 "Wait: 2.0"
          sleep(2.0)
          $ 1004 "freedrive_mode()"
          freedrive_mode()
          $ 1005 "Wait: 2.5"
          sleep(2.5)
          $ 1006 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 1007 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 1008 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
          global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
          $ 1009 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 1010 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
          global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
          $ 1011 "Direction: Base Z+"
          global move_thread_flag_1011=0
          thread move_thread_1011():
            enter_critical
            move_thread_flag_1011 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
            movel(towardsPos, a=0.08, v=0.06)
            move_thread_flag_1011 = 2
            exit_critical
          end
          move_thread_flag_1011 = 0
          move_thread_han_1011 = run move_thread_1011()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1011 > 1):
              join move_thread_han_1011
              $ 1012 "Until (distance)"
              break
            end
            sync()
          end
          $ 1013 "L1B2≔var_11"
          global L1B2=var_11
          $ 1014 "Linea2_Buje2"
          $ 1015 "Xfin≔(((L2B2x)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1)"
          global Xfin=(((L2B2x)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1)
          $ 1016 "Yfin≔(((L2B2y)*Yp)-(Yd)+((L2B2x)*m1))*(-1)"
          global Yfin=(((L2B2y)*Yp)-(Yd)+((L2B2x)*m1))*(-1)
          $ 1017 "rotaciones≔get_actual_tcp_pose()"
          global rotaciones= get_actual_tcp_pose ()
          $ 1018 "var_3≔rotaciones[3]"
          global var_3=rotaciones[3]
          $ 1019 "var_4≔rotaciones[4]"
          global var_4=rotaciones[4]
          $ 1020 "var_5≔rotaciones[5]"
          global var_5=rotaciones[5]
          $ 1021 "If broca≟1645"
          if (broca == 1645):
            $ 1022 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
          else:
            $ 1023 "ElseIf broca≟1935"
            if (broca == 1935):
              $ 1024 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
            else:
              $ 1025 "ElseIf broca≟217"
              if (broca == 217):
                $ 1026 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
                global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
              end
            end
          end
          $ 1027 "Buje_Final≔PosFinal"
          global Buje_Final=PosFinal
          $ 1028 "MoveJ"
          $ 1029 "Buje_Final" "breakAfter"
          movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
          $ 1030 "Wait: 1.0"
          sleep(1.0)
          $ 1031 "Alturas"
          $ 1032 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 1033 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 1034 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
            $ 1035 "MoveL"
            $ 1036 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 1037 "Else" "noBreak"
            $ 1038 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 1039 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
            $ 1040 "MoveL"
            $ 1041 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 1042 "MoveL"
          $ 1043 "Freemove"
          $ 1044 "Wait: 2.0"
          sleep(2.0)
          $ 1045 "freedrive_mode()"
          freedrive_mode()
          $ 1046 "Wait: 2.5"
          sleep(2.5)
          $ 1047 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 1048 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 1049 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
          global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
          $ 1050 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 1051 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
          global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
          $ 1052 "Direction: Base Z+"
          global move_thread_flag_1052=0
          thread move_thread_1052():
            enter_critical
            move_thread_flag_1052 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
            movel(towardsPos, a=0.08, v=0.06)
            move_thread_flag_1052 = 2
            exit_critical
          end
          move_thread_flag_1052 = 0
          move_thread_han_1052 = run move_thread_1052()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1052 > 1):
              join move_thread_han_1052
              $ 1053 "Until (distance)"
              break
            end
            sync()
          end
          $ 1054 "L2B2≔var_11"
          global L2B2=var_11
          $ 1055 "Linea2_Buje1"
          $ 1056 "Xfin≔(((L2B1x)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1)"
          global Xfin=(((L2B1x)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1)
          $ 1057 "Yfin≔(((L2B1y)*Yp)-(Yd)+((L2B1x)*m1))*(-1)"
          global Yfin=(((L2B1y)*Yp)-(Yd)+((L2B1x)*m1))*(-1)
          $ 1058 "rotaciones≔get_actual_tcp_pose()"
          global rotaciones= get_actual_tcp_pose ()
          $ 1059 "var_3≔rotaciones[3]"
          global var_3=rotaciones[3]
          $ 1060 "var_4≔rotaciones[4]"
          global var_4=rotaciones[4]
          $ 1061 "var_5≔rotaciones[5]"
          global var_5=rotaciones[5]
          $ 1062 "If broca≟1645"
          if (broca == 1645):
            $ 1063 "PosFinal≔p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]"
            global PosFinal=p[Xfin+0.00208915,Yfin+0.00208915,0.1,var_3,var_4,var_5]
          else:
            $ 1064 "ElseIf broca≟1935"
            if (broca == 1935):
              $ 1065 "PosFinal≔p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]"
              global PosFinal=p[Xfin+0.00245745,Yfin+0.00245745,0.1,var_3,var_4,var_5]
            else:
              $ 1066 "ElseIf broca≟217"
              if (broca == 217):
                $ 1067 "PosFinal≔p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]"
                global PosFinal=p[Xfin+0.0027559,Yfin+0.0027559,0.1,var_3,var_4,var_5]
              end
            end
          end
          $ 1068 "Buje_Final≔PosFinal"
          global Buje_Final=PosFinal
          $ 1069 "MoveJ"
          $ 1070 "Buje_Final" "breakAfter"
          movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
          $ 1071 "Wait: 1.0"
          sleep(1.0)
          $ 1072 "Alturas"
          $ 1073 "If P1h[2]<P2h[2]"
          if (P1h[2]<P2h[2]):
            $ 1074 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 1075 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(altura/1000)),tcp[3],tcp[4],tcp[5]]
            $ 1076 "MoveL"
            $ 1077 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          else:
            $ 1078 "Else" "noBreak"
            $ 1079 "tcp≔get_actual_tcp_pose()"
            global tcp= get_actual_tcp_pose ()
            $ 1080 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]"
            global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)),tcp[3],tcp[4],tcp[5]]
            $ 1081 "MoveL"
            $ 1082 "offset_altura" "breakAfter"
            movel(offset_altura, a=0.04, v=0.03)
          end
          $ 1083 "MoveL"
          $ 1084 "Freemove"
          $ 1085 "Wait: 2.0"
          sleep(2.0)
          $ 1086 "freedrive_mode()"
          freedrive_mode()
          $ 1087 "Wait: 2.5"
          sleep(2.5)
          $ 1088 "end_freedrive_mode()"
          end_freedrive_mode()
          $ 1089 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 1090 "var_11≔p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]"
          global var_11=p[var_11[0]*1000,var_11[1]*1000,420,420,420,420]
          $ 1091 "var_11≔get_actual_tcp_pose()"
          global var_11= get_actual_tcp_pose ()
          $ 1092 "var_11≔p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]"
          global var_11=p[var_11[0],var_11[1],0.1,var_11[3],var_11[4],var_11[5]]
          $ 1093 "Direction: Base Z+"
          global move_thread_flag_1093=0
          thread move_thread_1093():
            enter_critical
            move_thread_flag_1093 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
            movel(towardsPos, a=0.08, v=0.06)
            move_thread_flag_1093 = 2
            exit_critical
          end
          move_thread_flag_1093 = 0
          move_thread_han_1093 = run move_thread_1093()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1093 > 1):
              join move_thread_han_1093
              $ 1094 "Until (distance)"
              break
            end
            sync()
          end
          $ 1095 "L2B1≔var_11"
          global L2B1=var_11
          $ 1096 "MoveJ"
          $ 1097 "Zona_der1" "breakAfter"
          movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1113 "Colocar broca"
          $ 1114 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1115 "Call Poner_Broca"
          Poner_Broca()
          $ 1116 "Barrenado"
          $ 1117 "Set mensaje_mw10=65"
          modbus_set_output_register("mensaje_mw10", 65)
          $ 1118 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1119 "Wait: 1.0"
          sleep(1.0)
          $ 1120 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1121 "Wait: 1.0"
          sleep(1.0)
          $ 1122 "Linea 1 a 1645"
          $ 1123 "broca≔1645"
          global broca=1645
          $ 1124 "Buje_inicial"
          $ 1125 "Buje_Inicial≔L1B2"
          global Buje_Inicial=L1B2
          $ 1126 "Buje_final"
          $ 1127 "Buje_Final≔L1B1"
          global Buje_Final=L1B1
          $ 1128 "barrenosTotales≔27"
          global barrenosTotales=27
          $ 1129 "barrenoActual≔1"
          global barrenoActual=1
          $ 1130 "Loop barrenoActual≤barrenosTotales"
          while (barrenoActual <= barrenosTotales):
            $ 1131 "MoveL"
            $ 1132 "bajada_broca≔p[0,0,0.006,0,0,0]"
            global bajada_broca=p[0,0,0.006,0,0,0]
            $ 1133 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
            global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
            $ 1134 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
            if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
              $ 1135 "Set mensaje_mw10=200"
              modbus_set_output_register("mensaje_mw10", 200)
              $ 1136 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 1137 "Wait: 1.0"
              sleep(1.0)
              $ 1138 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 1139 "Wait: 1.0"
              sleep(1.0)
            end
            $ 1140 "MoveJ"
            $ 1141 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1142 "Wait: 2.0"
            sleep(2.0)
            $ 1143 "Alturas"
            $ 1144 "If P1h[2]<P2h[2]"
            if (P1h[2]<P2h[2]):
              $ 1145 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
              global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
              $ 1146 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1147 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1148 "MoveL"
              $ 1149 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            else:
              $ 1150 "Else" "noBreak"
              $ 1151 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
              global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
              $ 1152 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1153 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1154 "MoveL"
              $ 1155 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            end
            $ 1156 "Freemove"
            $ 1157 "Wait: 2.0"
            sleep(2.0)
            $ 1158 "freedrive_mode()"
            freedrive_mode()
            $ 1159 "Wait: 2.5"
            sleep(2.5)
            $ 1160 "end_freedrive_mode()"
            end_freedrive_mode()
            $ 1161 "Wait: 0.3"
            sleep(0.3)
            $ 1162 "Set CO[1]=Encender"
            set_configurable_digital_out(1, True)
            $ 1163 "Wait: 1.0"
            sleep(1.0)
            $ 1164 "Wait: 0.3"
            sleep(0.3)
            $ 1165 "Wait: 0.3"
            sleep(0.3)
            $ 1166 "Wait: 0.3"
            sleep(0.3)
            $ 1167 "Loop 3 times"
            Loop_42 = 0
            while (Loop_42 < 3):
              $ 1168 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
              $ 1169 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.005, v=0.001)
              $ 1170 "If bajada_broca≟p[0,0,0.018,0,0,0]"
              if (bajada_broca == p[0,0,0.018,0,0,0]):
                $ 1171 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
                global num_barreno=str_cat("Barreno: ",barrenoActual)
                $ 1172 "tcp_actual≔get_actual_tcp_pose()"
                global tcp_actual= get_actual_tcp_pose ()
                $ 1173 "X_actual≔str_cat('     X: ',tcp_actual[0])"
                global X_actual=str_cat("     X: ",tcp_actual[0])
                $ 1174 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
                global Y_actual=str_cat("     Y: ",tcp_actual[1])
                $ 1175 "pos_barreno≔str_cat(X_actual,Y_actual)"
                global pos_barreno=str_cat(X_actual,Y_actual)
                $ 1176 "textmsg(num_barreno,pos_barreno)"
                textmsg(num_barreno,pos_barreno)
              end
              $ 1177 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
              $ 1178 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.01, v=0.01)
              $ 1179 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
              global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
              Loop_42 = Loop_42 + 1
            end
            $ 1180 "Direction: Base Z+"
            global move_thread_flag_1180=0
            thread move_thread_1180():
              enter_critical
              move_thread_flag_1180 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
              movel(towardsPos, a=0.04, v=0.03)
              move_thread_flag_1180 = 2
              exit_critical
            end
            move_thread_flag_1180 = 0
            move_thread_han_1180 = run move_thread_1180()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1180 > 1):
                join move_thread_han_1180
                $ 1181 "Until (distance)"
                break
              end
              sync()
            end
            $ 1182 "MoveJ"
            $ 1183 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1184 "Wait: 0.3"
            sleep(0.3)
            $ 1185 "Set CO[1]=Apagar"
            set_configurable_digital_out(1, False)
            $ 1186 "Wait: 0.3"
            sleep(0.3)
            $ 1187 "If barrenoActual≟13 or barrenoActual≟27"
            if (barrenoActual == 13  or  barrenoActual == 27):
              $ 1188 "Direction: Base Z+"
              global move_thread_flag_1188=0
              thread move_thread_1188():
                enter_critical
                move_thread_flag_1188 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.04, v=0.03)
                move_thread_flag_1188 = 2
                exit_critical
              end
              move_thread_flag_1188 = 0
              move_thread_han_1188 = run move_thread_1188()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_1188 > 1):
                  join move_thread_han_1188
                  $ 1189 "Until (distance)"
                  break
                end
                sync()
              end
              $ 1190 "MoveJ"
              $ 1191 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1192 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1193 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 1194 "If barrenoActual≟13"
              if (barrenoActual == 13):
                $ 1195 "Call Poner_Broca"
                Poner_Broca()
              else:
                $ 1196 "ElseIf barrenoActual≟27"
                if (barrenoActual == 27):
                  $ 1197 "Call Poner_Broca"
                  Poner_Broca()
                end
              end
              $ 1198 "MoveJ"
              $ 1199 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1200 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
            end
            $ 1201 "barrenoActual≔barrenoActual+1"
            global barrenoActual=barrenoActual+1
          end
          $ 1202 "Linea 2 a 1645"
          $ 1203 "broca≔1645"
          global broca=1645
          $ 1204 "Buje_inicial"
          $ 1205 "Buje_Inicial≔L2B2"
          global Buje_Inicial=L2B2
          $ 1206 "Buje_final"
          $ 1207 "Buje_Final≔L2B1"
          global Buje_Final=L2B1
          $ 1208 "barrenosTotales≔27"
          global barrenosTotales=27
          $ 1209 "barrenoActual≔1"
          global barrenoActual=1
          $ 1210 "Loop barrenoActual≤barrenosTotales"
          while (barrenoActual <= barrenosTotales):
            $ 1211 "MoveL"
            $ 1212 "bajada_broca≔p[0,0,0.006,0,0,0]"
            global bajada_broca=p[0,0,0.006,0,0,0]
            $ 1213 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
            global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
            $ 1214 "Alturas"
            $ 1215 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
            if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
              $ 1216 "Set mensaje_mw10=200"
              modbus_set_output_register("mensaje_mw10", 200)
              $ 1217 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 1218 "Wait: 1.0"
              sleep(1.0)
              $ 1219 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 1220 "Wait: 1.0"
              sleep(1.0)
            end
            $ 1221 "MoveJ"
            $ 1222 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1223 "Wait: 2.0"
            sleep(2.0)
            $ 1224 "If P1h[2]<P2h[2]"
            if (P1h[2]<P2h[2]):
              $ 1225 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
              global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
              $ 1226 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1227 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1228 "MoveL"
              $ 1229 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            else:
              $ 1230 "Else" "noBreak"
              $ 1231 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
              global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
              $ 1232 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1233 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1234 "MoveL"
              $ 1235 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            end
            $ 1236 "Freemove"
            $ 1237 "Wait: 2.0"
            sleep(2.0)
            $ 1238 "freedrive_mode()"
            freedrive_mode()
            $ 1239 "Wait: 2.5"
            sleep(2.5)
            $ 1240 "end_freedrive_mode()"
            end_freedrive_mode()
            $ 1241 "Wait: 0.3"
            sleep(0.3)
            $ 1242 "Set CO[1]=Encender"
            set_configurable_digital_out(1, True)
            $ 1243 "Wait: 1.0"
            sleep(1.0)
            $ 1244 "Wait: 0.3"
            sleep(0.3)
            $ 1245 "Wait: 0.3"
            sleep(0.3)
            $ 1246 "Wait: 0.3"
            sleep(0.3)
            $ 1247 "Loop 3 times"
            Loop_46 = 0
            while (Loop_46 < 3):
              $ 1248 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
              $ 1249 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.005, v=0.001)
              $ 1250 "If bajada_broca≟p[0,0,0.018,0,0,0]"
              if (bajada_broca == p[0,0,0.018,0,0,0]):
                $ 1251 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
                global num_barreno=str_cat("Barreno: ",barrenoActual)
                $ 1252 "tcp_actual≔get_actual_tcp_pose()"
                global tcp_actual= get_actual_tcp_pose ()
                $ 1253 "X_actual≔str_cat('     X: ',tcp_actual[0])"
                global X_actual=str_cat("     X: ",tcp_actual[0])
                $ 1254 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
                global Y_actual=str_cat("     Y: ",tcp_actual[1])
                $ 1255 "pos_barreno≔str_cat(X_actual,Y_actual)"
                global pos_barreno=str_cat(X_actual,Y_actual)
                $ 1256 "textmsg(num_barreno,pos_barreno)"
                textmsg(num_barreno,pos_barreno)
              end
              $ 1257 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
              $ 1258 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.01, v=0.01)
              $ 1259 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
              global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
              Loop_46 = Loop_46 + 1
            end
            $ 1260 "Direction: Base Z+"
            global move_thread_flag_1260=0
            thread move_thread_1260():
              enter_critical
              move_thread_flag_1260 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
              movel(towardsPos, a=0.04, v=0.03)
              move_thread_flag_1260 = 2
              exit_critical
            end
            move_thread_flag_1260 = 0
            move_thread_han_1260 = run move_thread_1260()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1260 > 1):
                join move_thread_han_1260
                $ 1261 "Until (distance)"
                break
              end
              sync()
            end
            $ 1262 "MoveJ"
            $ 1263 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1264 "Wait: 0.3"
            sleep(0.3)
            $ 1265 "Set CO[1]=Apagar"
            set_configurable_digital_out(1, False)
            $ 1266 "Wait: 0.3"
            sleep(0.3)
            $ 1267 "If barrenoActual≟13"
            if (barrenoActual == 13):
              $ 1268 "Direction: Base Z+"
              global move_thread_flag_1268=0
              thread move_thread_1268():
                enter_critical
                move_thread_flag_1268 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=1.2, v=0.25)
                move_thread_flag_1268 = 2
                exit_critical
              end
              move_thread_flag_1268 = 0
              move_thread_han_1268 = run move_thread_1268()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_1268 > 1):
                  join move_thread_han_1268
                  $ 1269 "Until (distance)"
                  break
                end
                sync()
              end
              $ 1270 "MoveJ"
              $ 1271 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1272 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1273 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 1274 "Call Poner_Broca"
              Poner_Broca()
              $ 1275 "MoveJ"
              $ 1276 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1277 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
            else:
              $ 1278 "ElseIf barrenoActual≟27"
              if (barrenoActual == 27):
                $ 1279 "Direction: Base Z+"
                global move_thread_flag_1279=0
                thread move_thread_1279():
                  enter_critical
                  move_thread_flag_1279 = 1
                  local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                  movel(towardsPos, a=1.2, v=0.25)
                  move_thread_flag_1279 = 2
                  exit_critical
                end
                move_thread_flag_1279 = 0
                move_thread_han_1279 = run move_thread_1279()
                while (True):
                  sleep(1.0E-10)
                  if (move_thread_flag_1279 > 1):
                    join move_thread_han_1279
                    $ 1280 "Until (distance)"
                    break
                  end
                  sync()
                end
                $ 1281 "MoveJ"
                $ 1282 "Zona_der1" "breakAfter"
                movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1283 "Posicion_Cero" "breakAfter"
                movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1284 "Call Quitar_Broca_Chida"
                Quitar_Broca_Chida()
                $ 1285 "Set carrusel_home=Encender"
                modbus_set_output_signal("carrusel_home", True)
                $ 1286 "Wait: 1.0"
                sleep(1.0)
                $ 1287 "Set carrusel_home=Apagar"
                modbus_set_output_signal("carrusel_home", False)
                $ 1288 "Set mensaje_mw10=70"
                modbus_set_output_register("mensaje_mw10", 70)
                $ 1289 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1290 "Wait: 1.0"
                sleep(1.0)
                $ 1291 "Set mensaje_mw10=120"
                modbus_set_output_register("mensaje_mw10", 120)
                $ 1292 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1293 "Wait: 1.0"
                sleep(1.0)
                $ 1294 "Set carrusel_home=Encender"
                modbus_set_output_signal("carrusel_home", True)
                $ 1295 "Wait: 1.0"
                sleep(1.0)
                $ 1296 "Set carrusel_home=Apagar"
                modbus_set_output_signal("carrusel_home", False)
                $ 1297 "Set mensaje_mw10=75"
                modbus_set_output_register("mensaje_mw10", 75)
                $ 1298 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1299 "Wait: 1.0"
                sleep(1.0)
                $ 1300 "Call Poner_Broca"
                Poner_Broca()
                $ 1301 "broca≔1935"
                global broca=1935
                $ 1302 "MoveJ"
                $ 1303 "Posicion_Cero" "breakAfter"
                movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1304 "Zona_der1" "breakAfter"
                movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1305 "Set mensaje_mw10=80"
                modbus_set_output_register("mensaje_mw10", 80)
                $ 1306 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1307 "Wait: 1.0"
                sleep(1.0)
                $ 1308 "Set mensaje_mw10=150"
                modbus_set_output_register("mensaje_mw10", 150)
                $ 1309 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1310 "Wait: 1.0"
                sleep(1.0)
              end
            end
            $ 1311 "barrenoActual≔barrenoActual+1"
            global barrenoActual=barrenoActual+1
          end
          $ 1312 "Linea 1 a 1935"
          $ 1313 "broca≔1935"
          global broca=1935
          $ 1314 "Buje_inicial"
          $ 1315 "Buje_Inicial≔L1B2"
          global Buje_Inicial=L1B2
          $ 1316 "Buje_final"
          $ 1317 "Buje_Final≔L1B1"
          global Buje_Final=L1B1
          $ 1318 "barrenosTotales≔27"
          global barrenosTotales=27
          $ 1319 "barrenoActual≔1"
          global barrenoActual=1
          $ 1320 "Loop barrenoActual≤barrenosTotales"
          while (barrenoActual <= barrenosTotales):
            $ 1321 "MoveL"
            $ 1322 "bajada_broca≔p[0,0,0.009,0,0,0]"
            global bajada_broca=p[0,0,0.009,0,0,0]
            $ 1323 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
            global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
            $ 1324 "Alturas"
            $ 1325 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
            if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
              $ 1326 "Set mensaje_mw10=200"
              modbus_set_output_register("mensaje_mw10", 200)
              $ 1327 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 1328 "Wait: 1.0"
              sleep(1.0)
              $ 1329 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 1330 "Wait: 1.0"
              sleep(1.0)
            end
            $ 1331 "MoveJ"
            $ 1332 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1333 "Wait: 2.0"
            sleep(2.0)
            $ 1334 "If P1h[2]<P2h[2]"
            if (P1h[2]<P2h[2]):
              $ 1335 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
              global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
              $ 1336 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1337 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1338 "MoveL"
              $ 1339 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            else:
              $ 1340 "Else" "noBreak"
              $ 1341 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
              global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
              $ 1342 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1343 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1344 "MoveL"
              $ 1345 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            end
            $ 1346 "Freemove"
            $ 1347 "Wait: 2.0"
            sleep(2.0)
            $ 1348 "freedrive_mode()"
            freedrive_mode()
            $ 1349 "Wait: 2.5"
            sleep(2.5)
            $ 1350 "end_freedrive_mode()"
            end_freedrive_mode()
            $ 1351 "Wait: 0.3"
            sleep(0.3)
            $ 1352 "Set CO[1]=Encender"
            set_configurable_digital_out(1, True)
            $ 1353 "Wait: 1.0"
            sleep(1.0)
            $ 1354 "Wait: 0.3"
            sleep(0.3)
            $ 1355 "Wait: 0.3"
            sleep(0.3)
            $ 1356 "Wait: 0.3"
            sleep(0.3)
            $ 1357 "Loop 2 times"
            Loop_50 = 0
            while (Loop_50 < 2):
              $ 1358 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
              $ 1359 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.005, v=0.001)
              $ 1360 "If bajada_broca≟p[0,0,0.018,0,0,0]"
              if (bajada_broca == p[0,0,0.018,0,0,0]):
                $ 1361 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
                global num_barreno=str_cat("Barreno: ",barrenoActual)
                $ 1362 "tcp_actual≔get_actual_tcp_pose()"
                global tcp_actual= get_actual_tcp_pose ()
                $ 1363 "X_actual≔str_cat('     X: ',tcp_actual[0])"
                global X_actual=str_cat("     X: ",tcp_actual[0])
                $ 1364 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
                global Y_actual=str_cat("     Y: ",tcp_actual[1])
                $ 1365 "pos_barreno≔str_cat(X_actual,Y_actual)"
                global pos_barreno=str_cat(X_actual,Y_actual)
                $ 1366 "textmsg(num_barreno,pos_barreno)"
                textmsg(num_barreno,pos_barreno)
              end
              $ 1367 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
              $ 1368 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.01, v=0.01)
              $ 1369 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
              global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
              Loop_50 = Loop_50 + 1
            end
            $ 1370 "Direction: Base Z+"
            global move_thread_flag_1370=0
            thread move_thread_1370():
              enter_critical
              move_thread_flag_1370 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
              movel(towardsPos, a=0.01, v=0.01)
              move_thread_flag_1370 = 2
              exit_critical
            end
            move_thread_flag_1370 = 0
            move_thread_han_1370 = run move_thread_1370()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1370 > 1):
                join move_thread_han_1370
                $ 1371 "Until (distance)"
                break
              end
              sync()
            end
            $ 1372 "MoveJ"
            $ 1373 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1374 "Wait: 0.3"
            sleep(0.3)
            $ 1375 "Set CO[1]=Apagar"
            set_configurable_digital_out(1, False)
            $ 1376 "Wait: 0.3"
            sleep(0.3)
            $ 1377 "If barrenoActual≟13 or barrenoActual≟27"
            if (barrenoActual == 13  or  barrenoActual == 27):
              $ 1378 "Direction: Base Z+"
              global move_thread_flag_1378=0
              thread move_thread_1378():
                enter_critical
                move_thread_flag_1378 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.04, v=0.03)
                move_thread_flag_1378 = 2
                exit_critical
              end
              move_thread_flag_1378 = 0
              move_thread_han_1378 = run move_thread_1378()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_1378 > 1):
                  join move_thread_han_1378
                  $ 1379 "Until (distance)"
                  break
                end
                sync()
              end
              $ 1380 "MoveJ"
              $ 1381 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1382 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1383 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 1384 "If barrenoActual≟13"
              if (barrenoActual == 13):
                $ 1385 "Call Poner_Broca"
                Poner_Broca()
              else:
                $ 1386 "ElseIf barrenoActual≟27"
                if (barrenoActual == 27):
                  $ 1387 "Call Poner_Broca"
                  Poner_Broca()
                end
              end
              $ 1388 "MoveJ"
              $ 1389 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1390 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
            end
            $ 1391 "barrenoActual≔barrenoActual+1"
            global barrenoActual=barrenoActual+1
          end
          $ 1392 "Linea 2 a 1935"
          $ 1393 "broca≔1935"
          global broca=1935
          $ 1394 "Buje_inicial"
          $ 1395 "Buje_Inicial≔L2B2"
          global Buje_Inicial=L2B2
          $ 1396 "Buje_final"
          $ 1397 "Buje_Final≔L2B1"
          global Buje_Final=L2B1
          $ 1398 "barrenosTotales≔27"
          global barrenosTotales=27
          $ 1399 "barrenoActual≔1"
          global barrenoActual=1
          $ 1400 "Loop barrenoActual≤barrenosTotales"
          while (barrenoActual <= barrenosTotales):
            $ 1401 "MoveL"
            $ 1402 "bajada_broca≔p[0,0,0.009,0,0,0]"
            global bajada_broca=p[0,0,0.009,0,0,0]
            $ 1403 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
            global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
            $ 1404 "Alturas"
            $ 1405 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
            if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
              $ 1406 "Set mensaje_mw10=200"
              modbus_set_output_register("mensaje_mw10", 200)
              $ 1407 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 1408 "Wait: 1.0"
              sleep(1.0)
              $ 1409 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 1410 "Wait: 1.0"
              sleep(1.0)
            end
            $ 1411 "MoveJ"
            $ 1412 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1413 "Wait: 2.0"
            sleep(2.0)
            $ 1414 "If P1h[2]<P2h[2]"
            if (P1h[2]<P2h[2]):
              $ 1415 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
              global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
              $ 1416 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1417 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1418 "MoveL"
              $ 1419 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            else:
              $ 1420 "Else" "noBreak"
              $ 1421 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
              global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
              $ 1422 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1423 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1424 "MoveL"
              $ 1425 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            end
            $ 1426 "Freemove"
            $ 1427 "Wait: 2.0"
            sleep(2.0)
            $ 1428 "freedrive_mode()"
            freedrive_mode()
            $ 1429 "Wait: 2.5"
            sleep(2.5)
            $ 1430 "end_freedrive_mode()"
            end_freedrive_mode()
            $ 1431 "Wait: 0.3"
            sleep(0.3)
            $ 1432 "Set CO[1]=Encender"
            set_configurable_digital_out(1, True)
            $ 1433 "Wait: 1.0"
            sleep(1.0)
            $ 1434 "Wait: 0.3"
            sleep(0.3)
            $ 1435 "Wait: 0.3"
            sleep(0.3)
            $ 1436 "Wait: 0.3"
            sleep(0.3)
            $ 1437 "Loop 2 times"
            Loop_54 = 0
            while (Loop_54 < 2):
              $ 1438 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
              $ 1439 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.005, v=0.001)
              $ 1440 "If bajada_broca≟p[0,0,0.018,0,0,0]"
              if (bajada_broca == p[0,0,0.018,0,0,0]):
                $ 1441 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
                global num_barreno=str_cat("Barreno: ",barrenoActual)
                $ 1442 "tcp_actual≔get_actual_tcp_pose()"
                global tcp_actual= get_actual_tcp_pose ()
                $ 1443 "X_actual≔str_cat('     X: ',tcp_actual[0])"
                global X_actual=str_cat("     X: ",tcp_actual[0])
                $ 1444 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
                global Y_actual=str_cat("     Y: ",tcp_actual[1])
                $ 1445 "pos_barreno≔str_cat(X_actual,Y_actual)"
                global pos_barreno=str_cat(X_actual,Y_actual)
                $ 1446 "textmsg(num_barreno,pos_barreno)"
                textmsg(num_barreno,pos_barreno)
              end
              $ 1447 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
              $ 1448 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.01, v=0.01)
              $ 1449 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
              global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
              Loop_54 = Loop_54 + 1
            end
            $ 1450 "Direction: Base Z+"
            global move_thread_flag_1450=0
            thread move_thread_1450():
              enter_critical
              move_thread_flag_1450 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
              movel(towardsPos, a=0.01, v=0.01)
              move_thread_flag_1450 = 2
              exit_critical
            end
            move_thread_flag_1450 = 0
            move_thread_han_1450 = run move_thread_1450()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1450 > 1):
                join move_thread_han_1450
                $ 1451 "Until (distance)"
                break
              end
              sync()
            end
            $ 1452 "MoveJ"
            $ 1453 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1454 "Wait: 0.3"
            sleep(0.3)
            $ 1455 "Set CO[1]=Apagar"
            set_configurable_digital_out(1, False)
            $ 1456 "Wait: 0.3"
            sleep(0.3)
            $ 1457 "If barrenoActual≟13"
            if (barrenoActual == 13):
              $ 1458 "Direction: Base Z+"
              global move_thread_flag_1458=0
              thread move_thread_1458():
                enter_critical
                move_thread_flag_1458 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.04, v=0.03)
                move_thread_flag_1458 = 2
                exit_critical
              end
              move_thread_flag_1458 = 0
              move_thread_han_1458 = run move_thread_1458()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_1458 > 1):
                  join move_thread_han_1458
                  $ 1459 "Until (distance)"
                  break
                end
                sync()
              end
              $ 1460 "MoveJ"
              $ 1461 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1462 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1463 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 1464 "Call Poner_Broca"
              Poner_Broca()
              $ 1465 "MoveJ"
              $ 1466 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1467 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
            else:
              $ 1468 "ElseIf barrenoActual≟27"
              if (barrenoActual == 27):
                $ 1469 "Direction: Base Z+"
                global move_thread_flag_1469=0
                thread move_thread_1469():
                  enter_critical
                  move_thread_flag_1469 = 1
                  local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                  movel(towardsPos, a=0.04, v=0.03)
                  move_thread_flag_1469 = 2
                  exit_critical
                end
                move_thread_flag_1469 = 0
                move_thread_han_1469 = run move_thread_1469()
                while (True):
                  sleep(1.0E-10)
                  if (move_thread_flag_1469 > 1):
                    join move_thread_han_1469
                    $ 1470 "Until (distance)"
                    break
                  end
                  sync()
                end
                $ 1471 "MoveJ"
                $ 1472 "Zona_der1" "breakAfter"
                movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1473 "Posicion_Cero" "breakAfter"
                movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1474 "Call Quitar_Broca_Chida"
                Quitar_Broca_Chida()
                $ 1475 "Set carrusel_home=Encender"
                modbus_set_output_signal("carrusel_home", True)
                $ 1476 "Wait: 1.0"
                sleep(1.0)
                $ 1477 "Set carrusel_home=Apagar"
                modbus_set_output_signal("carrusel_home", False)
                $ 1478 "Set mensaje_mw10=85"
                modbus_set_output_register("mensaje_mw10", 85)
                $ 1479 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1480 "Wait: 1.0"
                sleep(1.0)
                $ 1481 "Set mensaje_mw10=120"
                modbus_set_output_register("mensaje_mw10", 120)
                $ 1482 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1483 "Wait: 1.0"
                sleep(1.0)
                $ 1484 "Set carrusel_home=Encender"
                modbus_set_output_signal("carrusel_home", True)
                $ 1485 "Wait: 1.0"
                sleep(1.0)
                $ 1486 "Set carrusel_home=Apagar"
                modbus_set_output_signal("carrusel_home", False)
                $ 1487 "Set mensaje_mw10=90"
                modbus_set_output_register("mensaje_mw10", 90)
                $ 1488 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1489 "Wait: 1.0"
                sleep(1.0)
                $ 1490 "Call Poner_Broca"
                Poner_Broca()
                $ 1491 "broca≔217"
                global broca=217
                $ 1492 "MoveJ"
                $ 1493 "Posicion_Cero" "breakAfter"
                movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1494 "Zona_der1" "breakAfter"
                movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1495 "Set mensaje_mw10=95"
                modbus_set_output_register("mensaje_mw10", 95)
                $ 1496 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1497 "Wait: 1.0"
                sleep(1.0)
                $ 1498 "Set mensaje_mw10=150"
                modbus_set_output_register("mensaje_mw10", 150)
                $ 1499 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1500 "Wait: 1.0"
                sleep(1.0)
              end
            end
            $ 1501 "barrenoActual≔barrenoActual+1"
            global barrenoActual=barrenoActual+1
          end
          $ 1502 "Linea 1 a 217"
          $ 1503 "broca≔217"
          global broca=217
          $ 1504 "Buje_inicial"
          $ 1505 "Buje_Inicial≔L1B2"
          global Buje_Inicial=L1B2
          $ 1506 "Buje_final"
          $ 1507 "Buje_Final≔L1B1"
          global Buje_Final=L1B1
          $ 1508 "barrenosTotales≔27"
          global barrenosTotales=27
          $ 1509 "barrenoActual≔1"
          global barrenoActual=1
          $ 1510 "Loop barrenoActual≤barrenosTotales"
          while (barrenoActual <= barrenosTotales):
            $ 1511 "MoveL"
            $ 1512 "bajada_broca≔p[0,0,0.018,0,0,0]"
            global bajada_broca=p[0,0,0.018,0,0,0]
            $ 1513 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
            global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
            $ 1514 "Wait: 2.0"
            sleep(2.0)
            $ 1515 "Alturas"
            $ 1516 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
            if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
              $ 1517 "Set mensaje_mw10=200"
              modbus_set_output_register("mensaje_mw10", 200)
              $ 1518 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 1519 "Wait: 1.0"
              sleep(1.0)
              $ 1520 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 1521 "Wait: 1.0"
              sleep(1.0)
            end
            $ 1522 "MoveJ"
            $ 1523 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1524 "Wait: 2.0"
            sleep(2.0)
            $ 1525 "If P1h[2]<P2h[2]"
            if (P1h[2]<P2h[2]):
              $ 1526 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
              global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
              $ 1527 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1528 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1529 "MoveL"
              $ 1530 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            else:
              $ 1531 "Else" "noBreak"
              $ 1532 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
              global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
              $ 1533 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1534 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1535 "MoveL"
              $ 1536 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            end
            $ 1537 "Freemove"
            $ 1538 "Wait: 2.0"
            sleep(2.0)
            $ 1539 "freedrive_mode()"
            freedrive_mode()
            $ 1540 "Wait: 2.5"
            sleep(2.5)
            $ 1541 "end_freedrive_mode()"
            end_freedrive_mode()
            $ 1542 "Wait: 0.3"
            sleep(0.3)
            $ 1543 "Set CO[1]=Encender"
            set_configurable_digital_out(1, True)
            $ 1544 "Wait: 1.0"
            sleep(1.0)
            $ 1545 "Wait: 0.3"
            sleep(0.3)
            $ 1546 "Wait: 0.3"
            sleep(0.3)
            $ 1547 "Wait: 0.3"
            sleep(0.3)
            $ 1548 "Loop 1 times"
            Loop_56 = 0
            while (Loop_56 < 1):
              $ 1549 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
              $ 1550 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.005, v=0.001)
              $ 1551 "If bajada_broca≟p[0,0,0.018,0,0,0]"
              if (bajada_broca == p[0,0,0.018,0,0,0]):
                $ 1552 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
                global num_barreno=str_cat("Barreno: ",barrenoActual)
                $ 1553 "tcp_actual≔get_actual_tcp_pose()"
                global tcp_actual= get_actual_tcp_pose ()
                $ 1554 "X_actual≔str_cat('     X: ',tcp_actual[0])"
                global X_actual=str_cat("     X: ",tcp_actual[0])
                $ 1555 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
                global Y_actual=str_cat("     Y: ",tcp_actual[1])
                $ 1556 "pos_barreno≔str_cat(X_actual,Y_actual)"
                global pos_barreno=str_cat(X_actual,Y_actual)
                $ 1557 "textmsg(num_barreno,pos_barreno)"
                textmsg(num_barreno,pos_barreno)
              end
              $ 1558 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
              $ 1559 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.01, v=0.01)
              $ 1560 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
              global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
              Loop_56 = Loop_56 + 1
            end
            $ 1561 "Direction: Base Z+"
            global move_thread_flag_1561=0
            thread move_thread_1561():
              enter_critical
              move_thread_flag_1561 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
              movel(towardsPos, a=0.01, v=0.01)
              move_thread_flag_1561 = 2
              exit_critical
            end
            move_thread_flag_1561 = 0
            move_thread_han_1561 = run move_thread_1561()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1561 > 1):
                join move_thread_han_1561
                $ 1562 "Until (distance)"
                break
              end
              sync()
            end
            $ 1563 "MoveJ"
            $ 1564 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1565 "Wait: 0.3"
            sleep(0.3)
            $ 1566 "Set CO[1]=Apagar"
            set_configurable_digital_out(1, False)
            $ 1567 "Wait: 0.3"
            sleep(0.3)
            $ 1568 "If barrenoActual≟13 or barrenoActual≟27"
            if (barrenoActual == 13  or  barrenoActual == 27):
              $ 1569 "Direction: Base Z+"
              global move_thread_flag_1569=0
              thread move_thread_1569():
                enter_critical
                move_thread_flag_1569 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.03, v=0.04)
                move_thread_flag_1569 = 2
                exit_critical
              end
              move_thread_flag_1569 = 0
              move_thread_han_1569 = run move_thread_1569()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_1569 > 1):
                  join move_thread_han_1569
                  $ 1570 "Until (distance)"
                  break
                end
                sync()
              end
              $ 1571 "MoveJ"
              $ 1572 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1573 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1574 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 1575 "If barrenoActual≟13"
              if (barrenoActual == 13):
                $ 1576 "Call Poner_Broca"
                Poner_Broca()
              else:
                $ 1577 "ElseIf barrenoActual≟27"
                if (barrenoActual == 27):
                  $ 1578 "Call Poner_Broca"
                  Poner_Broca()
                end
              end
              $ 1579 "MoveJ"
              $ 1580 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=0.6981317007977318, v=0.5235987755982988)
              $ 1581 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=0.6981317007977318, v=0.5235987755982988)
            end
            $ 1582 "barrenoActual≔barrenoActual+1"
            global barrenoActual=barrenoActual+1
          end
          $ 1583 "Linea 2 a 217"
          $ 1584 "broca≔217"
          global broca=217
          $ 1585 "Buje_inicial"
          $ 1586 "Buje_Inicial≔L2B2"
          global Buje_Inicial=L2B2
          $ 1587 "Buje_final"
          $ 1588 "Buje_Final≔L2B1"
          global Buje_Final=L2B1
          $ 1589 "barrenosTotales≔27"
          global barrenosTotales=27
          $ 1590 "barrenoActual≔1"
          global barrenoActual=1
          $ 1591 "Loop barrenoActual≤barrenosTotales"
          while (barrenoActual <= barrenosTotales):
            $ 1592 "MoveL"
            $ 1593 "bajada_broca≔p[0,0,0.018,0,0,0]"
            global bajada_broca=p[0,0,0.018,0,0,0]
            $ 1594 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
            global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
            $ 1595 "Alturas"
            $ 1596 "If barrenoActual≟1 or barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27"
            if (barrenoActual == 1  or  barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27):
              $ 1597 "Set mensaje_mw10=200"
              modbus_set_output_register("mensaje_mw10", 200)
              $ 1598 "Wait Continuar_M30=HI"
              while (modbus_get_signal_status("Continuar_M30") == False):
                sync()
              end
              $ 1599 "Wait: 1.0"
              sleep(1.0)
              $ 1600 "Set mensaje_mw10=150"
              modbus_set_output_register("mensaje_mw10", 150)
              $ 1601 "Wait: 1.0"
              sleep(1.0)
            end
            $ 1602 "MoveJ"
            $ 1603 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1604 "Wait: 2.0"
            sleep(2.0)
            $ 1605 "If P1h[2]<P2h[2]"
            if (P1h[2]<P2h[2]):
              $ 1606 "acomodo≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
              global acomodo=(altura/(barrenosTotales-1))*(barrenoActual-1)
              $ 1607 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1608 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1609 "MoveL"
              $ 1610 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            else:
              $ 1611 "Else" "noBreak"
              $ 1612 "acomodo≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
              global acomodo=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
              $ 1613 "tcp≔get_actual_tcp_pose()"
              global tcp= get_actual_tcp_pose ()
              $ 1614 "offset_altura≔p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]"
              global offset_altura=p[tcp[0],tcp[1],((alta-0.0095)-(acomodo/1000)),tcp[3],tcp[4],tcp[5]]
              $ 1615 "MoveL"
              $ 1616 "offset_altura" "breakAfter"
              movel(offset_altura, a=0.04, v=0.03)
            end
            $ 1617 "Freemove"
            $ 1618 "Wait: 2.0"
            sleep(2.0)
            $ 1619 "freedrive_mode()"
            freedrive_mode()
            $ 1620 "Wait: 2.5"
            sleep(2.5)
            $ 1621 "end_freedrive_mode()"
            end_freedrive_mode()
            $ 1622 "Wait: 0.3"
            sleep(0.3)
            $ 1623 "Set CO[1]=Encender"
            set_configurable_digital_out(1, True)
            $ 1624 "Wait: 1.0"
            sleep(1.0)
            $ 1625 "Wait: 0.3"
            sleep(0.3)
            $ 1626 "Wait: 0.3"
            sleep(0.3)
            $ 1627 "Wait: 0.3"
            sleep(0.3)
            $ 1628 "Loop 1 times"
            Loop_58 = 0
            while (Loop_58 < 1):
              $ 1629 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
              $ 1630 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.005, v=0.001)
              $ 1631 "If bajada_broca≟p[0,0,0.018,0,0,0]"
              if (bajada_broca == p[0,0,0.018,0,0,0]):
                $ 1632 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
                global num_barreno=str_cat("Barreno: ",barrenoActual)
                $ 1633 "tcp_actual≔get_actual_tcp_pose()"
                global tcp_actual= get_actual_tcp_pose ()
                $ 1634 "X_actual≔str_cat('     X: ',tcp_actual[0])"
                global X_actual=str_cat("     X: ",tcp_actual[0])
                $ 1635 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
                global Y_actual=str_cat("     Y: ",tcp_actual[1])
                $ 1636 "pos_barreno≔str_cat(X_actual,Y_actual)"
                global pos_barreno=str_cat(X_actual,Y_actual)
                $ 1637 "textmsg(num_barreno,pos_barreno)"
                textmsg(num_barreno,pos_barreno)
              end
              $ 1638 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
              global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
              $ 1639 "Poses_taladrado" "breakAfter"
              movel(Poses_taladrado, a=0.01, v=0.01)
              $ 1640 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
              global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
              Loop_58 = Loop_58 + 1
            end
            $ 1641 "Direction: Base Z+"
            global move_thread_flag_1641=0
            thread move_thread_1641():
              enter_critical
              move_thread_flag_1641 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
              movel(towardsPos, a=0.01, v=0.01)
              move_thread_flag_1641 = 2
              exit_critical
            end
            move_thread_flag_1641 = 0
            move_thread_han_1641 = run move_thread_1641()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1641 > 1):
                join move_thread_han_1641
                $ 1642 "Until (distance)"
                break
              end
              sync()
            end
            $ 1643 "MoveJ"
            $ 1644 "internos" "breakAfter"
            movej(internos, a=0.6981317007977318, v=0.5235987755982988)
            $ 1645 "Wait: 0.3"
            sleep(0.3)
            $ 1646 "Set CO[1]=Apagar"
            set_configurable_digital_out(1, False)
            $ 1647 "Wait: 0.3"
            sleep(0.3)
            $ 1648 "If barrenoActual≟13"
            if (barrenoActual == 13):
              $ 1649 "Direction: Base Z+"
              global move_thread_flag_1649=0
              thread move_thread_1649():
                enter_critical
                move_thread_flag_1649 = 1
                local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                movel(towardsPos, a=0.04, v=0.03)
                move_thread_flag_1649 = 2
                exit_critical
              end
              move_thread_flag_1649 = 0
              move_thread_han_1649 = run move_thread_1649()
              while (True):
                sleep(1.0E-10)
                if (move_thread_flag_1649 > 1):
                  join move_thread_han_1649
                  $ 1650 "Until (distance)"
                  break
                end
                sync()
              end
              $ 1651 "MoveJ"
              $ 1652 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1653 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1654 "Call Quitar_Broca_Chida"
              Quitar_Broca_Chida()
              $ 1655 "Call Poner_Broca"
              Poner_Broca()
              $ 1656 "MoveJ"
              $ 1657 "Posicion_Cero" "breakAfter"
              movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
              $ 1658 "Zona_der1" "breakAfter"
              movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
            else:
              $ 1659 "ElseIf barrenoActual≟27"
              if (barrenoActual == 27):
                $ 1660 "Direction: Base Z+"
                global move_thread_flag_1660=0
                thread move_thread_1660():
                  enter_critical
                  move_thread_flag_1660 = 1
                  local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
                  movel(towardsPos, a=0.04, v=0.03)
                  move_thread_flag_1660 = 2
                  exit_critical
                end
                move_thread_flag_1660 = 0
                move_thread_han_1660 = run move_thread_1660()
                while (True):
                  sleep(1.0E-10)
                  if (move_thread_flag_1660 > 1):
                    join move_thread_han_1660
                    $ 1661 "Until (distance)"
                    break
                  end
                  sync()
                end
                $ 1662 "MoveJ"
                $ 1663 "Zona_der1" "breakAfter"
                movej(get_inverse_kin(Zona_der1_p, qnear=Zona_der1_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1664 "Posicion_Cero" "breakAfter"
                movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
                $ 1665 "Call Quitar_Broca_Chida"
                Quitar_Broca_Chida()
                $ 1666 "Set carrusel_home=Encender"
                modbus_set_output_signal("carrusel_home", True)
                $ 1667 "Wait: 1.0"
                sleep(1.0)
                $ 1668 "Set carrusel_home=Apagar"
                modbus_set_output_signal("carrusel_home", False)
                $ 1669 "Set mensaje_mw10=120"
                modbus_set_output_register("mensaje_mw10", 120)
                $ 1670 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1671 "Wait: 1.0"
                sleep(1.0)
                $ 1672 "Set mensaje_mw10=100"
                modbus_set_output_register("mensaje_mw10", 100)
                $ 1673 "Wait Continuar_M30=HI"
                while (modbus_get_signal_status("Continuar_M30") == False):
                  sync()
                end
                $ 1674 "Wait: 1.0"
                sleep(1.0)
                $ 1675 "MoveJ"
                $ 1676 "Traslacion_der" "breakAfter"
                movej(get_inverse_kin(Traslacion_der_p, qnear=Traslacion_der_q), a=1.3962634015954636, v=1.0471975511965976)
              end
            end
            $ 1677 "barrenoActual≔barrenoActual+1"
            global barrenoActual=barrenoActual+1
          end
          $ 1678 "Set pos4_term_m612=Encender"
          modbus_set_output_signal("pos4_term_m612", True)
          $ 1679 "Wait: 1.0"
          sleep(1.0)
          $ 1680 "Set pos4_term_m612=Apagar"
          modbus_set_output_signal("pos4_term_m612", False)
        end
      end
      $ 1786 "Traslacion"
      $ 1787 "MoveJ"
      $ 1788 "Traslacion_der" "breakAfter"
      movej(get_inverse_kin(Traslacion_der_p, qnear=Traslacion_der_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1789 "Set mensaje_mw10=105"
      modbus_set_output_register("mensaje_mw10", 105)
      $ 1790 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1791 "Wait: 1.0"
      sleep(1.0)
      $ 1792 "Set mensaje_mw10=110"
      modbus_set_output_register("mensaje_mw10", 110)
      $ 1793 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1794 "Wait: 1.0"
      sleep(1.0)
      $ 1795 "Set postrnas_m187=Encender"
      modbus_set_output_signal("postrnas_m187", True)
      $ 1796 "Wait: 1.0"
      sleep(1.0)
      $ 1797 "Set Home_M20=Encender"
      modbus_set_output_signal("Home_M20", True)
      $ 1798 "Wait: 1.0"
      sleep(1.0)
      $ 1799 "Set Home_M20=Apagar"
      modbus_set_output_signal("Home_M20", False)
      $ 1800 "Set postrnas_m187=Apagar"
      modbus_set_output_signal("postrnas_m187", False)
      $ 1801 "Wait: 10.0"
      sleep(10.0)
      $ 1802 "Apagar"
      $ 1803 "Set mensaje_mw10=115"
      modbus_set_output_register("mensaje_mw10", 115)
      $ 1804 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1805 "Wait: 1.0"
      sleep(1.0)
      $ 1806 "MoveJ"
      $ 1807 "Waypoint_8" "breakAfter"
      movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1808 "Off_derecha" "breakAfter"
      movej(get_inverse_kin(Off_derecha_p, qnear=Off_derecha_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1809 "Set mensaje_mw10=0"
      modbus_set_output_register("mensaje_mw10", 0)
      $ 1810 "Wait: 1.0"
      sleep(1.0)
      $ 1811 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1812 "Wait: 1.0"
      sleep(1.0)
      $ 1813 "Popup: Apagar DAS"
      popup("Apagar DAS", "Advertencia", True, False, blocking=False)
      halt
    else:
      $ 1814 "ElseIf Lado_Correr≟1"
      if (modbus_get_signal_status("Lado_Correr") == 1):
        $ 1815 "Set mensaje_mw10=205"
        modbus_set_output_register("mensaje_mw10", 205)
      else:
        $ 1816 "ElseIf Lado_Correr≟0"
        if (modbus_get_signal_status("Lado_Correr") == 0):
          $ 1817 "Set mensaje_mw10=205"
          modbus_set_output_register("mensaje_mw10", 205)
        else:
          $ 1818 "Else" "noBreak"
          $ 1819 "Lado≔ False "
          global Lado=  False  
          $ 1820 "Set mensaje_mw10=205"
          modbus_set_output_register("mensaje_mw10", 205)
          $ 1821 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
end
