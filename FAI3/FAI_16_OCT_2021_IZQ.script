def FAI_16_OCT_2021_IZQ():
  set_safety_mode_transition_hardness(1)
  set_target_payload(1.510000, [0.009000, -0.060000, 0.035000], [0.003059, 0.003059, 0.003059, 0.000000, 0.000000, 0.000000])
  modbus_add_signal("192.168.10.45", 255, 187, 1, "postrnas_m187", False)
  modbus_set_signal_update_frequency("postrnas_m187", 10)
  modbus_add_signal("192.168.10.45", 255, 289, 1, "ini_cambro_m289", False)
  modbus_set_signal_update_frequency("ini_cambro_m289", 10)
  modbus_add_signal("192.168.10.45", 255, 290, 0, "fin_cambro_m290", False)
  modbus_set_signal_update_frequency("fin_cambro_m290", 10)
  modbus_add_signal("192.168.10.45", 255, 291, 1, "outputbroc_m291", False)
  modbus_set_signal_update_frequency("outputbroc_m291", 10)
  modbus_add_signal("192.168.10.45", 255, 292, 0, "fciclocarr_m292", False)
  modbus_set_signal_update_frequency("fciclocarr_m292", 10)
  modbus_add_signal("192.168.10.45", 255, 7, 1, "avancarrusel_m7", False)
  modbus_set_signal_update_frequency("avancarrusel_m7", 10)
  modbus_add_signal("192.168.10.45", 255, 252, 1, "pose2_m252", False)
  modbus_set_signal_update_frequency("pose2_m252", 10)
  modbus_add_signal("192.168.10.45", 255, 253, 1, "pose3_m253", False)
  modbus_set_signal_update_frequency("pose3_m253", 10)
  modbus_add_signal("192.168.10.45", 255, 254, 1, "pose4_m254", False)
  modbus_set_signal_update_frequency("pose4_m254", 10)
  modbus_add_signal("192.168.10.45", 255, 441, 1, "finciclo_m441", False)
  modbus_set_signal_update_frequency("finciclo_m441", 10)
  modbus_add_signal("192.168.10.45", 255, 503, 0, "homecobot_m503", False)
  modbus_set_signal_update_frequency("homecobot_m503", 10)
  modbus_add_signal("192.168.10.45", 255, 288, 1, "cargar_run_m288", False)
  modbus_set_signal_update_frequency("cargar_run_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 287, 0, "desactiver_m288", False)
  modbus_set_signal_update_frequency("desactiver_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 183, 0, "eje7home_m183", False)
  modbus_set_signal_update_frequency("eje7home_m183", 10)
  modbus_add_signal("192.168.10.45", 255, 444, 1, "finciclo_m444", False)
  modbus_set_signal_update_frequency("finciclo_m444", 10)
  modbus_add_signal("192.168.10.45", 255, 381, 0, "pat1_m381", False)
  modbus_set_signal_update_frequency("pat1_m381", 10)
  modbus_add_signal("192.168.10.45", 255, 382, 0, "pat2_m382", False)
  modbus_set_signal_update_frequency("pat2_m382", 10)
  modbus_add_signal("192.168.10.45", 255, 383, 0, "pat3_m383", False)
  modbus_set_signal_update_frequency("pat3_m383", 10)
  modbus_add_signal("192.168.10.45", 255, 384, 0, "pat4_m384", False)
  modbus_set_signal_update_frequency("pat4_m384", 10)
  modbus_add_signal("192.168.10.45", 255, 385, 0, "pat5_m385", False)
  modbus_set_signal_update_frequency("pat5_m385", 10)
  modbus_add_signal("192.168.10.45", 255, 386, 0, "pat6_m386", False)
  modbus_set_signal_update_frequency("pat6_m386", 10)
  modbus_add_signal("192.168.10.45", 255, 387, 0, "pat7_m387", False)
  modbus_set_signal_update_frequency("pat7_m387", 10)
  modbus_add_signal("192.168.10.45", 255, 388, 0, "pat8_m388", False)
  modbus_set_signal_update_frequency("pat8_m388", 10)
  modbus_add_signal("192.168.10.45", 255, 389, 0, "pat9_m389", False)
  modbus_set_signal_update_frequency("pat9_m389", 10)
  modbus_add_signal("192.168.10.45", 255, 390, 0, "pat10_m390", False)
  modbus_set_signal_update_frequency("pat10_m390", 10)
  modbus_add_signal("192.168.10.45", 255, 11, 3, "secuencia_mw11", False)
  modbus_set_signal_update_frequency("secuencia_mw11", 10)
  modbus_add_signal("192.168.10.45", 255, 430, 0, "modeloDer_m430", False)
  modbus_set_signal_update_frequency("modeloDer_m430", 10)
  modbus_add_signal("192.168.10.45", 255, 10, 3, "mensaje_mw10", False)
  modbus_set_signal_update_frequency("mensaje_mw10", 10)
  modbus_add_signal("192.168.10.45", 255, 379, 0, "respues_m379", False)
  modbus_set_signal_update_frequency("respues_m379", 10)
  modbus_add_signal("192.168.10.45", 255, 251, 1, "pose1_m251", False)
  modbus_set_signal_update_frequency("pose1_m251", 10)
  modbus_add_signal("192.168.10.45", 255, 3, 3, "pos_2_mw3", False)
  modbus_set_signal_update_frequency("pos_2_mw3", 10)
  modbus_add_signal("192.168.10.45", 255, 4, 2, "pasofin_mw4", False)
  modbus_set_signal_update_frequency("pasofin_mw4", 10)
  modbus_add_signal("192.168.10.45", 255, 20, 1, "Home_M20", False)
  modbus_set_signal_update_frequency("Home_M20", 10)
  modbus_add_signal("192.168.10.45", 255, 303, 1, "Home_Carrusel", False)
  modbus_set_signal_update_frequency("Home_Carrusel", 10)
  modbus_add_signal("192.168.10.45", 255, 30, 0, "Continuar_M30", False)
  modbus_set_signal_update_frequency("Continuar_M30", 10)
  modbus_add_signal("192.168.10.45", 255, 31, 1, "Msj_d_cobot_M31", False)
  modbus_set_signal_update_frequency("Msj_d_cobot_M31", 10)
  modbus_add_signal("192.168.10.45", 255, 501, 1, "posicion_non2", False)
  modbus_set_signal_update_frequency("posicion_non2", 10)
  modbus_add_signal("192.168.10.45", 255, 22, 1, "pos1_izq_m22", False)
  modbus_set_signal_update_frequency("pos1_izq_m22", 10)
  modbus_add_signal("192.168.10.45", 255, 7, 2, "Lado_Correr", False)
  modbus_set_signal_update_frequency("Lado_Correr", 10)
  modbus_add_signal("192.168.10.45", 255, 697, 1, "pos2_izq_m697", False)
  modbus_set_signal_update_frequency("pos2_izq_m697", 10)
  modbus_add_signal("192.168.10.45", 255, 13, 2, "pos_eje7_mw13", False)
  modbus_set_signal_update_frequency("pos_eje7_mw13", 10)
  modbus_add_signal("192.168.10.45", 255, 12, 3, "alarma_HMI_mw12", False)
  modbus_set_signal_update_frequency("alarma_HMI_mw12", 10)
  modbus_add_signal("192.168.10.45", 255, 9, 2, "pos_sig_der", False)
  modbus_set_signal_update_frequency("pos_sig_der", 10)
  modbus_add_signal("192.168.10.45", 255, 698, 1, "pos2_der_mw698", False)
  modbus_set_signal_update_frequency("pos2_der_mw698", 10)
  modbus_add_signal("192.168.10.45", 255, 648, 1, "carrusel_home", False)
  modbus_set_signal_update_frequency("carrusel_home", 10)
  modbus_add_signal("192.168.10.45", 255, 8, 1, "sig_carrusel_m8", False)
  modbus_set_signal_update_frequency("sig_carrusel_m8", 10)
  modbus_add_signal("192.168.10.45", 255, 611, 1, "pos1_term_m611", False)
  modbus_set_signal_update_frequency("pos1_term_m611", 10)
  modbus_add_signal("192.168.10.45", 255, 612, 1, "pos4_term_m612", False)
  modbus_set_signal_update_frequency("pos4_term_m612", 10)
  modbus_set_runstate_dependent_choice("postrnas_m187",0)
  modbus_set_runstate_dependent_choice("ini_cambro_m289",0)
  modbus_set_runstate_dependent_choice("outputbroc_m291",0)
  modbus_set_runstate_dependent_choice("avancarrusel_m7",0)
  modbus_set_runstate_dependent_choice("pose2_m252",0)
  modbus_set_runstate_dependent_choice("pose3_m253",0)
  modbus_set_runstate_dependent_choice("pose4_m254",0)
  modbus_set_runstate_dependent_choice("finciclo_m441",0)
  modbus_set_runstate_dependent_choice("cargar_run_m288",0)
  modbus_set_runstate_dependent_choice("finciclo_m444",0)
  modbus_set_runstate_dependent_choice("secuencia_mw11",0)
  modbus_set_runstate_dependent_choice("mensaje_mw10",0)
  modbus_set_runstate_dependent_choice("pose1_m251",0)
  modbus_set_runstate_dependent_choice("pos_2_mw3",0)
  modbus_set_runstate_dependent_choice("Home_M20",0)
  modbus_set_runstate_dependent_choice("Home_Carrusel",0)
  modbus_set_runstate_dependent_choice("Msj_d_cobot_M31",0)
  modbus_set_runstate_dependent_choice("posicion_non2",0)
  modbus_set_runstate_dependent_choice("pos1_izq_m22",0)
  modbus_set_runstate_dependent_choice("pos2_izq_m697",0)
  modbus_set_runstate_dependent_choice("alarma_HMI_mw12",0)
  modbus_set_runstate_dependent_choice("pos2_der_mw698",0)
  modbus_set_runstate_dependent_choice("carrusel_home",0)
  modbus_set_runstate_dependent_choice("sig_carrusel_m8",0)
  modbus_set_runstate_dependent_choice("pos1_term_m611",0)
  modbus_set_runstate_dependent_choice("pos4_term_m612",0)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_runstate_standard_digital_outputs([2])
  set_runstate_configurable_digital_outputs([1])
  set_runstate_standard_digital_output_to_value(2, 1)
  set_runstate_configurable_digital_output_to_value(1, 1)
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  step_count_7db1b012_753b_464a_81bf_b7f67987aa4b = 0.0
  thread Step_Counter_Thread_7d481718_da59_4a31_a97a_0f592335d32d():
    while (True):
      step_count_7db1b012_753b_464a_81bf_b7f67987aa4b = step_count_7db1b012_753b_464a_81bf_b7f67987aa4b + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_7d481718_da59_4a31_a97a_0f592335d32d()
  set_gravity([0.0, 0.0, 9.82])
  set_tcp(p[1.5056042997465408E-4,-0.1671653624070516,0.03508840029654564,1.578426503296317,-0.07286998940142633,0.068713436990727])
  global Line_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_2=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_4=p[-0.2932874787951964,0.3932288129452105,0.013749459185886714,0.019478391032120013,-0.0350876085014595,1.5300278925331599]
  global Line_5=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_6=p[-0.8534043480453131,0.702447272711755,-0.28895464606575716,2.5692512849242175,-1.7952327304622913,0.016877746986721606]
  global Plane_1=p[-0.4357649673792705,0.3571224276764373,-0.011331751409534768,-0.03455953496512708,-0.012487423981114925,3.103751116092306]
  global Plane_2=p[-0.4823864034329737,0.3302516442079689,0.014283714098506706,0.017125077458443067,0.05770060098903715,-2.9134709732588786]
  global Plane_3=p[0.003678615545088639,0.4082921331082374,0.10477407557236007,-2.072177303174012E-4,7.379081343290108E-4,-6.424400645467977E-4]
  global Plane_4=p[-0.4500206307677429,-0.2823718146925442,-0.4767416657426552,0.013278190059218174,0.013334473770785706,1.8479691991032237]
  global Plane_5=p[-0.41463155496548926,-0.36477068260681855,-0.008600875771562433,0.005091590071719368,-3.1306630971044838,9.935069716473452E-4]
  global Plano_patron1=p[-0.7699005610122596,0.304894434078545,0.0420369514744936,-0.0031270356010209216,1.7180543614697593E-4,-3.508888786211572E-5]
  global Point_13=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_16=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_17=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_8=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_prot_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_seg_der=p[0.23741638234469645,0.3587772222537799,0.42419077585740217,0.818517054876345,1.4216436941132238,1.005041187710707]
  global pisp_958=p[-0.41395442210486977,-0.2082168853247176,0.041553466664982,0.014014788518713659,0.01101911827984854,1.569193423241601]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  # begin: URCap Installation Node
  #   Source: Robotiq_Copilot, 1.21.1.12738, Robotiq Inc.
  #   Type: Copilot
  # end: URCap Installation Node
  global Off_derecha_p=p[.175169185566, -.051554138138, .018125105201, -2.004562124247, .091472206835, .057750007087]
  global Off_derecha_q=[1.570852279663086, -1.5707929891398926, 2.6970372835742396, -2.2214702148914967E-6, 1.5707619190216064, -7.18275653284195E-5]
  global Off_izquierda_p=p[-.173641757387, -.015442082864, .055621470902, -1.839430064185, .083010205328, .061382955300]
  global Off_izquierda_q=[-1.5707457701312464, -1.5707276267679227, -2.687852382659912, -3.316165109673971, -1.5707138220416468, 8.037686347961426E-5]
  global Waypoint_8_p=p[-.173699647440, -.124883261532, .163165755042, 3.130157111235, -.140294294416, .002707510300]
  global Waypoint_8_q=[-1.5708263556109827, -0.2617946428111573, -2.687769889831543, -3.3160916767516078, -1.5707548300372522, -6.753603090459137E-5]
  global Waypoint_9_p=p[-.174328778783, .119284389584, .905668965090, 2.014724821481, -.090755531423, .057621686787]
  global Waypoint_9_q=[-1.5708263556109827, -0.2618289750865479, -1.5708308219909668, -3.3160606823363246, -1.5707381407367151, -6.944337953740387E-5]
  global Traslacion_izq_p=p[-.174236932822, -.721629681684, .505385512228, -3.129184290922, .141168986777, -.000185759384]
  global Traslacion_izq_q=[-1.5707982222186487, -1.570806165734762, -1.5708266496658325, -3.141595026055807, -1.5708401838885706, -2.271333803349762E-5]
  global Posicion_Cero_p=p[.000551034196, -.324741658168, 1.651531596673, -.004067845039, -.015373584826, -3.049976141092]
  global Posicion_Cero_q=[-4.7032033101856996E-5, -1.570850511590475, 7.230440248662262E-5, -1.5707809132403163, -1.2222920553028871E-5, -6.024037496388246E-6]
  global Zona_izq1_p=p[.721637475078, -.174261966188, .505424504860, 2.323478785739, 2.114441561813, .000074296350]
  global Zona_izq1_q=[0.0011669397354125977, -1.5661519209719081, -1.5778599977493286, -3.129935403863424, -1.5657342115985315, -5.977789508264664E-4]
  def calculate_point_to_move_towards(feature, direction, position_distance):
    local posDir=[direction[0], direction[1], direction[2]]
    if (norm(posDir) < 1e-6):
      return get_target_waypoint()
    end
    local direction_vector_normalized=normalize(posDir)
    local displacement_pose=p[direction_vector_normalized[0] * position_distance,direction_vector_normalized[1] * position_distance,direction_vector_normalized[2] * position_distance,0,0,0]
    local wanted_displacement_in_base_frame=pose_sub(pose_trans(feature, displacement_pose), feature)
    return pose_add(get_target_waypoint(), wanted_displacement_in_base_frame)
  end
  global Paso2_izq1_p=p[.414117758121, -.280673465586, .089978444444, -2.392816339771, -2.035586336176, .000040828587]
  global Paso2_izq1_q=[-0.31828481355776006, -1.4719246339849015, -2.4801015853881836, -2.322421213189596, -1.820289436970846, 0.0019272746285423636]
  global Precambio_izq_p=p[.000343149009, .460223946790, .419989466361, .210917908511, 3.124626147036, -.022185118256]
  global Precambio_izq_q=[-2.1428774038897913, -2.107462545434469, 2.1065695921527308, 0.008337779636047316, 1.0423450469970703, -0.013045612965719044]
  global Dejar_izq_p=p[.000401628345, .460234903411, .060506378771, .211113063071, 3.124577549678, -.022123064741]
  global Dejar_izq_q=[-2.1427162329303187, -1.75697722057485, 2.6205735842334192, -0.85709501922641, 1.0407932996749878, -0.011277500783101857]
  global Paso1_Izq1_p=p[.724517349030, -.011189144515, .099711486199, -2.392639464608, -2.035777761341, -.000025500039]
  global Paso1_Izq1_q=[0.3082733452320099, -1.785203596154684, -2.1155338287353516, -2.3716799221434535, -1.1936968008624476, -0.0038860479937952164]
  global Paso1_Izq2_p=p[.724528357685, .034912059631, .088855531131, -2.392635982433, -2.035867296034, -.000073091472]
  global Paso1_Izq2_q=[0.3875788450241089, -1.8021394215025843, -2.119516134262085, -2.3501349888243617, -1.1144779364215296, -0.004849259053365529]
  global Sacar1_izq1_p=p[.394634130264, -.044738737121, .037509911446, -2.392600898729, -2.035779269447, -.000051711625]
  global Sacar1_izq1_q=[0.6497831344604492, -1.2436809700778504, -2.7686805725097656, -2.256355424920553, -0.8526156584369105, -0.009207550679342091]
  global Sacar1_izq2_p=p[.389880934138, -.027806398631, .038704879310, 2.392049715037, 2.035793076898, .000913712579]
  global Sacar1_izq2_q=[0.7457036375999451, -1.2103223961642762, -2.78068208694458, -2.2747746906676234, -0.756909195576803, -0.01226360002626592]
  global Sacar1h_izq1_p=p[.464657339751, -.049255918207, .069987404392, -2.392692165032, -2.035763909719, .000090410884]
  global Sacar1h_izq1_q=[0.4625290036201477, -1.373563752775528, -2.6071109771728516, -2.2904163799681605, -1.0397308508502405, -0.006154362355367482]
  global Sacar1h_izq2_p=p[.461502504599, -.033305632256, .040342134287, 2.391973513756, 2.035848520268, .000954476147]
  global Sacar1h_izq2_q=[0.5224836468696594, -1.4376974266818543, -2.643857002258301, -2.18798889736318, -0.9803136030780237, -0.007324043904439748]
  global Sacar2_izq1_p=p[1.149582245597, -.041957142932, .041790968248, -2.392697501518, -2.035758618763, -.000207358180]
  global Sacar2_izq1_q=[0.14398381114006042, -2.4396897755064906, -1.151375651359558, -2.6821676693358363, -1.356772247944967, -0.00201589265932256]
  global Sacar2_izq2_p=p[1.142672878996, -.024561937009, .046992944469, 2.392624123537, 2.035858788735, .000130291911]
  global Sacar2_izq2_q=[0.1626272052526474, -2.423734327355856, -1.1716316938400269, -2.6777574024596156, -1.3382332960711878, -0.0023077170001428726]
  global Sacar2h_izq1_p=p[1.124538554888, -.046740032859, .050049482464, -2.392602205279, -2.035798090785, -.000124757323]
  global Sacar2h_izq1_q=[0.14281107485294342, -2.3934155903258265, -1.2229485511779785, -2.6569467983641566, -1.358103100453512, -0.0019910971270959976]
  global Sacar2h_izq2_p=p[1.123399688257, -.032869657121, .050433285780, -2.392624858159, -2.035792129934, -.000099041861]
  global Sacar2h_izq2_q=[0.15732574462890625, -2.390654226342672, -1.2273906469345093, -2.6552025280394496, -1.3435834089862269, -0.0021589438067834976]
  global Sacar3_izq1_p=p[.375456936800, -.406999081776, .039986067536, -2.392867519537, -2.035560993063, -.000002032021]
  global Sacar3_izq1_q=[-0.6634061972247522, -1.706775804559225, -2.3748512268066406, -2.192015310327047, -2.1655433813678187, 0.0057961223646998405]
  global Sacar3_izq2_p=p[.371850887834, -.391262076806, .039216444972, -2.392730281604, -2.035524901098, -.000031932122]
  global Sacar3_izq2_q=[-0.6383884588824671, -1.684777399102682, -2.4041171073913574, -2.1849423847594203, -2.1405885855304163, 0.00556216249242425]
  global Sacar4_izq1_p=p[.373965557285, -.146950326771, .039428905715, -2.392881192082, -2.035553293530, .000016991110]
  global Sacar4_izq1_q=[0.18144923448562622, -1.2974437040141602, -2.7364590167999268, -2.2391845188536585, -1.3207324186908167, -0.00277120271791631]
  global Sacar4_izq2_p=p[.370429940031, -.132189984192, .039809225098, -2.392821061280, -2.035600652077, -.000096039702]
  global Sacar4_izq2_q=[0.2625126838684082, -1.257269100551941, -2.7559778690338135, -2.2593118153014125, -1.2396824995623987, -0.003666702901021779]
  def Poner_Broca():
    $ 1664 "Poner_Broca" "noBreak"
    $ 1665 "If Lado_Correr≟1"
    if (modbus_get_signal_status("Lado_Correr") == 1):
      $ 1666 "Poner_Broca"
      $ 1667 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 1668 "MoveJ"
      $ 1669 "Precambio_izq" "breakAfter"
      movej(get_inverse_kin(Precambio_izq_p, qnear=Precambio_izq_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1670 "MoveL"
      $ 1671 "Dejar_izq" "breakAfter"
      movel(Dejar_izq_p, a=1.2, v=0.25)
      $ 1672 "Set ini_cambro_m289=Encender"
      modbus_set_output_signal("ini_cambro_m289", True)
      $ 1673 "Wait: 3.8"
      sleep(3.8)
      $ 1674 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 1675 "Wait: 0.5"
      sleep(0.5)
      $ 1676 "Wait fciclocarr_m292=LO"
      while (modbus_get_signal_status("fciclocarr_m292") == True):
        sync()
      end
      $ 1677 "Wait: 0.5"
      sleep(0.5)
      $ 1678 "freedrive_mode()"
      freedrive_mode()
      $ 1679 "Wait: 2.0"
      sleep(2.0)
      $ 1680 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 1681 "MoveJ"
      $ 1682 "Dejar_izq" "breakAfter"
      movej(get_inverse_kin(Dejar_izq_p, qnear=Dejar_izq_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1683 "MoveL"
      $ 1684 "Precambio_izq" "breakAfter"
      movel(Precambio_izq_p, a=1.2, v=0.25)
    else:
      $ 1685 "ElseIf Lado_Correr≟2"
      if (modbus_get_signal_status("Lado_Correr") == 2):
      else:
        $ 1687 "ElseIf Lado_Correr≟3"
        if (modbus_get_signal_status("Lado_Correr") == 3):
        else:
          $ 1689 "Else" "noBreak"
          $ 1690 "Lado≔ False "
          global Lado=  False  
          $ 1691 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
  def Quitar_Broca_Chida():
    $ 1692 "Quitar_Broca_Chida" "noBreak"
    $ 1693 "If Lado_Correr≟1"
    if (modbus_get_signal_status("Lado_Correr") == 1):
      $ 1694 "Quitar_Broca"
      $ 1695 "MoveJ"
      $ 1696 "Loop 1 times"
      Loop_3 = 0
      while (Loop_3 < 1):
        $ 1697 "MoveL"
        $ 1698 "MoveJ"
        $ 1699 "Precambio_izq" "breakAfter"
        movej(get_inverse_kin(Precambio_izq_p, qnear=Precambio_izq_q), a=1.3962634015954636, v=1.0471975511965976)
        $ 1700 "Dejar_izq" "breakAfter"
        movel(Dejar_izq_p, a=0.05, v=0.1)
        $ 1701 "Freemove"
        $ 1702 "Wait: 2.0"
        sleep(2.0)
        $ 1703 "freedrive_mode()"
        freedrive_mode()
        $ 1704 "Wait: 2.5"
        sleep(2.5)
        $ 1705 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1706 "Set outputbroc_m291=Encender"
        modbus_set_output_signal("outputbroc_m291", True)
        $ 1707 "Wait: 0.5"
        sleep(0.5)
        $ 1708 "Set outputbroc_m291=Apagar"
        modbus_set_output_signal("outputbroc_m291", False)
        $ 1709 "Wait: 0.5"
        sleep(0.5)
        $ 1710 "Wait fciclocarr_m292=LO"
        while (modbus_get_signal_status("fciclocarr_m292") == True):
          sync()
        end
        $ 1711 "Wait: 0.5"
        sleep(0.5)
        $ 1712 "Freemove"
        $ 1713 "Wait: 0.5"
        sleep(0.5)
        $ 1714 "freedrive_mode()"
        freedrive_mode()
        $ 1715 "Wait: 2.5"
        sleep(2.5)
        $ 1716 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1717 "Precambio_izq" "breakAfter"
        movel(Precambio_izq_p, a=1.2, v=0.25)
        $ 1718 "Set avancarrusel_m7=Encender"
        modbus_set_output_signal("avancarrusel_m7", True)
        $ 1719 "Wait: 1.1"
        sleep(1.1)
        $ 1720 "Set avancarrusel_m7=Apagar"
        modbus_set_output_signal("avancarrusel_m7", False)
        Loop_3 = Loop_3 + 1
      end
    else:
      $ 1721 "ElseIf Lado_Correr≟2"
      if (modbus_get_signal_status("Lado_Correr") == 2):
      else:
        $ 1723 "ElseIf Lado_Correr≟3"
        if (modbus_get_signal_status("Lado_Correr") == 3):
        else:
          $ 1725 "Else" "noBreak"
          $ 1726 "Lado≔ False "
          global Lado=  False  
          $ 1727 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
  def Calibracion():
    $ 1728 "Calibracion" "noBreak"
    $ 1729 "Offsets factor"
    $ 1731 "L1B1x≔((0.09523476)/(0.09525))*(0.09523476)"
    global L1B1x=((0.09523476)/(0.09525))*(0.09523476)
    $ 1732 "L1B1y≔((-0.01278382)/(-0.0127))*(-0.01278382)"
    global L1B1y=((-0.01278382)/(-0.0127))*(-0.01278382)
    $ 1733 "L1B2x≔((0.75575414)/(0.75565))*(0.75575414)"
    global L1B2x=((0.75575414)/(0.75565))*(0.75575414)
    $ 1734 "L1B2y≔((-0.01279398)/(-0.0127))*(-0.01279398)"
    global L1B2y=((-0.01279398)/(-0.0127))*(-0.01279398)
    $ 1735 "L2B1x≔((0.09675299)/(0.09525))*(0.09675299)"
    global L2B1x=((0.09675299)/(0.09525))*(0.09675299)
    $ 1736 "L2B1y≔((0.3937)/(0.3937))*(0.3937)"
    global L2B1y=((0.3937)/(0.3937))*(0.3937)
    $ 1737 "L2B2x≔((0.757306777)/(0.75565))*(0.757306777)"
    global L2B2x=((0.757306777)/(0.75565))*(0.757306777)
    $ 1738 "L2B2y≔((0.393684081)/(0.3937))*(0.393684081)"
    global L2B2y=((0.393684081)/(0.3937))*(0.393684081)
    $ 1739 "If Lado_Correr≟1"
    if (modbus_get_signal_status("Lado_Correr") == 1):
      $ 1740 "Subvariables"
      $ 1741 "muestras≔1"
      global muestras=1
      $ 1742 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1743 "P1≔p[0,0,0,0,0,0]"
      global P1=p[0,0,0,0,0,0]
      $ 1744 "P2≔p[0,0,0,0,0,0]"
      global P2=p[0,0,0,0,0,0]
      $ 1745 "P3≔p[0,0,0,0,0,0]"
      global P3=p[0,0,0,0,0,0]
      $ 1746 "P4≔p[0,0,0,0,0,0]"
      global P4=p[0,0,0,0,0,0]
      $ 1747 "P1h≔p[0,0,0,0,0,0]"
      global P1h=p[0,0,0,0,0,0]
      $ 1748 "P2h≔p[0,0,0,0,0,0]"
      global P2h=p[0,0,0,0,0,0]
      $ 1749 "altura≔0"
      global altura=0
      $ 1750 "rotaciones≔p[0,0,0,0,0,0]"
      global rotaciones=p[0,0,0,0,0,0]
      $ 1751 "PosFinal≔p[0,0,0,0,0,0]"
      global PosFinal=p[0,0,0,0,0,0]
      $ 1752 "m1≔0"
      global m1=0
      $ 1753 "m2≔0"
      global m2=0
      $ 1754 "b1≔0"
      global b1=0
      $ 1755 "b2≔0"
      global b2=0
      $ 1756 "Xd≔0"
      global Xd=0
      $ 1757 "Yd≔0"
      global Yd=0
      $ 1758 "Xp≔0"
      global Xp=0
      $ 1759 "Yp≔0"
      global Yp=0
      $ 1760 "Xfin≔0"
      global Xfin=0
      $ 1761 "Yfin≔0"
      global Yfin=0
      $ 1762 "Calibracion"
      $ 1763 "MoveL"
      $ 1764 "Direction: Base Z+"
      global move_thread_flag_1764=0
      thread move_thread_1764():
        enter_critical
        move_thread_flag_1764 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.1)
        movel(towardsPos, a=1.2, v=0.25)
        move_thread_flag_1764 = 2
        exit_critical
      end
      move_thread_flag_1764 = 0
      move_thread_han_1764 = run move_thread_1764()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1764 > 1):
          join move_thread_han_1764
          $ 1765 "Until (distance)"
          break
        end
        sync()
      end
      $ 1766 "MoveJ"
      $ 1767 "Zona_izq1" "breakAfter"
      movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1768 "MoveL"
      $ 1769 "MoveJ"
      $ 1770 "If pos_eje7_mw13≟2"
      if (modbus_get_signal_status("pos_eje7_mw13") == 2):
        $ 1771 "Paso1_Izq1" "breakAfter"
        movej(get_inverse_kin(Paso1_Izq1_p, qnear=Paso1_Izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 1772 "ElseIf pos_eje7_mw13≟3"
        if (modbus_get_signal_status("pos_eje7_mw13") == 3):
          $ 1773 "Paso1_Izq2" "breakAfter"
          movej(get_inverse_kin(Paso1_Izq2_p, qnear=Paso1_Izq2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 1774 "P1"
      $ 1775 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1776 "MoveJ"
        $ 1777 "If pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1778 "Sacar1_izq1" "breakAfter"
          movej(get_inverse_kin(Sacar1_izq1_p, qnear=Sacar1_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1779 "ElseIf pos_eje7_mw13≟3"
          if (modbus_get_signal_status("pos_eje7_mw13") == 3):
            $ 1780 "Sacar1_izq2" "breakAfter"
            movej(get_inverse_kin(Sacar1_izq2_p, qnear=Sacar1_izq2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1781 "Wait: 0.5"
        sleep(0.5)
        $ 1782 "Direction: Base Y-"
        global move_thread_flag_1782=0
        thread move_thread_1782():
          enter_critical
          move_thread_flag_1782 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,-1.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1782 = 2
          exit_critical
        end
        move_thread_flag_1782 = 0
        move_thread_han_1782 = run move_thread_1782()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1782
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1783 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1784 "Wait: 2.0"
        sleep(2.0)
        $ 1785 "P1≔pose_add(get_actual_tcp_pose(), P1)"
        global P1= pose_add ( get_actual_tcp_pose (), P1)
        $ 1786 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1787 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1788 "var_1≔(P1[0])/muestras"
      global var_1=(P1[0])/muestras
      $ 1789 "var_2≔(P1[1])/muestras"
      global var_2=(P1[1])/muestras
      $ 1790 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1791 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1792 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1793 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1794 "P1≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P1=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 1795 "P1h"
      $ 1796 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1797 "Direction: Base Y+"
        global move_thread_flag_1797=0
        thread move_thread_1797():
          enter_critical
          move_thread_flag_1797 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,1.0,0.0], 0.04)
          movel(towardsPos, a=1.2, v=0.25)
          move_thread_flag_1797 = 2
          exit_critical
        end
        move_thread_flag_1797 = 0
        move_thread_han_1797 = run move_thread_1797()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1797 > 1):
            join move_thread_han_1797
            $ 1798 "Until (distance)"
            break
          end
          sync()
        end
        $ 1799 "MoveJ"
        $ 1800 "If pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1801 "Sacar1h_izq1" "breakAfter"
          movej(get_inverse_kin(Sacar1h_izq1_p, qnear=Sacar1h_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1802 "ElseIf pos_eje7_mw13≟3"
          if (modbus_get_signal_status("pos_eje7_mw13") == 3):
            $ 1803 "Sacar1h_izq2" "breakAfter"
            movej(get_inverse_kin(Sacar1h_izq2_p, qnear=Sacar1h_izq2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1804 "Wait: 0.5"
        sleep(0.5)
        $ 1805 "Direction: Base Z-"
        global move_thread_flag_1805=0
        thread move_thread_1805():
          enter_critical
          move_thread_flag_1805 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1805 = 2
          exit_critical
        end
        move_thread_flag_1805 = 0
        move_thread_han_1805 = run move_thread_1805()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1805
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1806 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1807 "Wait: 2.0"
        sleep(2.0)
        $ 1808 "P1h≔pose_add(get_actual_tcp_pose(), P1h)"
        global P1h= pose_add ( get_actual_tcp_pose (), P1h)
        $ 1809 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1810 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1811 "var_1≔(P1h[0])/muestras"
      global var_1=(P1h[0])/muestras
      $ 1812 "var_2≔(P1h[1])/muestras"
      global var_2=(P1h[1])/muestras
      $ 1813 "var_9≔(P1h[2])/muestras"
      global var_9=(P1h[2])/muestras
      $ 1814 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1815 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1816 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1817 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1818 "P1h≔p[var_1,var_2,var_9,var_3,var_4,var_5]"
      global P1h=p[var_1,var_2,var_9,var_3,var_4,var_5]
      $ 1819 "MoveJ"
      $ 1820 "If pos_eje7_mw13≟2"
      if (modbus_get_signal_status("pos_eje7_mw13") == 2):
        $ 1821 "Paso1_Izq1" "breakAfter"
        movej(get_inverse_kin(Paso1_Izq1_p, qnear=Paso1_Izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 1822 "ElseIf pos_eje7_mw13≟3"
        if (modbus_get_signal_status("pos_eje7_mw13") == 3):
          $ 1823 "Paso1_Izq2" "breakAfter"
          movej(get_inverse_kin(Paso1_Izq2_p, qnear=Paso1_Izq2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 1824 "P2"
      $ 1825 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1826 "MoveJ"
        $ 1827 "If pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1828 "Sacar2_izq1" "breakAfter"
          movej(get_inverse_kin(Sacar2_izq1_p, qnear=Sacar2_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1829 "ElseIf pos_eje7_mw13≟3"
          if (modbus_get_signal_status("pos_eje7_mw13") == 3):
            $ 1830 "Sacar2_izq2" "breakAfter"
            movej(get_inverse_kin(Sacar2_izq2_p, qnear=Sacar2_izq2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1831 "Wait: 0.5"
        sleep(0.5)
        $ 1832 "Direction: Base Y-"
        global move_thread_flag_1832=0
        thread move_thread_1832():
          enter_critical
          move_thread_flag_1832 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,-1.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1832 = 2
          exit_critical
        end
        move_thread_flag_1832 = 0
        move_thread_han_1832 = run move_thread_1832()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1832
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1833 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1834 "Wait: 2.0"
        sleep(2.0)
        $ 1835 "P2≔pose_add(get_actual_tcp_pose(), P2)"
        global P2= pose_add ( get_actual_tcp_pose (), P2)
        $ 1836 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1837 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1838 "var_1≔(P2[0])/muestras"
      global var_1=(P2[0])/muestras
      $ 1839 "var_2≔(P2[1])/muestras"
      global var_2=(P2[1])/muestras
      $ 1840 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1841 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1842 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1843 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1844 "P2≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P2=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 1845 "MoveJ"
      $ 1846 "If pos_eje7_mw13≟2"
      if (modbus_get_signal_status("pos_eje7_mw13") == 2):
        $ 1847 "Paso1_Izq1" "breakAfter"
        movej(get_inverse_kin(Paso1_Izq1_p, qnear=Paso1_Izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 1848 "ElseIf pos_eje7_mw13≟3"
        if (modbus_get_signal_status("pos_eje7_mw13") == 3):
          $ 1849 "Paso1_Izq2" "breakAfter"
          movej(get_inverse_kin(Paso1_Izq2_p, qnear=Paso1_Izq2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 1850 "P2h"
      $ 1851 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1852 "MoveJ"
        $ 1853 "If pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1854 "Sacar2h_izq1" "breakAfter"
          movej(get_inverse_kin(Sacar2h_izq1_p, qnear=Sacar2h_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1855 "ElseIf pos_eje7_mw13≟3"
          if (modbus_get_signal_status("pos_eje7_mw13") == 3):
            $ 1856 "Sacar2h_izq2" "breakAfter"
            movej(get_inverse_kin(Sacar2h_izq2_p, qnear=Sacar2h_izq2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1857 "Wait: 0.5"
        sleep(0.5)
        $ 1858 "Direction: Base Z-"
        global move_thread_flag_1858=0
        thread move_thread_1858():
          enter_critical
          move_thread_flag_1858 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1858 = 2
          exit_critical
        end
        move_thread_flag_1858 = 0
        move_thread_han_1858 = run move_thread_1858()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1858
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1859 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1860 "Wait: 2.0"
        sleep(2.0)
        $ 1861 "P2h≔pose_add(get_actual_tcp_pose(), P2h)"
        global P2h= pose_add ( get_actual_tcp_pose (), P2h)
        $ 1862 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1863 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1864 "var_1≔(P2h[0])/muestras"
      global var_1=(P2h[0])/muestras
      $ 1865 "var_2≔(P2h[1])/muestras"
      global var_2=(P2h[1])/muestras
      $ 1866 "var_9≔(P2h[2])/muestras"
      global var_9=(P2h[2])/muestras
      $ 1867 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1868 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1869 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1870 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1871 "P2h≔p[var_1,var_2,var_9,var_3,var_4,var_5]"
      global P2h=p[var_1,var_2,var_9,var_3,var_4,var_5]
      $ 1872 "MoveJ"
      $ 1873 "If pos_eje7_mw13≟2"
      if (modbus_get_signal_status("pos_eje7_mw13") == 2):
        $ 1874 "Paso1_Izq1" "breakAfter"
        movej(get_inverse_kin(Paso1_Izq1_p, qnear=Paso1_Izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      else:
        $ 1875 "ElseIf pos_eje7_mw13≟3"
        if (modbus_get_signal_status("pos_eje7_mw13") == 3):
          $ 1876 "Paso1_Izq2" "breakAfter"
          movej(get_inverse_kin(Paso1_Izq2_p, qnear=Paso1_Izq2_q), a=1.3962634015954636, v=1.0471975511965976)
        end
      end
      $ 1877 "m1"
      $ 1878 "var_1≔(P1[0])"
      global var_1=(P1[0])
      $ 1879 "var_2≔(P1[1])"
      global var_2=(P1[1])
      $ 1880 "var_3≔(P2[0])"
      global var_3=(P2[0])
      $ 1881 "var_4≔(P2[1])"
      global var_4=(P2[1])
      $ 1882 "m1≔(var_4-var_2)/(var_3-var_1)"
      global m1=(var_4-var_2)/(var_3-var_1)
      $ 1883 "b1"
      $ 1884 "b1≔((m1*var_1)-var_2)*(-1)"
      global b1=((m1*var_1)-var_2)*(-1)
      $ 1885 "MoveJ"
      $ 1886 "Paso2_izq1" "breakAfter"
      movej(get_inverse_kin(Paso2_izq1_p, qnear=Paso2_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1887 "P3"
      $ 1888 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1889 "MoveJ"
        $ 1890 "If pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1891 "Sacar3_izq1" "breakAfter"
          movej(get_inverse_kin(Sacar3_izq1_p, qnear=Sacar3_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1892 "ElseIf pos_eje7_mw13≟3"
          if (modbus_get_signal_status("pos_eje7_mw13") == 3):
            $ 1893 "Sacar3_izq2" "breakAfter"
            movej(get_inverse_kin(Sacar3_izq2_p, qnear=Sacar3_izq2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1894 "Wait: 0.5"
        sleep(0.5)
        $ 1895 "Direction: Base X-"
        global move_thread_flag_1895=0
        thread move_thread_1895():
          enter_critical
          move_thread_flag_1895 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [-1.0,0.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1895 = 2
          exit_critical
        end
        move_thread_flag_1895 = 0
        move_thread_han_1895 = run move_thread_1895()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1895
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1896 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1897 "Wait: 2.0"
        sleep(2.0)
        $ 1898 "P3≔pose_add(get_actual_tcp_pose(), P3)"
        global P3= pose_add ( get_actual_tcp_pose (), P3)
        $ 1899 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1900 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1901 "var_1≔(P3[0])/muestras"
      global var_1=(P3[0])/muestras
      $ 1902 "var_2≔(P3[1])/muestras"
      global var_2=(P3[1])/muestras
      $ 1903 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1904 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1905 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1906 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1907 "P3≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P3=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 1908 "MoveJ"
      $ 1909 "Paso2_izq1" "breakAfter"
      movej(get_inverse_kin(Paso2_izq1_p, qnear=Paso2_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1910 "P4"
      $ 1911 "Loop muestrasTomadas<muestras"
      while (muestrasTomadas<muestras):
        $ 1912 "MoveJ"
        $ 1913 "If pos_eje7_mw13≟2"
        if (modbus_get_signal_status("pos_eje7_mw13") == 2):
          $ 1914 "Sacar4_izq1" "breakAfter"
          movej(get_inverse_kin(Sacar4_izq1_p, qnear=Sacar4_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1915 "ElseIf pos_eje7_mw13≟3"
          if (modbus_get_signal_status("pos_eje7_mw13") == 3):
            $ 1916 "Sacar4_izq2" "breakAfter"
            movej(get_inverse_kin(Sacar4_izq2_p, qnear=Sacar4_izq2_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1917 "Wait: 0.5"
        sleep(0.5)
        $ 1918 "Direction: Base X-"
        global move_thread_flag_1918=0
        thread move_thread_1918():
          enter_critical
          move_thread_flag_1918 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [-1.0,0.0,0.0], 1000.0)
          movel(towardsPos, a=2.0E-4, v=0.0013)
          move_thread_flag_1918 = 2
          exit_critical
        end
        move_thread_flag_1918 = 0
        move_thread_han_1918 = run move_thread_1918()
        while (True):
          local targetTcpDirection=get_target_tcp_speed()
          local stepsToRetract=tool_contact(direction=targetTcpDirection)
          if (stepsToRetract > 0):
            kill move_thread_han_1918
            stopl(9.0)
            local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
            local contactPose=get_forward_kin(backTrackMovement)
            local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
            local retractTo=contactPose
            if (norm(posDir) > 1e-6):
              local normalizedPosDir=normalize(posDir)
              local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
              retractTo = pose_sub(contactPose, additionalRetraction)
            end
            movel(retractTo, a=9.0, v=0.1)
            $ 1919 "Until (tool_contact_detection)"
            break
          end
          sync()
        end
        $ 1920 "Wait: 2.0"
        sleep(2.0)
        $ 1921 "P4≔pose_add(get_actual_tcp_pose(), P4)"
        global P4= pose_add ( get_actual_tcp_pose (), P4)
        $ 1922 "muestrasTomadas≔muestrasTomadas+1"
        global muestrasTomadas=muestrasTomadas+1
      end
      $ 1923 "muestrasTomadas≔0"
      global muestrasTomadas=0
      $ 1924 "var_1≔(P4[0])/muestras"
      global var_1=(P4[0])/muestras
      $ 1925 "var_2≔(P4[1])/muestras"
      global var_2=(P4[1])/muestras
      $ 1926 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1927 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1928 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1929 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1930 "P4≔p[var_1,var_2,-0.37,var_3,var_4,var_5]"
      global P4=p[var_1,var_2,-0.37,var_3,var_4,var_5]
      $ 1931 "MoveJ"
      $ 1932 "Paso2_izq1" "breakAfter"
      movej(get_inverse_kin(Paso2_izq1_p, qnear=Paso2_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1933 "m2"
      $ 1934 "var_1≔(P3[0])"
      global var_1=(P3[0])
      $ 1935 "var_2≔(P3[1])"
      global var_2=(P3[1])
      $ 1936 "var_3≔(P4[0])"
      global var_3=(P4[0])
      $ 1937 "var_4≔(P4[1])"
      global var_4=(P4[1])
      $ 1938 "m2≔(var_4-var_2)/(var_3-var_1)"
      global m2=(var_4-var_2)/(var_3-var_1)
      $ 1939 "b2"
      $ 1940 "b2≔((m2*var_1)-var_2)*(-1)"
      global b2=((m2*var_1)-var_2)*(-1)
      $ 1941 "Xd y Yd"
      $ 1942 "Xd≔(b2-b1)/(m1-m2)"
      global Xd=(b2-b1)/(m1-m2)
      $ 1943 "Yd≔(m1*Xd)+b1"
      global Yd=(m1*Xd)+b1
      $ 1948 "Xp y Yp"
      $ 1949 "Xp≔((1)/(sqrt((m1*m1)+1)))*(1)"
      global Xp=((1)/(sqrt((m1*m1)+1)))*(1)
      $ 1950 "Yp≔((m2)/(sqrt((m2*m2)+1)))*(1)"
      global Yp=((m2)/(sqrt((m2*m2)+1)))*(1)
      $ 1951 "Origen"
      $ 1952 "Xfin≔(((0*(-1)*Xp)-(Xd)-(0*(1/m2)))*(-1))*(1)"
      global Xfin=(((0*(-1)*Xp)-(Xd)-(0*(1/m2)))*(-1))*(1)
      $ 1953 "Yfin≔(((0*(-1)*Yp)-(Yd)+(0*(-1)*m1))*(-1))*(1)"
      global Yfin=(((0*(-1)*Yp)-(Yd)+(0*(-1)*m1))*(-1))*(1)
      $ 1954 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1955 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1956 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1957 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1958 "If broca≟1645"
      if (broca == 1645):
        $ 1959 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.420,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.420,var_3,var_4,var_5]
      else:
        $ 1960 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 1961 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]
        else:
          $ 1962 "ElseIf broca≟217"
          if (broca == 217):
            $ 1963 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]
          end
        end
      end
      $ 1964 "origen≔PosFinal"
      global origen=PosFinal
      $ 1965 "Linea1_Buje1"
      $ 1966 "Xfin≔((((L1B1x)*(-1)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L1B1x)*(-1)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1))*(1)
      $ 1967 "Yfin≔((((L1B1y)*(-1)*Yp)-(Yd)+((L1B1x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L1B1y)*(-1)*Yp)-(Yd)+((L1B1x)*(-1)*m1))*(-1))*(1)
      $ 1968 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1969 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1970 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1971 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1972 "If broca≟1645"
      if (broca == 1645):
        $ 1973 "PosFinal≔p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]
      else:
        $ 1974 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 1975 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]
        else:
          $ 1976 "ElseIf broca≟217"
          if (broca == 217):
            $ 1977 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]
          end
        end
      end
      $ 1978 "Linea1_Buje1≔PosFinal"
      global Linea1_Buje1=PosFinal
      $ 1979 "Linea1_Buje27"
      $ 1980 "Xfin≔((((L1B2x)*(-1)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L1B2x)*(-1)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1))*(1)
      $ 1981 "Yfin≔((((L1B2y)*(-1)*Yp)-(Yd)+((L1B2x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L1B2y)*(-1)*Yp)-(Yd)+((L1B2x)*(-1)*m1))*(-1))*(1)
      $ 1982 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1983 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1984 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1985 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1986 "If broca≟1645"
      if (broca == 1645):
        $ 1987 "PosFinal≔p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]
      else:
        $ 1988 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 1989 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]
        else:
          $ 1990 "ElseIf broca≟217"
          if (broca == 217):
            $ 1991 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]
          end
        end
      end
      $ 1992 "Linea1_Buje27≔PosFinal"
      global Linea1_Buje27=PosFinal
      $ 1993 "Linea2_Buje1"
      $ 1994 "Xfin≔((((L2B1x)*(-1)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L2B1x)*(-1)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1))*(1)
      $ 1995 "Yfin≔((((L2B1y)*(-1)*Yp)-(Yd)+((L2B1x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L2B1y)*(-1)*Yp)-(Yd)+((L2B1x)*(-1)*m1))*(-1))*(1)
      $ 1996 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1997 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1998 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1999 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2000 "If broca≟1645"
      if (broca == 1645):
        $ 2001 "PosFinal≔p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]
      else:
        $ 2002 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2003 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]
        else:
          $ 2004 "ElseIf broca≟217"
          if (broca == 217):
            $ 2005 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]
          end
        end
      end
      $ 2006 "Linea2_Buje1≔PosFinal"
      global Linea2_Buje1=PosFinal
      $ 2007 "Linea2_Buje27"
      $ 2008 "Xfin≔((((L2B2x)*(-1)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L2B2x)*(-1)*Xp)-(Xd)-((L2B2y)*(1/m2)))*(-1))*(1)
      $ 2009 "Yfin≔((((L2B2y)*(-1)*Yp)-(Yd)+((L2B2x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L2B2y)*(-1)*Yp)-(Yd)+((L2B2x)*(-1)*m1))*(-1))*(1)
      $ 2010 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 2011 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 2012 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 2013 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 2014 "If broca≟1645"
      if (broca == 1645):
        $ 2015 "PosFinal≔p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]"
        global PosFinal=p[(Xfin-0.00208915)*1000,(Yfin-0.00208915)*1000,0.420,var_3,var_4,var_5]
      else:
        $ 2016 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 2017 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.420,var_3,var_4,var_5]
        else:
          $ 2018 "ElseIf broca≟217"
          if (broca == 217):
            $ 2019 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.420,var_3,var_4,var_5]
          end
        end
      end
      $ 2020 "Linea2_Buje27≔PosFinal"
      global Linea2_Buje27=PosFinal
      $ 2021 "Altura"
      $ 2022 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 2023 "altura≔(P2h[2]-P1h[2])*1000"
        global altura=(P2h[2]-P1h[2])*1000
        $ 2024 "alta≔P2h[2]"
        global alta=P2h[2]
      else:
        $ 2025 "Else" "noBreak"
        $ 2026 "altura≔(P1h[2]-P2h[2])*1000"
        global altura=(P1h[2]-P2h[2])*1000
        $ 2027 "alta≔P1h[2]"
        global alta=P1h[2]
      end
      $ 2028 "Direction: Base Z+"
      global move_thread_flag_2028=0
      thread move_thread_2028():
        enter_critical
        move_thread_flag_2028 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.1)
        movel(towardsPos, a=1.2, v=0.25)
        move_thread_flag_2028 = 2
        exit_critical
      end
      move_thread_flag_2028 = 0
      move_thread_han_2028 = run move_thread_2028()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_2028 > 1):
          join move_thread_han_2028
          $ 2029 "Until (distance)"
          break
        end
        sync()
      end
      $ 2030 "MoveJ"
      $ 2031 "Zona_izq1" "breakAfter"
      movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
    else:
      $ 2032 "ElseIf Lado_Correr≟2"
      if (modbus_get_signal_status("Lado_Correr") == 2):
      else:
        $ 2034 "ElseIf Lado_Correr≟3"
        if (modbus_get_signal_status("Lado_Correr") == 3):
        else:
          $ 2036 "Else" "noBreak"
          $ 2037 "Lado≔ False "
          global Lado=  False  
          $ 2038 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
  while (True):
    $ 1 "Robot Program"
    $ 9 "Set salida0=Encender"
    set_standard_digital_out(0, True)
    $ 10 "broca≔1645"
    global broca=1645
    $ 11 "textmsg('----------DAS-----------')"
    textmsg("----------DAS-----------")
    $ 12 "Set mensaje_mw10=15"
    modbus_set_output_register("mensaje_mw10", 15)
    $ 13 "Wait Continuar_M30=HI"
    while (modbus_get_signal_status("Continuar_M30") == False):
      sync()
    end
    $ 14 "Wait: 1.0"
    sleep(1.0)
    $ 15 "If Lado_Correr≟1"
    if (modbus_get_signal_status("Lado_Correr") == 1):
      $ 16 "Arranque"
      $ 17 "MoveJ"
      $ 18 "Off_derecha" "breakAfter"
      movej(get_inverse_kin(Off_derecha_p, qnear=Off_derecha_q), a=0.8726646259971648, v=0.5235987755982988)
      $ 19 "Off_izquierda" "breakAfter"
      movej(get_inverse_kin(Off_izquierda_p, qnear=Off_izquierda_q), a=0.8726646259971648, v=0.5235987755982988)
      $ 20 "Set postrnas_m187=Encender"
      modbus_set_output_signal("postrnas_m187", True)
      $ 21 "Wait: 1.0"
      sleep(1.0)
      $ 22 "Set Home_M20=Encender"
      modbus_set_output_signal("Home_M20", True)
      $ 23 "Wait: 1.0"
      sleep(1.0)
      $ 24 "Set postrnas_m187=Apagar"
      modbus_set_output_signal("postrnas_m187", False)
      $ 25 "Set Home_M20=Apagar"
      modbus_set_output_signal("Home_M20", False)
      $ 26 "Set mensaje_mw10=20"
      modbus_set_output_register("mensaje_mw10", 20)
      $ 27 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 28 "Wait: 1.0"
      sleep(1.0)
      $ 29 "Traslacion"
      $ 30 "Set mensaje_mw10=25"
      modbus_set_output_register("mensaje_mw10", 25)
      $ 31 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 32 "Wait: 1.0"
      sleep(1.0)
      $ 33 "MoveJ"
      $ 34 "Waypoint_8" "breakAfter"
      movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 35 "Waypoint_9" "breakAfter"
      movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 36 "Traslacion_izq" "breakAfter"
      movej(get_inverse_kin(Traslacion_izq_p, qnear=Traslacion_izq_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 37 "Set mensaje_mw10=30"
      modbus_set_output_register("mensaje_mw10", 30)
      $ 38 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 39 "Wait: 1.0"
      sleep(1.0)
      $ 40 "Set postrnas_m187=Encender"
      modbus_set_output_signal("postrnas_m187", True)
      $ 41 "Wait: 1.0"
      sleep(1.0)
      $ 42 "Set pos1_izq_m22=Encender"
      modbus_set_output_signal("pos1_izq_m22", True)
      $ 43 "Wait: 2.0"
      sleep(2.0)
      $ 44 "Set pos1_izq_m22=Apagar"
      modbus_set_output_signal("pos1_izq_m22", False)
      $ 45 "Set postrnas_m187=Apagar"
      modbus_set_output_signal("postrnas_m187", False)
      $ 46 "Wait: 5.0"
      sleep(5.0)
      $ 47 "Set mensaje_mw10=35"
      modbus_set_output_register("mensaje_mw10", 35)
      $ 48 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 49 "Wait: 1.0"
      sleep(1.0)
      $ 50 "Brocas"
      $ 51 "Set carrusel_home=Encender"
      modbus_set_output_signal("carrusel_home", True)
      $ 52 "Wait: 1.0"
      sleep(1.0)
      $ 53 "Set carrusel_home=Apagar"
      modbus_set_output_signal("carrusel_home", False)
      $ 54 "Set mensaje_mw10=40"
      modbus_set_output_register("mensaje_mw10", 40)
      $ 55 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 56 "Wait: 1.0"
      sleep(1.0)
      $ 57 "Set carrusel_home=Encender"
      modbus_set_output_signal("carrusel_home", True)
      $ 58 "Wait: 1.0"
      sleep(1.0)
      $ 59 "Set carrusel_home=Apagar"
      modbus_set_output_signal("carrusel_home", False)
      $ 60 "Set mensaje_mw10=45"
      modbus_set_output_register("mensaje_mw10", 45)
      $ 61 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 62 "Wait: 1.0"
      sleep(1.0)
      $ 63 "Call Poner_Broca"
      Poner_Broca()
      $ 64 "Offsets factor"
      $ 66 "L1B1x≔((0.09523476)/(0.09525))*(0.09523476)"
      global L1B1x=((0.09523476)/(0.09525))*(0.09523476)
      $ 67 "L1B1y≔((-0.01278382)/(-0.0127))*(-0.01278382)"
      global L1B1y=((-0.01278382)/(-0.0127))*(-0.01278382)
      $ 68 "L1B2x≔((0.75575414)/(0.75565))*(0.75575414)"
      global L1B2x=((0.75575414)/(0.75565))*(0.75575414)
      $ 69 "L1B2y≔((-0.01279398)/(-0.0127))*(-0.01279398)"
      global L1B2y=((-0.01279398)/(-0.0127))*(-0.01279398)
      $ 70 "L2B1x≔((0.09675299)/(0.09525))*(0.09675299)"
      global L2B1x=((0.09675299)/(0.09525))*(0.09675299)
      $ 71 "L2B1y≔((0.3937)/(0.3937))*(0.3937)"
      global L2B1y=((0.3937)/(0.3937))*(0.3937)
      $ 72 "L2B2x≔((0.757306777)/(0.75565))*(0.757306777)"
      global L2B2x=((0.757306777)/(0.75565))*(0.757306777)
      $ 73 "L2B2y≔((0.393684081)/(0.3937))*(0.393684081)"
      global L2B2y=((0.393684081)/(0.3937))*(0.393684081)
      $ 74 "Calibracion"
      $ 75 "Set mensaje_mw10=50"
      modbus_set_output_register("mensaje_mw10", 50)
      $ 76 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 77 "Wait: 1.0"
      sleep(1.0)
      $ 78 "MoveJ"
      $ 79 "Posicion_Cero" "breakAfter"
      movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 80 "Zona_izq1" "breakAfter"
      movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 81 "broca≔1645"
      global broca=1645
      $ 82 "Set mensaje_mw10=125"
      modbus_set_output_register("mensaje_mw10", 125)
      $ 83 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 84 "Wait: 1.0"
      sleep(1.0)
      $ 85 "Set mensaje_mw10=130"
      modbus_set_output_register("mensaje_mw10", 130)
      $ 86 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 87 "Wait: 1.0"
      sleep(1.0)
      $ 88 "Call Calibracion"
      Calibracion()
      $ 89 "GoNoGo"
      $ 90 "Set mensaje_mw10=55"
      modbus_set_output_register("mensaje_mw10", 55)
      $ 91 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 92 "Wait: 1.0"
      sleep(1.0)
      $ 93 "Set mensaje_mw10=60"
      modbus_set_output_register("mensaje_mw10", 60)
      $ 94 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 95 "Wait: 1.0"
      sleep(1.0)
      $ 96 "Linea1_Buje1"
      $ 97 "Xfin≔((((L1B1x)*(-1)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L1B1x)*(-1)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1))*(1)
      $ 98 "Yfin≔((((L1B1y)*(-1)*Yp)-(Yd)+((L1B1x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L1B1y)*(-1)*Yp)-(Yd)+((L1B1x)*(-1)*m1))*(-1))*(1)
      $ 99 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 100 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 101 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 102 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 103 "If broca≟1645"
      if (broca == 1645):
        $ 104 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 105 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 106 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 107 "ElseIf broca≟217"
          if (broca == 217):
            $ 108 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 109 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 110 "MoveJ"
      $ 111 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 112 "Wait: 1.0"
      sleep(1.0)
      $ 113 "Alturas"
      $ 114 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 115 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 116 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 117 "MoveL"
        $ 118 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 119 "Else" "noBreak"
        $ 120 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 121 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 122 "MoveL"
        $ 123 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 124 "MoveL"
      $ 125 "Freemove"
      $ 126 "Wait: 2.0"
      sleep(2.0)
      $ 127 "freedrive_mode()"
      freedrive_mode()
      $ 128 "Wait: 2.5"
      sleep(2.5)
      $ 129 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 130 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 131 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 132 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 133 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 134 "Direction: Base Z+"
      global move_thread_flag_134=0
      thread move_thread_134():
        enter_critical
        move_thread_flag_134 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_134 = 2
        exit_critical
      end
      move_thread_flag_134 = 0
      move_thread_han_134 = run move_thread_134()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_134 > 1):
          join move_thread_han_134
          $ 135 "Until (distance)"
          break
        end
        sync()
      end
      $ 136 "L1B1≔var_13"
      global L1B1=var_13
      $ 137 "Linea1_Buje2"
      $ 138 "Xfin≔((((L1B2x)*(-1)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L1B2x)*(-1)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1))*(1)
      $ 139 "Yfin≔((((L1B2y)*(-1)*Yp)-(Yd)+((L1B2x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L1B2y)*(-1)*Yp)-(Yd)+((L1B2x)*(-1)*m1))*(-1))*(1)
      $ 140 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 141 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 142 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 143 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 144 "If broca≟1645"
      if (broca == 1645):
        $ 145 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 146 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 147 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 148 "ElseIf broca≟217"
          if (broca == 217):
            $ 149 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 150 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 151 "MoveJ"
      $ 152 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 153 "Wait: 1.0"
      sleep(1.0)
      $ 154 "Alturas"
      $ 155 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 156 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 157 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 158 "MoveL"
        $ 159 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 160 "Else" "noBreak"
        $ 161 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 162 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 163 "MoveL"
        $ 164 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 165 "MoveL"
      $ 166 "Freemove"
      $ 167 "Wait: 2.0"
      sleep(2.0)
      $ 168 "freedrive_mode()"
      freedrive_mode()
      $ 169 "Wait: 2.5"
      sleep(2.5)
      $ 170 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 171 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 172 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 173 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 174 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 175 "Direction: Base Z+"
      global move_thread_flag_175=0
      thread move_thread_175():
        enter_critical
        move_thread_flag_175 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_175 = 2
        exit_critical
      end
      move_thread_flag_175 = 0
      move_thread_han_175 = run move_thread_175()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_175 > 1):
          join move_thread_han_175
          $ 176 "Until (distance)"
          break
        end
        sync()
      end
      $ 177 "L1B2≔var_13"
      global L1B2=var_13
      $ 178 "Linea2_Buje2"
      $ 179 "Xfin≔((((L2B2x)*(-1)*Xp)-(Xd)-(L2B2y*(1/m2)))*(-1))*(1)"
      global Xfin=((((L2B2x)*(-1)*Xp)-(Xd)-(L2B2y*(1/m2)))*(-1))*(1)
      $ 180 "Yfin≔((((L2B2y)*(-1)*Yp)-(Yd)+((L2B2x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L2B2y)*(-1)*Yp)-(Yd)+((L2B2x)*(-1)*m1))*(-1))*(1)
      $ 181 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 182 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 183 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 184 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 185 "If broca≟1645"
      if (broca == 1645):
        $ 186 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 187 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 188 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 189 "ElseIf broca≟217"
          if (broca == 217):
            $ 190 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 191 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 192 "MoveJ"
      $ 193 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 194 "Wait: 1.0"
      sleep(1.0)
      $ 195 "Alturas"
      $ 196 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 197 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 198 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 199 "MoveL"
        $ 200 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 201 "Else" "noBreak"
        $ 202 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 203 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 204 "MoveL"
        $ 205 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 206 "MoveL"
      $ 207 "Freemove"
      $ 208 "Wait: 2.0"
      sleep(2.0)
      $ 209 "freedrive_mode()"
      freedrive_mode()
      $ 210 "Wait: 2.5"
      sleep(2.5)
      $ 211 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 212 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 213 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 214 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 215 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 216 "Direction: Base Z+"
      global move_thread_flag_216=0
      thread move_thread_216():
        enter_critical
        move_thread_flag_216 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_216 = 2
        exit_critical
      end
      move_thread_flag_216 = 0
      move_thread_han_216 = run move_thread_216()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_216 > 1):
          join move_thread_han_216
          $ 217 "Until (distance)"
          break
        end
        sync()
      end
      $ 218 "L2B2≔var_13"
      global L2B2=var_13
      $ 219 "Linea2_Buje1"
      $ 220 "Xfin≔((((L2B1x)*(-1)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L2B1x)*(-1)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1))*(1)
      $ 221 "Yfin≔((((L2B1y)*(-1)*Yp)-(Yd)+((L2B1x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L2B1y)*(-1)*Yp)-(Yd)+((L2B1x)*(-1)*m1))*(-1))*(1)
      $ 222 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 223 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 224 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 225 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 226 "If broca≟1645"
      if (broca == 1645):
        $ 227 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 228 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 229 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 230 "ElseIf broca≟217"
          if (broca == 217):
            $ 231 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 232 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 233 "MoveJ"
      $ 234 "Paso2_izq1" "breakAfter"
      movej(get_inverse_kin(Paso2_izq1_p, qnear=Paso2_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 235 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 236 "Wait: 1.0"
      sleep(1.0)
      $ 237 "Alturas"
      $ 238 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 239 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 240 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 241 "MoveL"
        $ 242 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 243 "Else" "noBreak"
        $ 244 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 245 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 246 "MoveL"
        $ 247 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 248 "MoveL"
      $ 249 "Freemove"
      $ 250 "Wait: 2.0"
      sleep(2.0)
      $ 251 "freedrive_mode()"
      freedrive_mode()
      $ 252 "Wait: 2.5"
      sleep(2.5)
      $ 253 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 254 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 255 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 256 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 257 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 258 "Direction: Base Z+"
      global move_thread_flag_258=0
      thread move_thread_258():
        enter_critical
        move_thread_flag_258 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_258 = 2
        exit_critical
      end
      move_thread_flag_258 = 0
      move_thread_han_258 = run move_thread_258()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_258 > 1):
          join move_thread_han_258
          $ 259 "Until (distance)"
          break
        end
        sync()
      end
      $ 260 "MoveJ"
      $ 261 "Zona_izq1" "breakAfter"
      movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 262 "L2B1≔var_13"
      global L2B1=var_13
      $ 275 "Colocar broca"
      $ 276 "Call Quitar_Broca_Chida"
      Quitar_Broca_Chida()
      $ 277 "Call Poner_Broca"
      Poner_Broca()
      $ 278 "Barrenado1"
      $ 279 "Set mensaje_mw10=65"
      modbus_set_output_register("mensaje_mw10", 65)
      $ 280 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 281 "Wait: 1.0"
      sleep(1.0)
      $ 282 "Set mensaje_mw10=150"
      modbus_set_output_register("mensaje_mw10", 150)
      $ 283 "Wait: 1.0"
      sleep(1.0)
      $ 284 "Linea 1 a 1645"
      $ 285 "broca≔1645"
      global broca=1645
      $ 286 "Buje_inicial"
      $ 287 "Buje_Inicial≔L1B2"
      global Buje_Inicial=L1B2
      $ 288 "Buje_final"
      $ 289 "Buje_Final≔L1B1"
      global Buje_Final=L1B1
      $ 290 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 291 "barrenoActual≔1"
      global barrenoActual=1
      $ 292 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 293 "MoveL"
        $ 294 "bajada_broca≔p[0,0,0.006,0,0,0]"
        global bajada_broca=p[0,0,0.006,0,0,0]
        $ 295 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 296 "Alturas"
        $ 297 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 298 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 299 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 300 "Wait: 1.0"
          sleep(1.0)
          $ 301 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 302 "Wait: 1.0"
          sleep(1.0)
        end
        $ 303 "MoveJ"
        $ 304 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 305 "Wait: 2.0"
        sleep(2.0)
        $ 306 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 307 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 308 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 309 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 310 "MoveL"
          $ 311 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 312 "Else" "noBreak"
          $ 313 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 314 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 315 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 316 "MoveL"
          $ 317 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 318 "Freemove"
        $ 319 "Wait: 2.0"
        sleep(2.0)
        $ 320 "freedrive_mode()"
        freedrive_mode()
        $ 321 "Wait: 2.5"
        sleep(2.5)
        $ 322 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 323 "Wait: 0.3"
        sleep(0.3)
        $ 324 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 325 "Wait: 1.0"
        sleep(1.0)
        $ 326 "Wait: 0.3"
        sleep(0.3)
        $ 327 "Wait: 0.3"
        sleep(0.3)
        $ 328 "Wait: 0.3"
        sleep(0.3)
        $ 329 "Loop 3 times"
        Loop_4 = 0
        while (Loop_4 < 3):
          $ 330 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 331 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 332 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 333 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 334 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 335 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 336 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 337 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 338 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 339 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 340 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 341 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
          Loop_4 = Loop_4 + 1
        end
        $ 342 "Direction: Base Z+"
        global move_thread_flag_342=0
        thread move_thread_342():
          enter_critical
          move_thread_flag_342 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_342 = 2
          exit_critical
        end
        move_thread_flag_342 = 0
        move_thread_han_342 = run move_thread_342()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_342 > 1):
            join move_thread_han_342
            $ 343 "Until (distance)"
            break
          end
          sync()
        end
        $ 344 "MoveJ"
        $ 345 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 346 "Wait: 0.3"
        sleep(0.3)
        $ 347 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 348 "Wait: 0.3"
        sleep(0.3)
        $ 349 "If barrenoActual≟13 or barrenoActual≟27"
        if (barrenoActual == 13  or  barrenoActual == 27):
          $ 350 "Direction: Base Z+"
          global move_thread_flag_350=0
          thread move_thread_350():
            enter_critical
            move_thread_flag_350 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=0.04, v=0.03)
            move_thread_flag_350 = 2
            exit_critical
          end
          move_thread_flag_350 = 0
          move_thread_han_350 = run move_thread_350()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_350 > 1):
              join move_thread_han_350
              $ 351 "Until (distance)"
              break
            end
            sync()
          end
          $ 352 "MoveJ"
          $ 353 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 354 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 355 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 356 "Call Poner_Broca"
          Poner_Broca()
          $ 357 "MoveJ"
          $ 358 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 359 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        end
        $ 360 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 361 "Linea 2 a 1645"
      $ 362 "broca≔1645"
      global broca=1645
      $ 363 "Buje_inicial"
      $ 364 "Buje_Inicial≔L2B2"
      global Buje_Inicial=L2B2
      $ 365 "Buje_final"
      $ 366 "Buje_Final≔L2B1"
      global Buje_Final=L2B1
      $ 367 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 368 "barrenoActual≔1"
      global barrenoActual=1
      $ 369 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 370 "MoveL"
        $ 371 "bajada_broca≔p[0,0,0.006,0,0,0]"
        global bajada_broca=p[0,0,0.006,0,0,0]
        $ 372 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 373 "Alturas"
        $ 374 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 375 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 376 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 377 "Wait: 1.0"
          sleep(1.0)
          $ 378 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 379 "Wait: 1.0"
          sleep(1.0)
        end
        $ 380 "MoveJ"
        $ 381 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 382 "Wait: 2.0"
        sleep(2.0)
        $ 383 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 384 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 385 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 386 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 387 "MoveL"
          $ 388 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 389 "Else" "noBreak"
          $ 390 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 391 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 392 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 393 "MoveL"
          $ 394 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 395 "Freemove"
        $ 396 "Wait: 2.0"
        sleep(2.0)
        $ 397 "freedrive_mode()"
        freedrive_mode()
        $ 398 "Wait: 2.5"
        sleep(2.5)
        $ 399 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 400 "Wait: 0.3"
        sleep(0.3)
        $ 401 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 402 "Wait: 1.0"
        sleep(1.0)
        $ 403 "Wait: 0.3"
        sleep(0.3)
        $ 404 "Wait: 0.3"
        sleep(0.3)
        $ 405 "Wait: 0.3"
        sleep(0.3)
        $ 406 "Loop 3 times"
        Loop_12 = 0
        while (Loop_12 < 3):
          $ 407 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 408 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 409 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 410 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 411 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 412 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 413 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 414 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 415 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 416 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 417 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 418 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
          Loop_12 = Loop_12 + 1
        end
        $ 419 "Direction: Base Z+"
        global move_thread_flag_419=0
        thread move_thread_419():
          enter_critical
          move_thread_flag_419 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_419 = 2
          exit_critical
        end
        move_thread_flag_419 = 0
        move_thread_han_419 = run move_thread_419()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_419 > 1):
            join move_thread_han_419
            $ 420 "Until (distance)"
            break
          end
          sync()
        end
        $ 421 "MoveJ"
        $ 422 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 423 "Wait: 0.3"
        sleep(0.3)
        $ 424 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 425 "Wait: 0.3"
        sleep(0.3)
        $ 426 "If barrenoActual≟13"
        if (barrenoActual == 13):
          $ 427 "Direction: Base Z+"
          global move_thread_flag_427=0
          thread move_thread_427():
            enter_critical
            move_thread_flag_427 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_427 = 2
            exit_critical
          end
          move_thread_flag_427 = 0
          move_thread_han_427 = run move_thread_427()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_427 > 1):
              join move_thread_han_427
              $ 428 "Until (distance)"
              break
            end
            sync()
          end
          $ 429 "MoveJ"
          $ 430 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 431 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 432 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 433 "Call Poner_Broca"
          Poner_Broca()
          $ 434 "MoveJ"
          $ 435 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 436 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 437 "ElseIf barrenoActual≟27"
          if (barrenoActual == 27):
            $ 438 "Direction: Base Z+"
            global move_thread_flag_438=0
            thread move_thread_438():
              enter_critical
              move_thread_flag_438 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_438 = 2
              exit_critical
            end
            move_thread_flag_438 = 0
            move_thread_han_438 = run move_thread_438()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_438 > 1):
                join move_thread_han_438
                $ 439 "Until (distance)"
                break
              end
              sync()
            end
            $ 440 "MoveJ"
            $ 441 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 442 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 443 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 444 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 445 "Wait: 1.0"
            sleep(1.0)
            $ 446 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 447 "Set mensaje_mw10=70"
            modbus_set_output_register("mensaje_mw10", 70)
            $ 448 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 449 "Wait: 1.0"
            sleep(1.0)
            $ 450 "Set mensaje_mw10=120"
            modbus_set_output_register("mensaje_mw10", 120)
            $ 451 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 452 "Wait: 1.0"
            sleep(1.0)
            $ 453 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 454 "Wait: 1.0"
            sleep(1.0)
            $ 455 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 456 "Set mensaje_mw10=75"
            modbus_set_output_register("mensaje_mw10", 75)
            $ 457 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 458 "Wait: 1.0"
            sleep(1.0)
            $ 459 "Call Poner_Broca"
            Poner_Broca()
            $ 460 "broca≔1935"
            global broca=1935
            $ 461 "MoveJ"
            $ 462 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 463 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 464 "Set mensaje_mw10=80"
            modbus_set_output_register("mensaje_mw10", 80)
            $ 465 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 466 "Wait: 1.0"
            sleep(1.0)
            $ 467 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 468 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 469 "Wait: 1.0"
            sleep(1.0)
          end
        end
        $ 470 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 471 "Linea 1 a 1935"
      $ 472 "broca≔1935"
      global broca=1935
      $ 473 "Buje_inicial"
      $ 474 "Buje_Inicial≔L1B2"
      global Buje_Inicial=L1B2
      $ 475 "Buje_final"
      $ 476 "Buje_Final≔L1B1"
      global Buje_Final=L1B1
      $ 477 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 478 "barrenoActual≔1"
      global barrenoActual=1
      $ 479 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 480 "MoveL"
        $ 481 "bajada_broca≔p[0,0,0.009,0,0,0]"
        global bajada_broca=p[0,0,0.009,0,0,0]
        $ 482 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 483 "Alturas"
        $ 484 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 485 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 486 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 487 "Wait: 1.0"
          sleep(1.0)
          $ 488 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 489 "Wait: 1.0"
          sleep(1.0)
        end
        $ 490 "MoveJ"
        $ 491 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 492 "Wait: 2.0"
        sleep(2.0)
        $ 493 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 494 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 495 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 496 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 497 "MoveL"
          $ 498 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 499 "Else" "noBreak"
          $ 500 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 501 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 502 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 503 "MoveL"
          $ 504 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 505 "Freemove"
        $ 506 "Wait: 2.0"
        sleep(2.0)
        $ 507 "freedrive_mode()"
        freedrive_mode()
        $ 508 "Wait: 2.5"
        sleep(2.5)
        $ 509 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 510 "Wait: 0.3"
        sleep(0.3)
        $ 511 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 512 "Wait: 1.0"
        sleep(1.0)
        $ 513 "Wait: 0.3"
        sleep(0.3)
        $ 514 "Wait: 0.3"
        sleep(0.3)
        $ 515 "Wait: 0.3"
        sleep(0.3)
        $ 516 "Loop 2 times"
        Loop_15 = 0
        while (Loop_15 < 2):
          $ 517 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 518 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 519 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 520 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 521 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 522 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 523 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 524 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 525 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 526 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 527 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 528 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
          Loop_15 = Loop_15 + 1
        end
        $ 529 "Direction: Base Z+"
        global move_thread_flag_529=0
        thread move_thread_529():
          enter_critical
          move_thread_flag_529 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_529 = 2
          exit_critical
        end
        move_thread_flag_529 = 0
        move_thread_han_529 = run move_thread_529()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_529 > 1):
            join move_thread_han_529
            $ 530 "Until (distance)"
            break
          end
          sync()
        end
        $ 531 "MoveJ"
        $ 532 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 533 "Wait: 0.3"
        sleep(0.3)
        $ 534 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 535 "Wait: 0.3"
        sleep(0.3)
        $ 536 "If barrenoActual≟13 or barrenoActual≟27"
        if (barrenoActual == 13  or  barrenoActual == 27):
          $ 537 "Direction: Base Z+"
          global move_thread_flag_537=0
          thread move_thread_537():
            enter_critical
            move_thread_flag_537 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_537 = 2
            exit_critical
          end
          move_thread_flag_537 = 0
          move_thread_han_537 = run move_thread_537()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_537 > 1):
              join move_thread_han_537
              $ 538 "Until (distance)"
              break
            end
            sync()
          end
          $ 539 "MoveJ"
          $ 540 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 541 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 542 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 543 "Call Poner_Broca"
          Poner_Broca()
          $ 544 "MoveJ"
          $ 545 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 546 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        end
        $ 547 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 548 "Linea 2 a 1935"
      $ 549 "broca≔1935"
      global broca=1935
      $ 550 "Buje_inicial"
      $ 551 "Buje_Inicial≔L2B2"
      global Buje_Inicial=L2B2
      $ 552 "Buje_final"
      $ 553 "Buje_Final≔L2B1"
      global Buje_Final=L2B1
      $ 554 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 555 "barrenoActual≔1"
      global barrenoActual=1
      $ 556 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 557 "MoveL"
        $ 558 "bajada_broca≔p[0,0,0.009,0,0,0]"
        global bajada_broca=p[0,0,0.009,0,0,0]
        $ 559 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 560 "Alturas"
        $ 561 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 562 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 563 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 564 "Wait: 1.0"
          sleep(1.0)
          $ 565 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 566 "Wait: 1.0"
          sleep(1.0)
        end
        $ 567 "MoveJ"
        $ 568 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 569 "Wait: 2.0"
        sleep(2.0)
        $ 570 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 571 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 572 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 573 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 574 "MoveL"
          $ 575 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 576 "Else" "noBreak"
          $ 577 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 578 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 579 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 580 "MoveL"
          $ 581 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 582 "Freemove"
        $ 583 "Wait: 2.0"
        sleep(2.0)
        $ 584 "freedrive_mode()"
        freedrive_mode()
        $ 585 "Wait: 2.5"
        sleep(2.5)
        $ 586 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 587 "Wait: 0.3"
        sleep(0.3)
        $ 588 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 589 "Wait: 1.0"
        sleep(1.0)
        $ 590 "Wait: 0.3"
        sleep(0.3)
        $ 591 "Wait: 0.3"
        sleep(0.3)
        $ 592 "Wait: 0.3"
        sleep(0.3)
        $ 593 "Loop 2 times"
        Loop_17 = 0
        while (Loop_17 < 2):
          $ 594 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 595 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 596 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 597 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 598 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 599 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 600 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 601 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 602 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 603 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 604 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 605 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
          Loop_17 = Loop_17 + 1
        end
        $ 606 "Direction: Base Z+"
        global move_thread_flag_606=0
        thread move_thread_606():
          enter_critical
          move_thread_flag_606 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_606 = 2
          exit_critical
        end
        move_thread_flag_606 = 0
        move_thread_han_606 = run move_thread_606()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_606 > 1):
            join move_thread_han_606
            $ 607 "Until (distance)"
            break
          end
          sync()
        end
        $ 608 "MoveJ"
        $ 609 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 610 "Wait: 0.3"
        sleep(0.3)
        $ 611 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 612 "Wait: 0.3"
        sleep(0.3)
        $ 613 "If barrenoActual≟13"
        if (barrenoActual == 13):
          $ 614 "Direction: Base Z+"
          global move_thread_flag_614=0
          thread move_thread_614():
            enter_critical
            move_thread_flag_614 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_614 = 2
            exit_critical
          end
          move_thread_flag_614 = 0
          move_thread_han_614 = run move_thread_614()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_614 > 1):
              join move_thread_han_614
              $ 615 "Until (distance)"
              break
            end
            sync()
          end
          $ 616 "MoveJ"
          $ 617 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 618 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 619 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 620 "Call Poner_Broca"
          Poner_Broca()
          $ 621 "MoveJ"
          $ 622 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 623 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 624 "ElseIf barrenoActual≟27"
          if (barrenoActual == 27):
            $ 625 "Direction: Base Z+"
            global move_thread_flag_625=0
            thread move_thread_625():
              enter_critical
              move_thread_flag_625 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_625 = 2
              exit_critical
            end
            move_thread_flag_625 = 0
            move_thread_han_625 = run move_thread_625()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_625 > 1):
                join move_thread_han_625
                $ 626 "Until (distance)"
                break
              end
              sync()
            end
            $ 627 "MoveJ"
            $ 628 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 629 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 630 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 631 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 632 "Wait: 1.0"
            sleep(1.0)
            $ 633 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 634 "Set mensaje_mw10=85"
            modbus_set_output_register("mensaje_mw10", 85)
            $ 635 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 636 "Wait: 1.0"
            sleep(1.0)
            $ 637 "Set mensaje_mw10=120"
            modbus_set_output_register("mensaje_mw10", 120)
            $ 638 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 639 "Wait: 1.0"
            sleep(1.0)
            $ 640 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 641 "Wait: 1.0"
            sleep(1.0)
            $ 642 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 643 "Set mensaje_mw10=90"
            modbus_set_output_register("mensaje_mw10", 90)
            $ 644 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 645 "Wait: 1.0"
            sleep(1.0)
            $ 646 "Call Poner_Broca"
            Poner_Broca()
            $ 647 "broca≔217"
            global broca=217
            $ 648 "MoveJ"
            $ 649 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 650 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 651 "Set mensaje_mw10=95"
            modbus_set_output_register("mensaje_mw10", 95)
            $ 652 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 653 "Wait: 1.0"
            sleep(1.0)
            $ 654 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 655 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 656 "Wait: 1.0"
            sleep(1.0)
          end
        end
        $ 657 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 658 "Linea 1 a 217"
      $ 659 "broca≔217"
      global broca=217
      $ 660 "Buje_inicial"
      $ 661 "Buje_Inicial≔L1B2"
      global Buje_Inicial=L1B2
      $ 662 "Buje_final"
      $ 663 "Buje_Final≔L1B1"
      global Buje_Final=L1B1
      $ 664 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 665 "barrenoActual≔1"
      global barrenoActual=1
      $ 666 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 667 "MoveL"
        $ 668 "bajada_broca≔p[0,0,0.018,0,0,0]"
        global bajada_broca=p[0,0,0.018,0,0,0]
        $ 669 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 670 "Alturas"
        $ 671 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 672 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 673 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 674 "Wait: 1.0"
          sleep(1.0)
          $ 675 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 676 "Wait: 1.0"
          sleep(1.0)
        end
        $ 677 "MoveJ"
        $ 678 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 679 "Wait: 2.0"
        sleep(2.0)
        $ 680 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 681 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 682 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 683 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 684 "MoveL"
          $ 685 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 686 "Else" "noBreak"
          $ 687 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 688 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 689 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 690 "MoveL"
          $ 691 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 692 "Freemove"
        $ 693 "Wait: 2.0"
        sleep(2.0)
        $ 694 "freedrive_mode()"
        freedrive_mode()
        $ 695 "Wait: 2.5"
        sleep(2.5)
        $ 696 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 697 "Wait: 0.3"
        sleep(0.3)
        $ 698 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 699 "Wait: 1.0"
        sleep(1.0)
        $ 700 "Wait: 0.3"
        sleep(0.3)
        $ 701 "Wait: 0.3"
        sleep(0.3)
        $ 702 "Wait: 0.3"
        sleep(0.3)
        $ 703 "Loop 1 times"
        Loop_19 = 0
        while (Loop_19 < 1):
          $ 704 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 705 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 706 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 707 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 708 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 709 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 710 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 711 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 712 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 713 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 714 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 715 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
          Loop_19 = Loop_19 + 1
        end
        $ 716 "Direction: Base Z+"
        global move_thread_flag_716=0
        thread move_thread_716():
          enter_critical
          move_thread_flag_716 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_716 = 2
          exit_critical
        end
        move_thread_flag_716 = 0
        move_thread_han_716 = run move_thread_716()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_716 > 1):
            join move_thread_han_716
            $ 717 "Until (distance)"
            break
          end
          sync()
        end
        $ 718 "MoveJ"
        $ 719 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 720 "Wait: 0.3"
        sleep(0.3)
        $ 721 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 722 "Wait: 0.3"
        sleep(0.3)
        $ 723 "If barrenoActual≟13 or barrenoActual≟27"
        if (barrenoActual == 13  or  barrenoActual == 27):
          $ 724 "Direction: Base Z+"
          global move_thread_flag_724=0
          thread move_thread_724():
            enter_critical
            move_thread_flag_724 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_724 = 2
            exit_critical
          end
          move_thread_flag_724 = 0
          move_thread_han_724 = run move_thread_724()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_724 > 1):
              join move_thread_han_724
              $ 725 "Until (distance)"
              break
            end
            sync()
          end
          $ 726 "MoveJ"
          $ 727 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 728 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 729 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 730 "Call Poner_Broca"
          Poner_Broca()
          $ 731 "MoveJ"
          $ 732 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 733 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        end
        $ 734 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 735 "Linea 2 a 217"
      $ 736 "broca≔217"
      global broca=217
      $ 737 "Buje_inicial"
      $ 738 "Buje_Inicial≔L2B2"
      global Buje_Inicial=L2B2
      $ 739 "Buje_final"
      $ 740 "Buje_Final≔L2B1"
      global Buje_Final=L2B1
      $ 741 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 742 "barrenoActual≔1"
      global barrenoActual=1
      $ 743 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 744 "MoveL"
        $ 745 "bajada_broca≔p[0,0,0.018,0,0,0]"
        global bajada_broca=p[0,0,0.018,0,0,0]
        $ 746 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 747 "Alturas"
        $ 748 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 749 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 750 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 751 "Wait: 1.0"
          sleep(1.0)
          $ 752 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 753 "Wait: 1.0"
          sleep(1.0)
        end
        $ 754 "MoveJ"
        $ 755 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 756 "Wait: 2.0"
        sleep(2.0)
        $ 757 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 758 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 759 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 760 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 761 "MoveL"
          $ 762 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 763 "Else" "noBreak"
          $ 764 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 765 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 766 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 767 "MoveL"
          $ 768 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 769 "Freemove"
        $ 770 "Wait: 2.0"
        sleep(2.0)
        $ 771 "freedrive_mode()"
        freedrive_mode()
        $ 772 "Wait: 2.5"
        sleep(2.5)
        $ 773 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 774 "Wait: 0.3"
        sleep(0.3)
        $ 775 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 776 "Wait: 1.0"
        sleep(1.0)
        $ 777 "Wait: 0.3"
        sleep(0.3)
        $ 778 "Wait: 0.3"
        sleep(0.3)
        $ 779 "Wait: 0.3"
        sleep(0.3)
        $ 780 "Loop 1 times"
        Loop_21 = 0
        while (Loop_21 < 1):
          $ 781 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 782 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 783 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 784 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 785 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 786 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 787 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 788 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 789 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 790 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 791 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 792 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
          Loop_21 = Loop_21 + 1
        end
        $ 793 "Direction: Base Z+"
        global move_thread_flag_793=0
        thread move_thread_793():
          enter_critical
          move_thread_flag_793 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_793 = 2
          exit_critical
        end
        move_thread_flag_793 = 0
        move_thread_han_793 = run move_thread_793()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_793 > 1):
            join move_thread_han_793
            $ 794 "Until (distance)"
            break
          end
          sync()
        end
        $ 795 "MoveJ"
        $ 796 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 797 "Wait: 0.3"
        sleep(0.3)
        $ 798 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 799 "Wait: 0.3"
        sleep(0.3)
        $ 800 "If barrenoActual≟13"
        if (barrenoActual == 13):
          $ 801 "Direction: Base Z+"
          global move_thread_flag_801=0
          thread move_thread_801():
            enter_critical
            move_thread_flag_801 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_801 = 2
            exit_critical
          end
          move_thread_flag_801 = 0
          move_thread_han_801 = run move_thread_801()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_801 > 1):
              join move_thread_han_801
              $ 802 "Until (distance)"
              break
            end
            sync()
          end
          $ 803 "MoveJ"
          $ 804 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 805 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 806 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 807 "Call Poner_Broca"
          Poner_Broca()
          $ 808 "MoveJ"
          $ 809 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 810 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 811 "ElseIf barrenoActual≟27"
          if (barrenoActual == 27):
            $ 812 "Direction: Base Z+"
            global move_thread_flag_812=0
            thread move_thread_812():
              enter_critical
              move_thread_flag_812 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_812 = 2
              exit_critical
            end
            move_thread_flag_812 = 0
            move_thread_han_812 = run move_thread_812()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_812 > 1):
                join move_thread_han_812
                $ 813 "Until (distance)"
                break
              end
              sync()
            end
            $ 814 "MoveJ"
            $ 815 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 816 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 817 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 818 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 819 "Wait: 1.0"
            sleep(1.0)
            $ 820 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 821 "Set mensaje_mw10=120"
            modbus_set_output_register("mensaje_mw10", 120)
            $ 822 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 823 "Wait: 1.0"
            sleep(1.0)
            $ 824 "Set mensaje_mw10=100"
            modbus_set_output_register("mensaje_mw10", 100)
            $ 825 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 826 "Wait: 1.0"
            sleep(1.0)
            $ 827 "MoveJ"
            $ 828 "Traslacion_izq" "breakAfter"
            movej(get_inverse_kin(Traslacion_izq_p, qnear=Traslacion_izq_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 829 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 831 "Traslacion"
      $ 832 "MoveJ"
      $ 833 "Traslacion_izq" "breakAfter"
      movej(get_inverse_kin(Traslacion_izq_p, qnear=Traslacion_izq_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 834 "Set mensaje_mw10=105"
      modbus_set_output_register("mensaje_mw10", 105)
      $ 835 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 836 "Wait: 1.0"
      sleep(1.0)
      $ 837 "Set mensaje_mw10=145"
      modbus_set_output_register("mensaje_mw10", 145)
      $ 838 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 839 "Wait: 1.0"
      sleep(1.0)
      $ 840 "Set postrnas_m187=Encender"
      modbus_set_output_signal("postrnas_m187", True)
      $ 841 "Wait: 1.0"
      sleep(1.0)
      $ 842 "Set pos2_izq_m697=Encender"
      modbus_set_output_signal("pos2_izq_m697", True)
      $ 843 "Wait: 1.0"
      sleep(1.0)
      $ 844 "Set pos2_izq_m697=Apagar"
      modbus_set_output_signal("pos2_izq_m697", False)
      $ 845 "Set postrnas_m187=Apagar"
      modbus_set_output_signal("postrnas_m187", False)
      $ 846 "Wait: 5.0"
      sleep(5.0)
      $ 847 "Brocas"
      $ 848 "Set carrusel_home=Encender"
      modbus_set_output_signal("carrusel_home", True)
      $ 849 "Wait: 1.0"
      sleep(1.0)
      $ 850 "Set carrusel_home=Apagar"
      modbus_set_output_signal("carrusel_home", False)
      $ 851 "Set mensaje_mw10=40"
      modbus_set_output_register("mensaje_mw10", 40)
      $ 852 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 853 "Wait: 1.0"
      sleep(1.0)
      $ 854 "Set carrusel_home=Encender"
      modbus_set_output_signal("carrusel_home", True)
      $ 855 "Wait: 1.0"
      sleep(1.0)
      $ 856 "Set carrusel_home=Apagar"
      modbus_set_output_signal("carrusel_home", False)
      $ 857 "Set mensaje_mw10=45"
      modbus_set_output_register("mensaje_mw10", 45)
      $ 858 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 859 "Wait: 1.0"
      sleep(1.0)
      $ 860 "Call Poner_Broca"
      Poner_Broca()
      $ 861 "Offsets factor"
      $ 863 "L1B1x≔((0.09523476)/(0.09525))*(0.09523476)"
      global L1B1x=((0.09523476)/(0.09525))*(0.09523476)
      $ 864 "L1B1y≔((-0.01278382)/(-0.0127))*(-0.01278382)"
      global L1B1y=((-0.01278382)/(-0.0127))*(-0.01278382)
      $ 865 "L1B2x≔((0.75575414)/(0.75565))*(0.75575414)"
      global L1B2x=((0.75575414)/(0.75565))*(0.75575414)
      $ 866 "L1B2y≔((-0.01279398)/(-0.0127))*(-0.01279398)"
      global L1B2y=((-0.01279398)/(-0.0127))*(-0.01279398)
      $ 867 "L2B1x≔((0.09675299)/(0.09525))*(0.09675299)"
      global L2B1x=((0.09675299)/(0.09525))*(0.09675299)
      $ 868 "L2B1y≔((0.3937)/(0.3937))*(0.3937)"
      global L2B1y=((0.3937)/(0.3937))*(0.3937)
      $ 869 "L2B2x≔((0.757306777)/(0.75565))*(0.757306777)"
      global L2B2x=((0.757306777)/(0.75565))*(0.757306777)
      $ 870 "L2B2y≔((0.393684081)/(0.3937))*(0.393684081)"
      global L2B2y=((0.393684081)/(0.3937))*(0.393684081)
      $ 871 "Calibracion"
      $ 872 "Set mensaje_mw10=50"
      modbus_set_output_register("mensaje_mw10", 50)
      $ 873 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 874 "Wait: 1.0"
      sleep(1.0)
      $ 875 "MoveJ"
      $ 876 "Posicion_Cero" "breakAfter"
      movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 877 "Zona_izq1" "breakAfter"
      movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 878 "broca≔1645"
      global broca=1645
      $ 879 "Set mensaje_mw10=125"
      modbus_set_output_register("mensaje_mw10", 125)
      $ 880 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 881 "Wait: 1.0"
      sleep(1.0)
      $ 882 "Set mensaje_mw10=130"
      modbus_set_output_register("mensaje_mw10", 130)
      $ 883 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 884 "Wait: 1.0"
      sleep(1.0)
      $ 885 "Call Calibracion"
      Calibracion()
      $ 886 "GoNoGo"
      $ 887 "Set mensaje_mw10=55"
      modbus_set_output_register("mensaje_mw10", 55)
      $ 888 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 889 "Wait: 1.0"
      sleep(1.0)
      $ 890 "Set mensaje_mw10=60"
      modbus_set_output_register("mensaje_mw10", 60)
      $ 891 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 892 "Wait: 1.0"
      sleep(1.0)
      $ 893 "Linea1_Buje1"
      $ 894 "Xfin≔((((L1B1x)*(-1)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L1B1x)*(-1)*Xp)-(Xd)-((L1B1y)*(1/m2)))*(-1))*(1)
      $ 895 "Yfin≔((((L1B1y)*(-1)*Yp)-(Yd)+((L1B1x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L1B1y)*(-1)*Yp)-(Yd)+((L1B1x)*(-1)*m1))*(-1))*(1)
      $ 896 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 897 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 898 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 899 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 900 "If broca≟1645"
      if (broca == 1645):
        $ 901 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 902 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 903 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 904 "ElseIf broca≟217"
          if (broca == 217):
            $ 905 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 906 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 907 "MoveJ"
      $ 908 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 909 "Wait: 1.0"
      sleep(1.0)
      $ 910 "Alturas"
      $ 911 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 912 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 913 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 914 "MoveL"
        $ 915 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 916 "Else" "noBreak"
        $ 917 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 918 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 919 "MoveL"
        $ 920 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 921 "MoveL"
      $ 922 "Freemove"
      $ 923 "Wait: 2.0"
      sleep(2.0)
      $ 924 "freedrive_mode()"
      freedrive_mode()
      $ 925 "Wait: 2.5"
      sleep(2.5)
      $ 926 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 927 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 928 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 929 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 930 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 931 "Direction: Base Z+"
      global move_thread_flag_931=0
      thread move_thread_931():
        enter_critical
        move_thread_flag_931 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_931 = 2
        exit_critical
      end
      move_thread_flag_931 = 0
      move_thread_han_931 = run move_thread_931()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_931 > 1):
          join move_thread_han_931
          $ 932 "Until (distance)"
          break
        end
        sync()
      end
      $ 933 "L1B1≔var_13"
      global L1B1=var_13
      $ 934 "Linea1_Buje2"
      $ 935 "Xfin≔((((L1B2x)*(-1)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L1B2x)*(-1)*Xp)-(Xd)-((L1B2y)*(1/m2)))*(-1))*(1)
      $ 936 "Yfin≔((((L1B2y)*(-1)*Yp)-(Yd)+((L1B2x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L1B2y)*(-1)*Yp)-(Yd)+((L1B2x)*(-1)*m1))*(-1))*(1)
      $ 937 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 938 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 939 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 940 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 941 "If broca≟1645"
      if (broca == 1645):
        $ 942 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 943 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 944 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 945 "ElseIf broca≟217"
          if (broca == 217):
            $ 946 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 947 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 948 "MoveJ"
      $ 949 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 950 "Wait: 1.0"
      sleep(1.0)
      $ 951 "Alturas"
      $ 952 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 953 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 954 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 955 "MoveL"
        $ 956 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 957 "Else" "noBreak"
        $ 958 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 959 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 960 "MoveL"
        $ 961 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 962 "MoveL"
      $ 963 "Freemove"
      $ 964 "Wait: 2.0"
      sleep(2.0)
      $ 965 "freedrive_mode()"
      freedrive_mode()
      $ 966 "Wait: 2.5"
      sleep(2.5)
      $ 967 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 968 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 969 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 970 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 971 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 972 "Direction: Base Z+"
      global move_thread_flag_972=0
      thread move_thread_972():
        enter_critical
        move_thread_flag_972 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_972 = 2
        exit_critical
      end
      move_thread_flag_972 = 0
      move_thread_han_972 = run move_thread_972()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_972 > 1):
          join move_thread_han_972
          $ 973 "Until (distance)"
          break
        end
        sync()
      end
      $ 974 "L1B2≔var_13"
      global L1B2=var_13
      $ 975 "Linea2_Buje2"
      $ 976 "Xfin≔((((L2B2x)*(-1)*Xp)-(Xd)-(L2B2y*(1/m2)))*(-1))*(1)"
      global Xfin=((((L2B2x)*(-1)*Xp)-(Xd)-(L2B2y*(1/m2)))*(-1))*(1)
      $ 977 "Yfin≔((((L2B2y)*(-1)*Yp)-(Yd)+((L2B2x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L2B2y)*(-1)*Yp)-(Yd)+((L2B2x)*(-1)*m1))*(-1))*(1)
      $ 978 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 979 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 980 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 981 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 982 "If broca≟1645"
      if (broca == 1645):
        $ 983 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 984 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 985 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 986 "ElseIf broca≟217"
          if (broca == 217):
            $ 987 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 988 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 989 "MoveJ"
      $ 990 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 991 "Wait: 1.0"
      sleep(1.0)
      $ 992 "Alturas"
      $ 993 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 994 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 995 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 996 "MoveL"
        $ 997 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 998 "Else" "noBreak"
        $ 999 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 1000 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 1001 "MoveL"
        $ 1002 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 1003 "MoveL"
      $ 1004 "Freemove"
      $ 1005 "Wait: 2.0"
      sleep(2.0)
      $ 1006 "freedrive_mode()"
      freedrive_mode()
      $ 1007 "Wait: 2.5"
      sleep(2.5)
      $ 1008 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 1009 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 1010 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 1011 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 1012 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 1013 "Direction: Base Z+"
      global move_thread_flag_1013=0
      thread move_thread_1013():
        enter_critical
        move_thread_flag_1013 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_1013 = 2
        exit_critical
      end
      move_thread_flag_1013 = 0
      move_thread_han_1013 = run move_thread_1013()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1013 > 1):
          join move_thread_han_1013
          $ 1014 "Until (distance)"
          break
        end
        sync()
      end
      $ 1015 "L2B2≔var_13"
      global L2B2=var_13
      $ 1016 "Linea2_Buje1"
      $ 1017 "Xfin≔((((L2B1x)*(-1)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1))*(1)"
      global Xfin=((((L2B1x)*(-1)*Xp)-(Xd)-((L2B1y)*(1/m2)))*(-1))*(1)
      $ 1018 "Yfin≔((((L2B1y)*(-1)*Yp)-(Yd)+((L2B1x)*(-1)*m1))*(-1))*(1)"
      global Yfin=((((L2B1y)*(-1)*Yp)-(Yd)+((L2B1x)*(-1)*m1))*(-1))*(1)
      $ 1019 "rotaciones≔get_actual_tcp_pose()"
      global rotaciones= get_actual_tcp_pose ()
      $ 1020 "var_3≔rotaciones[3]"
      global var_3=rotaciones[3]
      $ 1021 "var_4≔rotaciones[4]"
      global var_4=rotaciones[4]
      $ 1022 "var_5≔rotaciones[5]"
      global var_5=rotaciones[5]
      $ 1023 "If broca≟1645"
      if (broca == 1645):
        $ 1024 "PosFinal≔p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]"
        global PosFinal=p[Xfin-0.00208915,Yfin-0.00208915,0.15,var_3,var_4,var_5]
      else:
        $ 1025 "ElseIf broca≟1935"
        if (broca == 1935):
          $ 1026 "PosFinal≔p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]"
          global PosFinal=p[Xfin-0.00245745,Yfin-0.00245745,0.15,var_3,var_4,var_5]
        else:
          $ 1027 "ElseIf broca≟217"
          if (broca == 217):
            $ 1028 "PosFinal≔p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]"
            global PosFinal=p[Xfin-0.0027559,Yfin-0.0027559,0.15,var_3,var_4,var_5]
          end
        end
      end
      $ 1029 "Buje_Final≔PosFinal"
      global Buje_Final=PosFinal
      $ 1030 "MoveJ"
      $ 1031 "Paso2_izq1" "breakAfter"
      movej(get_inverse_kin(Paso2_izq1_p, qnear=Paso2_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1032 "Buje_Final" "breakAfter"
      movej(Buje_Final, a=1.3962634015954636, v=1.0471975511965976)
      $ 1033 "Wait: 1.0"
      sleep(1.0)
      $ 1034 "Alturas"
      $ 1035 "If P1h[2]<P2h[2]"
      if (P1h[2]<P2h[2]):
        $ 1036 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 1037 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(altura/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 1038 "MoveL"
        $ 1039 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      else:
        $ 1040 "Else" "noBreak"
        $ 1041 "tcp_chido≔get_actual_tcp_pose()"
        global tcp_chido= get_actual_tcp_pose ()
        $ 1042 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
        global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
        $ 1043 "MoveL"
        $ 1044 "offset_bajada" "breakAfter"
        movel(offset_bajada, a=0.03, v=0.015)
      end
      $ 1045 "MoveL"
      $ 1046 "Freemove"
      $ 1047 "Wait: 2.0"
      sleep(2.0)
      $ 1048 "freedrive_mode()"
      freedrive_mode()
      $ 1049 "Wait: 2.5"
      sleep(2.5)
      $ 1050 "end_freedrive_mode()"
      end_freedrive_mode()
      $ 1051 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 1052 "var_13≔p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]"
      global var_13=p[var_13[0]*1000,var_13[1]*1000,420,420,420,420]
      $ 1053 "var_13≔get_actual_tcp_pose()"
      global var_13= get_actual_tcp_pose ()
      $ 1054 "var_13≔p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]"
      global var_13=p[var_13[0],var_13[1],0.1,var_13[3],var_13[4],var_13[5]]
      $ 1055 "Direction: Base Z+"
      global move_thread_flag_1055=0
      thread move_thread_1055():
        enter_critical
        move_thread_flag_1055 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.15)
        movel(towardsPos, a=0.03, v=0.015)
        move_thread_flag_1055 = 2
        exit_critical
      end
      move_thread_flag_1055 = 0
      move_thread_han_1055 = run move_thread_1055()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1055 > 1):
          join move_thread_han_1055
          $ 1056 "Until (distance)"
          break
        end
        sync()
      end
      $ 1057 "MoveJ"
      $ 1058 "Zona_izq1" "breakAfter"
      movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1059 "L2B1≔var_13"
      global L2B1=var_13
      $ 1072 "Colocar broca"
      $ 1073 "Call Quitar_Broca_Chida"
      Quitar_Broca_Chida()
      $ 1074 "Call Poner_Broca"
      Poner_Broca()
      $ 1075 "Barrenado1"
      $ 1076 "Set mensaje_mw10=65"
      modbus_set_output_register("mensaje_mw10", 65)
      $ 1077 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1078 "Wait: 1.0"
      sleep(1.0)
      $ 1079 "Set mensaje_mw10=150"
      modbus_set_output_register("mensaje_mw10", 150)
      $ 1080 "Wait: 1.0"
      sleep(1.0)
      $ 1081 "Linea 1 a 1645"
      $ 1082 "broca≔1645"
      global broca=1645
      $ 1083 "Buje_inicial"
      $ 1084 "Buje_Inicial≔L1B2"
      global Buje_Inicial=L1B2
      $ 1085 "Buje_final"
      $ 1086 "Buje_Final≔L1B1"
      global Buje_Final=L1B1
      $ 1087 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 1088 "barrenoActual≔1"
      global barrenoActual=1
      $ 1089 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 1090 "MoveL"
        $ 1091 "bajada_broca≔p[0,0,0.006,0,0,0]"
        global bajada_broca=p[0,0,0.006,0,0,0]
        $ 1092 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 1093 "Alturas"
        $ 1094 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 1095 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 1096 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1097 "Wait: 1.0"
          sleep(1.0)
          $ 1098 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1099 "Wait: 1.0"
          sleep(1.0)
        end
        $ 1100 "MoveJ"
        $ 1101 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1102 "Wait: 2.0"
        sleep(2.0)
        $ 1103 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 1104 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 1105 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1106 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1107 "MoveL"
          $ 1108 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 1109 "Else" "noBreak"
          $ 1110 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 1111 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1112 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1113 "MoveL"
          $ 1114 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 1115 "Freemove"
        $ 1116 "Wait: 2.0"
        sleep(2.0)
        $ 1117 "freedrive_mode()"
        freedrive_mode()
        $ 1118 "Wait: 2.5"
        sleep(2.5)
        $ 1119 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1120 "Wait: 0.3"
        sleep(0.3)
        $ 1121 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 1122 "Wait: 1.0"
        sleep(1.0)
        $ 1123 "Wait: 0.3"
        sleep(0.3)
        $ 1124 "Wait: 0.3"
        sleep(0.3)
        $ 1125 "Wait: 0.3"
        sleep(0.3)
        $ 1126 "Loop 3 times"
        Loop_68 = 0
        while (Loop_68 < 3):
          $ 1127 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 1128 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 1129 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 1130 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 1131 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 1132 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 1133 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 1134 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 1135 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 1136 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 1137 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 1138 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
          Loop_68 = Loop_68 + 1
        end
        $ 1139 "Direction: Base Z+"
        global move_thread_flag_1139=0
        thread move_thread_1139():
          enter_critical
          move_thread_flag_1139 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_1139 = 2
          exit_critical
        end
        move_thread_flag_1139 = 0
        move_thread_han_1139 = run move_thread_1139()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1139 > 1):
            join move_thread_han_1139
            $ 1140 "Until (distance)"
            break
          end
          sync()
        end
        $ 1141 "MoveJ"
        $ 1142 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1143 "Wait: 0.3"
        sleep(0.3)
        $ 1144 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1145 "Wait: 0.3"
        sleep(0.3)
        $ 1146 "If barrenoActual≟13 or barrenoActual≟27"
        if (barrenoActual == 13  or  barrenoActual == 27):
          $ 1147 "Direction: Base Z+"
          global move_thread_flag_1147=0
          thread move_thread_1147():
            enter_critical
            move_thread_flag_1147 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=0.04, v=0.03)
            move_thread_flag_1147 = 2
            exit_critical
          end
          move_thread_flag_1147 = 0
          move_thread_han_1147 = run move_thread_1147()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1147 > 1):
              join move_thread_han_1147
              $ 1148 "Until (distance)"
              break
            end
            sync()
          end
          $ 1149 "MoveJ"
          $ 1150 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1151 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1152 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1153 "Call Poner_Broca"
          Poner_Broca()
          $ 1154 "MoveJ"
          $ 1155 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1156 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        end
        $ 1157 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 1158 "Linea 2 a 1645"
      $ 1159 "broca≔1645"
      global broca=1645
      $ 1160 "Buje_inicial"
      $ 1161 "Buje_Inicial≔L2B2"
      global Buje_Inicial=L2B2
      $ 1162 "Buje_final"
      $ 1163 "Buje_Final≔L2B1"
      global Buje_Final=L2B1
      $ 1164 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 1165 "barrenoActual≔1"
      global barrenoActual=1
      $ 1166 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 1167 "MoveL"
        $ 1168 "bajada_broca≔p[0,0,0.006,0,0,0]"
        global bajada_broca=p[0,0,0.006,0,0,0]
        $ 1169 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 1170 "Alturas"
        $ 1171 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 1172 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 1173 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1174 "Wait: 1.0"
          sleep(1.0)
          $ 1175 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1176 "Wait: 1.0"
          sleep(1.0)
        end
        $ 1177 "MoveJ"
        $ 1178 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1179 "Wait: 2.0"
        sleep(2.0)
        $ 1180 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 1181 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 1182 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1183 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1184 "MoveL"
          $ 1185 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 1186 "Else" "noBreak"
          $ 1187 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 1188 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1189 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1190 "MoveL"
          $ 1191 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 1192 "Freemove"
        $ 1193 "Wait: 2.0"
        sleep(2.0)
        $ 1194 "freedrive_mode()"
        freedrive_mode()
        $ 1195 "Wait: 2.5"
        sleep(2.5)
        $ 1196 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1197 "Wait: 0.3"
        sleep(0.3)
        $ 1198 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 1199 "Wait: 1.0"
        sleep(1.0)
        $ 1200 "Wait: 0.3"
        sleep(0.3)
        $ 1201 "Wait: 0.3"
        sleep(0.3)
        $ 1202 "Wait: 0.3"
        sleep(0.3)
        $ 1203 "Loop 3 times"
        Loop_70 = 0
        while (Loop_70 < 3):
          $ 1204 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 1205 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 1206 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 1207 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 1208 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 1209 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 1210 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 1211 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 1212 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 1213 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 1214 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 1215 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.006,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.006,0,0,0])
          Loop_70 = Loop_70 + 1
        end
        $ 1216 "Direction: Base Z+"
        global move_thread_flag_1216=0
        thread move_thread_1216():
          enter_critical
          move_thread_flag_1216 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_1216 = 2
          exit_critical
        end
        move_thread_flag_1216 = 0
        move_thread_han_1216 = run move_thread_1216()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1216 > 1):
            join move_thread_han_1216
            $ 1217 "Until (distance)"
            break
          end
          sync()
        end
        $ 1218 "MoveJ"
        $ 1219 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1220 "Wait: 0.3"
        sleep(0.3)
        $ 1221 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1222 "Wait: 0.3"
        sleep(0.3)
        $ 1223 "If barrenoActual≟13"
        if (barrenoActual == 13):
          $ 1224 "Direction: Base Z+"
          global move_thread_flag_1224=0
          thread move_thread_1224():
            enter_critical
            move_thread_flag_1224 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_1224 = 2
            exit_critical
          end
          move_thread_flag_1224 = 0
          move_thread_han_1224 = run move_thread_1224()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1224 > 1):
              join move_thread_han_1224
              $ 1225 "Until (distance)"
              break
            end
            sync()
          end
          $ 1226 "MoveJ"
          $ 1227 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1228 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1229 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1230 "Call Poner_Broca"
          Poner_Broca()
          $ 1231 "MoveJ"
          $ 1232 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1233 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1234 "ElseIf barrenoActual≟27"
          if (barrenoActual == 27):
            $ 1235 "Direction: Base Z+"
            global move_thread_flag_1235=0
            thread move_thread_1235():
              enter_critical
              move_thread_flag_1235 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_1235 = 2
              exit_critical
            end
            move_thread_flag_1235 = 0
            move_thread_han_1235 = run move_thread_1235()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1235 > 1):
                join move_thread_han_1235
                $ 1236 "Until (distance)"
                break
              end
              sync()
            end
            $ 1237 "MoveJ"
            $ 1238 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1239 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1240 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 1241 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 1242 "Wait: 1.0"
            sleep(1.0)
            $ 1243 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 1244 "Set mensaje_mw10=70"
            modbus_set_output_register("mensaje_mw10", 70)
            $ 1245 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1246 "Wait: 1.0"
            sleep(1.0)
            $ 1247 "Set mensaje_mw10=120"
            modbus_set_output_register("mensaje_mw10", 120)
            $ 1248 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1249 "Wait: 1.0"
            sleep(1.0)
            $ 1250 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 1251 "Wait: 1.0"
            sleep(1.0)
            $ 1252 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 1253 "Set mensaje_mw10=75"
            modbus_set_output_register("mensaje_mw10", 75)
            $ 1254 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1255 "Wait: 1.0"
            sleep(1.0)
            $ 1256 "Call Poner_Broca"
            Poner_Broca()
            $ 1257 "broca≔1935"
            global broca=1935
            $ 1258 "MoveJ"
            $ 1259 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1260 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1261 "Set mensaje_mw10=80"
            modbus_set_output_register("mensaje_mw10", 80)
            $ 1262 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1263 "Wait: 1.0"
            sleep(1.0)
            $ 1264 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 1265 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1266 "Wait: 1.0"
            sleep(1.0)
          end
        end
        $ 1267 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 1268 "Linea 1 a 1935"
      $ 1269 "broca≔1935"
      global broca=1935
      $ 1270 "Buje_inicial"
      $ 1271 "Buje_Inicial≔L1B2"
      global Buje_Inicial=L1B2
      $ 1272 "Buje_final"
      $ 1273 "Buje_Final≔L1B1"
      global Buje_Final=L1B1
      $ 1274 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 1275 "barrenoActual≔1"
      global barrenoActual=1
      $ 1276 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 1277 "MoveL"
        $ 1278 "bajada_broca≔p[0,0,0.009,0,0,0]"
        global bajada_broca=p[0,0,0.009,0,0,0]
        $ 1279 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 1280 "Alturas"
        $ 1281 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 1282 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 1283 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1284 "Wait: 1.0"
          sleep(1.0)
          $ 1285 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1286 "Wait: 1.0"
          sleep(1.0)
        end
        $ 1287 "MoveJ"
        $ 1288 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1289 "Wait: 2.0"
        sleep(2.0)
        $ 1290 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 1291 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 1292 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1293 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1294 "MoveL"
          $ 1295 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 1296 "Else" "noBreak"
          $ 1297 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 1298 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1299 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1300 "MoveL"
          $ 1301 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 1302 "Freemove"
        $ 1303 "Wait: 2.0"
        sleep(2.0)
        $ 1304 "freedrive_mode()"
        freedrive_mode()
        $ 1305 "Wait: 2.5"
        sleep(2.5)
        $ 1306 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1307 "Wait: 0.3"
        sleep(0.3)
        $ 1308 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 1309 "Wait: 1.0"
        sleep(1.0)
        $ 1310 "Wait: 0.3"
        sleep(0.3)
        $ 1311 "Wait: 0.3"
        sleep(0.3)
        $ 1312 "Wait: 0.3"
        sleep(0.3)
        $ 1313 "Loop 2 times"
        Loop_72 = 0
        while (Loop_72 < 2):
          $ 1314 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 1315 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 1316 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 1317 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 1318 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 1319 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 1320 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 1321 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 1322 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 1323 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 1324 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 1325 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
          Loop_72 = Loop_72 + 1
        end
        $ 1326 "Direction: Base Z+"
        global move_thread_flag_1326=0
        thread move_thread_1326():
          enter_critical
          move_thread_flag_1326 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_1326 = 2
          exit_critical
        end
        move_thread_flag_1326 = 0
        move_thread_han_1326 = run move_thread_1326()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1326 > 1):
            join move_thread_han_1326
            $ 1327 "Until (distance)"
            break
          end
          sync()
        end
        $ 1328 "MoveJ"
        $ 1329 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1330 "Wait: 0.3"
        sleep(0.3)
        $ 1331 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1332 "Wait: 0.3"
        sleep(0.3)
        $ 1333 "If barrenoActual≟13 or barrenoActual≟27"
        if (barrenoActual == 13  or  barrenoActual == 27):
          $ 1334 "Direction: Base Z+"
          global move_thread_flag_1334=0
          thread move_thread_1334():
            enter_critical
            move_thread_flag_1334 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_1334 = 2
            exit_critical
          end
          move_thread_flag_1334 = 0
          move_thread_han_1334 = run move_thread_1334()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1334 > 1):
              join move_thread_han_1334
              $ 1335 "Until (distance)"
              break
            end
            sync()
          end
          $ 1336 "MoveJ"
          $ 1337 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1338 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1339 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1340 "Call Poner_Broca"
          Poner_Broca()
          $ 1341 "MoveJ"
          $ 1342 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1343 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        end
        $ 1344 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 1345 "Linea 2 a 1935"
      $ 1346 "broca≔1935"
      global broca=1935
      $ 1347 "Buje_inicial"
      $ 1348 "Buje_Inicial≔L2B2"
      global Buje_Inicial=L2B2
      $ 1349 "Buje_final"
      $ 1350 "Buje_Final≔L2B1"
      global Buje_Final=L2B1
      $ 1351 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 1352 "barrenoActual≔1"
      global barrenoActual=1
      $ 1353 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 1354 "MoveL"
        $ 1355 "bajada_broca≔p[0,0,0.009,0,0,0]"
        global bajada_broca=p[0,0,0.009,0,0,0]
        $ 1356 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 1357 "Alturas"
        $ 1358 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 1359 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 1360 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1361 "Wait: 1.0"
          sleep(1.0)
          $ 1362 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1363 "Wait: 1.0"
          sleep(1.0)
        end
        $ 1364 "MoveJ"
        $ 1365 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1366 "Wait: 2.0"
        sleep(2.0)
        $ 1367 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 1368 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 1369 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1370 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1371 "MoveL"
          $ 1372 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 1373 "Else" "noBreak"
          $ 1374 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 1375 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1376 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1377 "MoveL"
          $ 1378 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 1379 "Freemove"
        $ 1380 "Wait: 2.0"
        sleep(2.0)
        $ 1381 "freedrive_mode()"
        freedrive_mode()
        $ 1382 "Wait: 2.5"
        sleep(2.5)
        $ 1383 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1384 "Wait: 0.3"
        sleep(0.3)
        $ 1385 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 1386 "Wait: 1.0"
        sleep(1.0)
        $ 1387 "Wait: 0.3"
        sleep(0.3)
        $ 1388 "Wait: 0.3"
        sleep(0.3)
        $ 1389 "Wait: 0.3"
        sleep(0.3)
        $ 1390 "Loop 2 times"
        Loop_74 = 0
        while (Loop_74 < 2):
          $ 1391 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 1392 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 1393 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 1394 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 1395 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 1396 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 1397 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 1398 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 1399 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 1400 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 1401 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 1402 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.009,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.009,0,0,0])
          Loop_74 = Loop_74 + 1
        end
        $ 1403 "Direction: Base Z+"
        global move_thread_flag_1403=0
        thread move_thread_1403():
          enter_critical
          move_thread_flag_1403 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_1403 = 2
          exit_critical
        end
        move_thread_flag_1403 = 0
        move_thread_han_1403 = run move_thread_1403()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1403 > 1):
            join move_thread_han_1403
            $ 1404 "Until (distance)"
            break
          end
          sync()
        end
        $ 1405 "MoveJ"
        $ 1406 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1407 "Wait: 0.3"
        sleep(0.3)
        $ 1408 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1409 "Wait: 0.3"
        sleep(0.3)
        $ 1410 "If barrenoActual≟13"
        if (barrenoActual == 13):
          $ 1411 "Direction: Base Z+"
          global move_thread_flag_1411=0
          thread move_thread_1411():
            enter_critical
            move_thread_flag_1411 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_1411 = 2
            exit_critical
          end
          move_thread_flag_1411 = 0
          move_thread_han_1411 = run move_thread_1411()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1411 > 1):
              join move_thread_han_1411
              $ 1412 "Until (distance)"
              break
            end
            sync()
          end
          $ 1413 "MoveJ"
          $ 1414 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1415 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1416 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1417 "Call Poner_Broca"
          Poner_Broca()
          $ 1418 "MoveJ"
          $ 1419 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1420 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1421 "ElseIf barrenoActual≟27"
          if (barrenoActual == 27):
            $ 1422 "Direction: Base Z+"
            global move_thread_flag_1422=0
            thread move_thread_1422():
              enter_critical
              move_thread_flag_1422 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_1422 = 2
              exit_critical
            end
            move_thread_flag_1422 = 0
            move_thread_han_1422 = run move_thread_1422()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1422 > 1):
                join move_thread_han_1422
                $ 1423 "Until (distance)"
                break
              end
              sync()
            end
            $ 1424 "MoveJ"
            $ 1425 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1426 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1427 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 1428 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 1429 "Wait: 1.0"
            sleep(1.0)
            $ 1430 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 1431 "Set mensaje_mw10=85"
            modbus_set_output_register("mensaje_mw10", 85)
            $ 1432 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1433 "Wait: 1.0"
            sleep(1.0)
            $ 1434 "Set mensaje_mw10=120"
            modbus_set_output_register("mensaje_mw10", 120)
            $ 1435 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1436 "Wait: 1.0"
            sleep(1.0)
            $ 1437 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 1438 "Wait: 1.0"
            sleep(1.0)
            $ 1439 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 1440 "Set mensaje_mw10=90"
            modbus_set_output_register("mensaje_mw10", 90)
            $ 1441 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1442 "Wait: 1.0"
            sleep(1.0)
            $ 1443 "Call Poner_Broca"
            Poner_Broca()
            $ 1444 "broca≔217"
            global broca=217
            $ 1445 "MoveJ"
            $ 1446 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1447 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1448 "Set mensaje_mw10=95"
            modbus_set_output_register("mensaje_mw10", 95)
            $ 1449 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1450 "Wait: 1.0"
            sleep(1.0)
            $ 1451 "Set mensaje_mw10=150"
            modbus_set_output_register("mensaje_mw10", 150)
            $ 1452 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1453 "Wait: 1.0"
            sleep(1.0)
          end
        end
        $ 1454 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 1455 "Linea 1 a 217"
      $ 1456 "broca≔217"
      global broca=217
      $ 1457 "Buje_inicial"
      $ 1458 "Buje_Inicial≔L1B2"
      global Buje_Inicial=L1B2
      $ 1459 "Buje_final"
      $ 1460 "Buje_Final≔L1B1"
      global Buje_Final=L1B1
      $ 1461 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 1462 "barrenoActual≔1"
      global barrenoActual=1
      $ 1463 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 1464 "MoveL"
        $ 1465 "bajada_broca≔p[0,0,0.018,0,0,0]"
        global bajada_broca=p[0,0,0.018,0,0,0]
        $ 1466 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 1467 "Alturas"
        $ 1468 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 1469 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 1470 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1471 "Wait: 1.0"
          sleep(1.0)
          $ 1472 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1473 "Wait: 1.0"
          sleep(1.0)
        end
        $ 1474 "MoveJ"
        $ 1475 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1476 "Wait: 2.0"
        sleep(2.0)
        $ 1477 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 1478 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 1479 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1480 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1481 "MoveL"
          $ 1482 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 1483 "Else" "noBreak"
          $ 1484 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 1485 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1486 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1487 "MoveL"
          $ 1488 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 1489 "Freemove"
        $ 1490 "Wait: 2.0"
        sleep(2.0)
        $ 1491 "freedrive_mode()"
        freedrive_mode()
        $ 1492 "Wait: 2.5"
        sleep(2.5)
        $ 1493 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1494 "Wait: 0.3"
        sleep(0.3)
        $ 1495 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 1496 "Wait: 1.0"
        sleep(1.0)
        $ 1497 "Wait: 0.3"
        sleep(0.3)
        $ 1498 "Wait: 0.3"
        sleep(0.3)
        $ 1499 "Wait: 0.3"
        sleep(0.3)
        $ 1500 "Loop 1 times"
        Loop_76 = 0
        while (Loop_76 < 1):
          $ 1501 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 1502 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 1503 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 1504 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 1505 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 1506 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 1507 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 1508 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 1509 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 1510 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 1511 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 1512 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
          Loop_76 = Loop_76 + 1
        end
        $ 1513 "Direction: Base Z+"
        global move_thread_flag_1513=0
        thread move_thread_1513():
          enter_critical
          move_thread_flag_1513 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_1513 = 2
          exit_critical
        end
        move_thread_flag_1513 = 0
        move_thread_han_1513 = run move_thread_1513()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1513 > 1):
            join move_thread_han_1513
            $ 1514 "Until (distance)"
            break
          end
          sync()
        end
        $ 1515 "MoveJ"
        $ 1516 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1517 "Wait: 0.3"
        sleep(0.3)
        $ 1518 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1519 "Wait: 0.3"
        sleep(0.3)
        $ 1520 "If barrenoActual≟13 or barrenoActual≟27"
        if (barrenoActual == 13  or  barrenoActual == 27):
          $ 1521 "Direction: Base Z+"
          global move_thread_flag_1521=0
          thread move_thread_1521():
            enter_critical
            move_thread_flag_1521 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_1521 = 2
            exit_critical
          end
          move_thread_flag_1521 = 0
          move_thread_han_1521 = run move_thread_1521()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1521 > 1):
              join move_thread_han_1521
              $ 1522 "Until (distance)"
              break
            end
            sync()
          end
          $ 1523 "MoveJ"
          $ 1524 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1525 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1526 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1527 "Call Poner_Broca"
          Poner_Broca()
          $ 1528 "MoveJ"
          $ 1529 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1530 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        end
        $ 1531 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 1532 "Linea 2 a 217"
      $ 1533 "broca≔217"
      global broca=217
      $ 1534 "Buje_inicial"
      $ 1535 "Buje_Inicial≔L2B2"
      global Buje_Inicial=L2B2
      $ 1536 "Buje_final"
      $ 1537 "Buje_Final≔L2B1"
      global Buje_Final=L2B1
      $ 1538 "barrenosTotales≔27"
      global barrenosTotales=27
      $ 1539 "barrenoActual≔1"
      global barrenoActual=1
      $ 1540 "Loop barrenoActual≤barrenosTotales"
      while (barrenoActual <= barrenosTotales):
        $ 1541 "MoveL"
        $ 1542 "bajada_broca≔p[0,0,0.018,0,0,0]"
        global bajada_broca=p[0,0,0.018,0,0,0]
        $ 1543 "internos≔interpolate_pose(Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))"
        global internos= interpolate_pose (Buje_Inicial, Buje_Final, ((barrenoActual)-1)/((barrenosTotales)-1))
        $ 1544 "Alturas"
        $ 1545 "If barrenoActual≟3 or barrenoActual≟5 or barrenoActual≟7 or barrenoActual≟9 or barrenoActual≟11 or barrenoActual≟13 or barrenoActual≟15 or barrenoActual≟17 or barrenoActual≟19 or barrenoActual≟21 or barrenoActual≟23 or barrenoActual≟25 or barrenoActual≟27 or barrenoActual≟1"
        if (barrenoActual == 3  or  barrenoActual == 5  or  barrenoActual == 7  or  barrenoActual == 9  or  barrenoActual == 11  or  barrenoActual == 13  or  barrenoActual == 15  or  barrenoActual == 17  or  barrenoActual == 19  or  barrenoActual == 21  or  barrenoActual == 23  or  barrenoActual == 25  or  barrenoActual == 27  or  barrenoActual == 1):
          $ 1546 "Set mensaje_mw10=200"
          modbus_set_output_register("mensaje_mw10", 200)
          $ 1547 "Wait Continuar_M30=HI"
          while (modbus_get_signal_status("Continuar_M30") == False):
            sync()
          end
          $ 1548 "Wait: 1.0"
          sleep(1.0)
          $ 1549 "Set mensaje_mw10=150"
          modbus_set_output_register("mensaje_mw10", 150)
          $ 1550 "Wait: 1.0"
          sleep(1.0)
        end
        $ 1551 "MoveJ"
        $ 1552 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1553 "Wait: 2.0"
        sleep(2.0)
        $ 1554 "If P1h[2]<P2h[2]"
        if (P1h[2]<P2h[2]):
          $ 1555 "acomodin≔(altura/(barrenosTotales-1))*(barrenoActual-1)"
          global acomodin=(altura/(barrenosTotales-1))*(barrenoActual-1)
          $ 1556 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1557 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1558 "MoveL"
          $ 1559 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        else:
          $ 1560 "Else" "noBreak"
          $ 1561 "acomodin≔(altura/(barrenosTotales-1))*(26-(barrenoActual-1))"
          global acomodin=(altura/(barrenosTotales-1))*(26-(barrenoActual-1))
          $ 1562 "tcp_chido≔get_actual_tcp_pose()"
          global tcp_chido= get_actual_tcp_pose ()
          $ 1563 "offset_bajada≔p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]"
          global offset_bajada=p[tcp_chido[0],tcp_chido[1],((alta-0.0095)-(acomodin/1000)),tcp_chido[3],tcp_chido[4],tcp_chido[5]]
          $ 1564 "MoveL"
          $ 1565 "offset_bajada" "breakAfter"
          movel(offset_bajada, a=0.03, v=0.015)
        end
        $ 1566 "Freemove"
        $ 1567 "Wait: 2.0"
        sleep(2.0)
        $ 1568 "freedrive_mode()"
        freedrive_mode()
        $ 1569 "Wait: 2.5"
        sleep(2.5)
        $ 1570 "end_freedrive_mode()"
        end_freedrive_mode()
        $ 1571 "Wait: 0.3"
        sleep(0.3)
        $ 1572 "Set CO[1]=Encender"
        set_configurable_digital_out(1, True)
        $ 1573 "Wait: 1.0"
        sleep(1.0)
        $ 1574 "Wait: 0.3"
        sleep(0.3)
        $ 1575 "Wait: 0.3"
        sleep(0.3)
        $ 1576 "Wait: 0.3"
        sleep(0.3)
        $ 1577 "Loop 1 times"
        Loop_78 = 0
        while (Loop_78 < 1):
          $ 1578 "Poses_taladrado≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_sub ( get_actual_tcp_pose (), bajada_broca)
          $ 1579 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.005, v=0.001)
          $ 1580 "If bajada_broca≟p[0,0,0.018,0,0,0]"
          if (bajada_broca == p[0,0,0.018,0,0,0]):
            $ 1581 "num_barreno≔str_cat('Barreno: ',barrenoActual)"
            global num_barreno=str_cat("Barreno: ",barrenoActual)
            $ 1582 "tcp_actual≔get_actual_tcp_pose()"
            global tcp_actual= get_actual_tcp_pose ()
            $ 1583 "X_actual≔str_cat('     X: ',tcp_actual[0])"
            global X_actual=str_cat("     X: ",tcp_actual[0])
            $ 1584 "Y_actual≔str_cat('     Y: ',tcp_actual[1])"
            global Y_actual=str_cat("     Y: ",tcp_actual[1])
            $ 1585 "pos_barreno≔str_cat(X_actual,Y_actual)"
            global pos_barreno=str_cat(X_actual,Y_actual)
            $ 1586 "textmsg(num_barreno,pos_barreno)"
            textmsg(num_barreno,pos_barreno)
          end
          $ 1587 "Poses_taladrado≔pose_add(get_actual_tcp_pose(), bajada_broca)"
          global Poses_taladrado= pose_add ( get_actual_tcp_pose (), bajada_broca)
          $ 1588 "Poses_taladrado" "breakAfter"
          movel(Poses_taladrado, a=0.01, v=0.01)
          $ 1589 "bajada_broca≔pose_add(bajada_broca, p[0,0,0.018,0,0,0])"
          global bajada_broca= pose_add (bajada_broca, p[0,0,0.018,0,0,0])
          Loop_78 = Loop_78 + 1
        end
        $ 1590 "Direction: Base Z+"
        global move_thread_flag_1590=0
        thread move_thread_1590():
          enter_critical
          move_thread_flag_1590 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
          movel(towardsPos, a=0.04, v=0.03)
          move_thread_flag_1590 = 2
          exit_critical
        end
        move_thread_flag_1590 = 0
        move_thread_han_1590 = run move_thread_1590()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1590 > 1):
            join move_thread_han_1590
            $ 1591 "Until (distance)"
            break
          end
          sync()
        end
        $ 1592 "MoveJ"
        $ 1593 "internos" "breakAfter"
        movej(internos, a=1.3962634015954636, v=1.0471975511965976)
        $ 1594 "Wait: 0.3"
        sleep(0.3)
        $ 1595 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1596 "Wait: 0.3"
        sleep(0.3)
        $ 1597 "If barrenoActual≟13"
        if (barrenoActual == 13):
          $ 1598 "Direction: Base Z+"
          global move_thread_flag_1598=0
          thread move_thread_1598():
            enter_critical
            move_thread_flag_1598 = 1
            local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
            movel(towardsPos, a=1.2, v=0.25)
            move_thread_flag_1598 = 2
            exit_critical
          end
          move_thread_flag_1598 = 0
          move_thread_han_1598 = run move_thread_1598()
          while (True):
            sleep(1.0E-10)
            if (move_thread_flag_1598 > 1):
              join move_thread_han_1598
              $ 1599 "Until (distance)"
              break
            end
            sync()
          end
          $ 1600 "MoveJ"
          $ 1601 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1602 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1603 "Call Quitar_Broca_Chida"
          Quitar_Broca_Chida()
          $ 1604 "Call Poner_Broca"
          Poner_Broca()
          $ 1605 "MoveJ"
          $ 1606 "Posicion_Cero" "breakAfter"
          movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
          $ 1607 "Zona_izq1" "breakAfter"
          movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
        else:
          $ 1608 "ElseIf barrenoActual≟27"
          if (barrenoActual == 27):
            $ 1609 "Direction: Base Z+"
            global move_thread_flag_1609=0
            thread move_thread_1609():
              enter_critical
              move_thread_flag_1609 = 1
              local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.03)
              movel(towardsPos, a=1.2, v=0.25)
              move_thread_flag_1609 = 2
              exit_critical
            end
            move_thread_flag_1609 = 0
            move_thread_han_1609 = run move_thread_1609()
            while (True):
              sleep(1.0E-10)
              if (move_thread_flag_1609 > 1):
                join move_thread_han_1609
                $ 1610 "Until (distance)"
                break
              end
              sync()
            end
            $ 1611 "MoveJ"
            $ 1612 "Zona_izq1" "breakAfter"
            movej(get_inverse_kin(Zona_izq1_p, qnear=Zona_izq1_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1613 "Posicion_Cero" "breakAfter"
            movej(get_inverse_kin(Posicion_Cero_p, qnear=Posicion_Cero_q), a=1.3962634015954636, v=1.0471975511965976)
            $ 1614 "Call Quitar_Broca_Chida"
            Quitar_Broca_Chida()
            $ 1615 "Set carrusel_home=Encender"
            modbus_set_output_signal("carrusel_home", True)
            $ 1616 "Wait: 1.0"
            sleep(1.0)
            $ 1617 "Set carrusel_home=Apagar"
            modbus_set_output_signal("carrusel_home", False)
            $ 1618 "Set mensaje_mw10=120"
            modbus_set_output_register("mensaje_mw10", 120)
            $ 1619 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1620 "Wait: 1.0"
            sleep(1.0)
            $ 1621 "Set mensaje_mw10=100"
            modbus_set_output_register("mensaje_mw10", 100)
            $ 1622 "Wait Continuar_M30=HI"
            while (modbus_get_signal_status("Continuar_M30") == False):
              sync()
            end
            $ 1623 "Wait: 1.0"
            sleep(1.0)
            $ 1624 "MoveJ"
            $ 1625 "Traslacion_izq" "breakAfter"
            movej(get_inverse_kin(Traslacion_izq_p, qnear=Traslacion_izq_q), a=1.3962634015954636, v=1.0471975511965976)
          end
        end
        $ 1626 "barrenoActual≔barrenoActual+1"
        global barrenoActual=barrenoActual+1
      end
      $ 1628 "Traslacion"
      $ 1629 "MoveJ"
      $ 1630 "Traslacion_izq" "breakAfter"
      movej(get_inverse_kin(Traslacion_izq_p, qnear=Traslacion_izq_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1631 "Set mensaje_mw10=105"
      modbus_set_output_register("mensaje_mw10", 105)
      $ 1632 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1633 "Wait: 1.0"
      sleep(1.0)
      $ 1634 "Set mensaje_mw10=110"
      modbus_set_output_register("mensaje_mw10", 110)
      $ 1635 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1636 "Wait: 1.0"
      sleep(1.0)
      $ 1637 "Set postrnas_m187=Encender"
      modbus_set_output_signal("postrnas_m187", True)
      $ 1638 "Wait: 1.0"
      sleep(1.0)
      $ 1639 "Set Home_M20=Encender"
      modbus_set_output_signal("Home_M20", True)
      $ 1640 "Wait: 1.0"
      sleep(1.0)
      $ 1641 "Set Home_M20=Apagar"
      modbus_set_output_signal("Home_M20", False)
      $ 1642 "Set postrnas_m187=Apagar"
      modbus_set_output_signal("postrnas_m187", False)
      $ 1643 "Wait: 5.0"
      sleep(5.0)
      $ 1644 "Apagar"
      $ 1645 "Set mensaje_mw10=115"
      modbus_set_output_register("mensaje_mw10", 115)
      $ 1646 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1647 "Wait: 1.0"
      sleep(1.0)
      $ 1648 "MoveJ"
      $ 1649 "Waypoint_9" "breakAfter"
      movej(get_inverse_kin(Waypoint_9_p, qnear=Waypoint_9_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1650 "Waypoint_8" "breakAfter"
      movej(get_inverse_kin(Waypoint_8_p, qnear=Waypoint_8_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1651 "Off_izquierda" "breakAfter"
      movej(get_inverse_kin(Off_izquierda_p, qnear=Off_izquierda_q), a=1.3962634015954636, v=1.0471975511965976)
      $ 1652 "Set mensaje_mw10=0"
      modbus_set_output_register("mensaje_mw10", 0)
      $ 1653 "Wait: 1.0"
      sleep(1.0)
      $ 1654 "Wait Continuar_M30=HI"
      while (modbus_get_signal_status("Continuar_M30") == False):
        sync()
      end
      $ 1655 "Wait: 1.0"
      sleep(1.0)
      $ 1656 "Popup: DAS apagado"
      popup("DAS apagado", "Advertencia", True, False, blocking=False)
      halt
    else:
      $ 1657 "ElseIf Lado_Correr≟2"
      if (modbus_get_signal_status("Lado_Correr") == 2):
        $ 1658 "Popup: Apagar DAS"
        popup("Apagar DAS", "Advertencia", True, False, blocking=False)
        halt
      else:
        $ 1659 "ElseIf Lado_Correr≟3"
        if (modbus_get_signal_status("Lado_Correr") == 3):
          $ 1660 "Popup: Apagar DAS"
          popup("Apagar DAS", "Advertencia", True, False, blocking=False)
          halt
        else:
          $ 1661 "Else" "noBreak"
          $ 1662 "Lado≔ False "
          global Lado=  False  
          $ 1663 "Popup: DAS no anclado"
          popup("DAS no anclado", "Advertencia", True, False, blocking=False)
          halt
        end
      end
    end
  end
end
