def DAS428_958_02_MAR_21_DAS_lado_izquierdo_jig2():
  step_count_cb486e1e_2b8d_495c_afa4_48e8c6bfd957 = 0
  thread Step_Counter_Thread_418e8cb4_311f_44ce_a52e_b6628405cc57():
    while (True):
      step_count_cb486e1e_2b8d_495c_afa4_48e8c6bfd957 = step_count_cb486e1e_2b8d_495c_afa4_48e8c6bfd957 + 1
      sync()
    end
  end
  run Step_Counter_Thread_418e8cb4_311f_44ce_a52e_b6628405cc57()
  set_safety_mode_transition_hardness(1)
  set_tcp(p[4.109330471764039E-4,-0.21829828276152607,0.037994196120996,1.5580092985761962,-0.12546870791316503,0.12120248426608284])
  set_payload(1.5)
  modbus_add_signal("192.168.10.45", 255, 187, 1, "postrnas_m187", False)
  modbus_set_signal_update_frequency("postrnas_m187", 10)
  modbus_add_signal("192.168.10.45", 255, 289, 1, "ini_cambro_m289", False)
  modbus_set_signal_update_frequency("ini_cambro_m289", 10)
  modbus_add_signal("192.168.10.45", 255, 290, 0, "fin_cambro_m290", False)
  modbus_set_signal_update_frequency("fin_cambro_m290", 10)
  modbus_add_signal("192.168.10.45", 255, 291, 1, "outputbroc_m291", False)
  modbus_set_signal_update_frequency("outputbroc_m291", 10)
  modbus_add_signal("192.168.10.45", 255, 292, 0, "fciclocarr_m292", False)
  modbus_set_signal_update_frequency("fciclocarr_m292", 10)
  modbus_add_signal("192.168.10.45", 255, 7, 1, "avancarrusel_m7", False)
  modbus_set_signal_update_frequency("avancarrusel_m7", 10)
  modbus_add_signal("192.168.10.45", 255, 252, 1, "pose2_m252", False)
  modbus_set_signal_update_frequency("pose2_m252", 10)
  modbus_add_signal("192.168.10.45", 255, 253, 1, "pose3_m253", False)
  modbus_set_signal_update_frequency("pose3_m253", 10)
  modbus_add_signal("192.168.10.45", 255, 254, 1, "pose4_m254", False)
  modbus_set_signal_update_frequency("pose4_m254", 10)
  modbus_add_signal("192.168.10.45", 255, 441, 1, "finciclo_m441", False)
  modbus_set_signal_update_frequency("finciclo_m441", 10)
  modbus_add_signal("192.168.10.45", 255, 442, 1, "finciclo_m442", False)
  modbus_set_signal_update_frequency("finciclo_m442", 10)
  modbus_add_signal("192.168.10.45", 255, 443, 1, "finciclo_m443", False)
  modbus_set_signal_update_frequency("finciclo_m443", 10)
  modbus_add_signal("192.168.10.45", 255, 503, 0, "homecobot_m503", False)
  modbus_set_signal_update_frequency("homecobot_m503", 10)
  modbus_add_signal("192.168.10.45", 255, 288, 1, "cargar_run_m288", False)
  modbus_set_signal_update_frequency("cargar_run_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 287, 0, "desactiver_m288", False)
  modbus_set_signal_update_frequency("desactiver_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 183, 0, "eje7home_m183", False)
  modbus_set_signal_update_frequency("eje7home_m183", 10)
  modbus_add_signal("192.168.10.45", 255, 444, 1, "finciclo_m444", False)
  modbus_set_signal_update_frequency("finciclo_m444", 10)
  modbus_add_signal("192.168.10.45", 255, 381, 0, "pat1_m381", False)
  modbus_set_signal_update_frequency("pat1_m381", 10)
  modbus_add_signal("192.168.10.45", 255, 382, 0, "pat2_m382", False)
  modbus_set_signal_update_frequency("pat2_m382", 10)
  modbus_add_signal("192.168.10.45", 255, 383, 0, "pat3_m383", False)
  modbus_set_signal_update_frequency("pat3_m383", 10)
  modbus_add_signal("192.168.10.45", 255, 384, 0, "pat4_m384", False)
  modbus_set_signal_update_frequency("pat4_m384", 10)
  modbus_add_signal("192.168.10.45", 255, 385, 0, "pat5_m385", False)
  modbus_set_signal_update_frequency("pat5_m385", 10)
  modbus_add_signal("192.168.10.45", 255, 386, 0, "pat6_m386", False)
  modbus_set_signal_update_frequency("pat6_m386", 10)
  modbus_add_signal("192.168.10.45", 255, 387, 0, "pat7_m387", False)
  modbus_set_signal_update_frequency("pat7_m387", 10)
  modbus_add_signal("192.168.10.45", 255, 388, 0, "pat8_m388", False)
  modbus_set_signal_update_frequency("pat8_m388", 10)
  modbus_add_signal("192.168.10.45", 255, 389, 0, "pat9_m389", False)
  modbus_set_signal_update_frequency("pat9_m389", 10)
  modbus_add_signal("192.168.10.45", 255, 390, 0, "pat10_m390", False)
  modbus_set_signal_update_frequency("pat10_m390", 10)
  modbus_add_signal("192.168.10.45", 255, 391, 0, "pat11_m391", False)
  modbus_set_signal_update_frequency("pat11_m391", 10)
  modbus_add_signal("192.168.10.45", 255, 392, 0, "pat12_m392", False)
  modbus_set_signal_update_frequency("pat12_m392", 10)
  modbus_add_signal("192.168.10.45", 255, 401, 0, "inipat1_m401", False)
  modbus_set_signal_update_frequency("inipat1_m401", 10)
  modbus_add_signal("192.168.10.45", 255, 402, 0, "inipat2_m402", False)
  modbus_set_signal_update_frequency("inipat2_m402", 10)
  modbus_add_signal("192.168.10.45", 255, 403, 0, "inipat3_m403", False)
  modbus_set_signal_update_frequency("inipat3_m403", 10)
  modbus_add_signal("192.168.10.45", 255, 404, 0, "inipat4_m404", False)
  modbus_set_signal_update_frequency("inipat4_m404", 10)
  modbus_add_signal("192.168.10.45", 255, 405, 0, "inipat5_m405", False)
  modbus_set_signal_update_frequency("inipat5_m405", 10)
  modbus_add_signal("192.168.10.45", 255, 406, 0, "inipat6_m406", False)
  modbus_set_signal_update_frequency("inipat6_m406", 10)
  modbus_add_signal("192.168.10.45", 255, 407, 0, "inipat7_m407", False)
  modbus_set_signal_update_frequency("inipat7_m407", 10)
  modbus_add_signal("192.168.10.45", 255, 408, 0, "inipat8_m408", False)
  modbus_set_signal_update_frequency("inipat8_m408", 10)
  modbus_add_signal("192.168.10.45", 255, 409, 0, "inipat9_m409", False)
  modbus_set_signal_update_frequency("inipat9_m409", 10)
  modbus_add_signal("192.168.10.45", 255, 410, 0, "inipat10_m410", False)
  modbus_set_signal_update_frequency("inipat10_m410", 10)
  modbus_add_signal("192.168.10.45", 255, 411, 0, "inipat11_m411", False)
  modbus_set_signal_update_frequency("inipat11_m411", 10)
  modbus_add_signal("192.168.10.45", 255, 412, 0, "inipat12_m412", False)
  modbus_set_signal_update_frequency("inipat12_m412", 10)
  modbus_add_signal("192.168.10.45", 255, 430, 0, "modeloDer_m430", False)
  modbus_set_signal_update_frequency("modeloDer_m430", 10)
  modbus_add_signal("192.168.10.45", 255, 380, 1, "mensaje_m380", False)
  modbus_set_signal_update_frequency("mensaje_m380", 10)
  modbus_add_signal("192.168.10.45", 255, 379, 0, "respues_m379", False)
  modbus_set_signal_update_frequency("respues_m379", 10)
  modbus_add_signal("192.168.10.45", 255, 251, 1, "pose1_m251", False)
  modbus_set_signal_update_frequency("pose1_m251", 10)
  modbus_set_runstate_dependent_choice("postrnas_m187",0)
  modbus_set_runstate_dependent_choice("ini_cambro_m289",0)
  modbus_set_runstate_dependent_choice("outputbroc_m291",0)
  modbus_set_runstate_dependent_choice("avancarrusel_m7",0)
  modbus_set_runstate_dependent_choice("pose2_m252",0)
  modbus_set_runstate_dependent_choice("pose3_m253",0)
  modbus_set_runstate_dependent_choice("pose4_m254",0)
  modbus_set_runstate_dependent_choice("finciclo_m441",0)
  modbus_set_runstate_dependent_choice("finciclo_m442",0)
  modbus_set_runstate_dependent_choice("finciclo_m443",0)
  modbus_set_runstate_dependent_choice("cargar_run_m288",0)
  modbus_set_runstate_dependent_choice("finciclo_m444",0)
  modbus_set_runstate_dependent_choice("mensaje_m380",0)
  modbus_set_runstate_dependent_choice("pose1_m251",0)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_runstate_standard_digital_outputs([2])
  set_runstate_configurable_digital_outputs([1])
  set_runstate_standard_digital_output_to_value(2, 1)
  set_runstate_configurable_digital_output_to_value(1, 1)
  set_gravity([0.0, 0.0, 9.82])
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  global contador=0
  global i_var_1=0
  global Pallet_1_cnt_1=1
  global Pallet_1_cnt=1
  global Line_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_2=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_4=p[-0.2932874787951964,0.3932288129452105,0.013749459185886714,0.019478391032120013,-0.0350876085014595,1.5300278925331599]
  global Line_5=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Plane_1=p[-0.4357649673792705,0.3571224276764373,-0.011331751409534768,-0.03455953496512708,-0.012487423981114925,3.103751116092306]
  global Plane_2=p[-0.4823864034329737,0.3302516442079689,0.014283714098506706,0.017125077458443067,0.05770060098903715,-2.9134709732588786]
  global Plane_3=p[0.003678615545088639,0.4082921331082374,0.10477407557236007,-2.072177303174012E-4,7.379081343290108E-4,-6.424400645467977E-4]
  global Plane_4=p[-0.4500206307677429,-0.2823718146925442,-0.4767416657426552,0.013278190059218174,0.013334473770785706,1.8479691991032237]
  global Plano_patron1=p[-0.7699005610122596,0.304894434078545,0.0420369514744936,-0.0031270356010209216,1.7180543614697593E-4,-3.508888786211572E-5]
  global Point_13=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_8=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_prot_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_seg_der=p[0.23741638234469645,0.3587772222537799,0.42419077585740217,0.818517054876345,1.4216436941132238,1.005041187710707]
  global pisp_958=p[-0.41395442210486977,-0.2082168853247176,0.041553466664982,0.014014788518713659,0.01101911827984854,1.569193423241601]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  global Traslacion_p=p[.657998712498, .394119076430, .719668538659, .745859698144, 2.906519637838, .095468097993]
  global Traslacion_q=[-3.020863008919047, -1.4521287285823696, 0.9893999609737083, 0.3161356049923509, -5.817383157179211, 7.125860208047008E-4]
  global Home2_p=p[.649602302195, .003200282484, .254149874925, -2.448457879294, -1.966199736652, -.011076409707]
  global Home2_q=[-3.47968947108801, -1.6856169348881274, 2.036329601799979, -0.3455951480915882, -4.992365550646321, 0.0060764790449239214]
  global Home3_p=p[.649602302195, .003200282484, .254149874925, -2.448457879294, -1.966199736652, -.011076409707]
  global Home3_q=[-3.479689471087993, -1.6856169348881211, 2.0363296017999737, -0.34559514809159, -4.992365550646304, 0.006076479044924019]
  global Home4_p=p[.649602302195, .003200282484, .254149874925, -2.448457879294, -1.966199736652, -.011076409707]
  global Home4_q=[-3.479689471087993, -1.6856169348881211, 2.0363296017999737, -0.34559514809159, -4.992365550646304, 0.006076479044924019]
  global PosicionApagado_p=p[-.175961014487, -.529389253007, .109949884724, .175001600804, 2.113291246609, -2.157399109703]
  global PosicionApagado_q=[-1.5727354621284952, -1.5704867605983486, -2.807039864148308, -0.30557696332673245, -4.706711136129834, 1.778107977035495E-5]
  global Precambio_broca_p=p[.000830370305, .461517540512, .287521124194, -.221784750204, -3.131955254916, .000429460883]
  global Precambio_broca_q=[-2.1838225298159477, -2.0964618902985066, 2.243453456263678, -0.13436505871461257, -5.342774534909408, -0.004043449473680738]
  global Linea1_A_p=p[.465780239716, -.226284822275, .110110305320, 3.129199777247, .273979671894, -.008474561279]
  global Linea1_A_q=[-3.7622293747396913, -1.6873556925995992, 2.323362421011069, -0.625104012809361, -4.0968533396839515, 0.0033473062041684543]
  global Linea1_B_p=p[.669199999133, -.226066231601, .110221514703, 3.129199488643, .274057096186, -.008522317905]
  global Linea1_B_q=[-3.557231781452517, -1.3492008498278363, 1.961545229349972, -0.5993084840575982, -3.891978745553196, 0.0068914536813957416]
  global Linea1_C_p=p[.694599999674, -.226083076366, .110775282131, 3.129206209142, .274048762949, -.008557115599]
  global Linea1_C_q=[-3.5408294989047437, -1.3120520197143488, 1.9116878668393618, -0.5863558735051146, -3.8755559725861075, 0.007215554028316085]
  global Linea1_D_p=p[.897799999597, -.226330598752, .110549197198, 3.129164560911, .274100632214, -.008493112790]
  global Linea1_D_q=[-3.4452506974721455, -1.015094527261077, 1.4697422225132426, -0.4398923161705586, -3.779757131526884, 0.009316440733303288]
  global Linea1_E_p=p[.923199997743, -.226496087218, .110278761023, 3.129196935269, .274071665669, -.008639622731]
  global Linea1_E_q=[-3.436588597727809, -0.976349509057826, 1.4065148117166615, -0.4151627604596042, -3.7710218003171097, 0.009513196103198673]
  global Linea1_F_p=p[1.125593354651, -.226031138561, .110601831768, 3.129192254502, .274074519951, -.008696700454]
  global Linea1_F_q=[-3.380697676481182, -0.6099111929302072, 0.7528298757650722, -0.1267902515679964, -3.714400713814072, 0.010912064972982147]
  def calculate_point_to_move_towards(feature, direction, position_distance):
    local posDir=[direction[0], direction[1], direction[2]]
    if (norm(posDir) < 1e-6):
      return get_target_waypoint()
    end
    local direction_vector_normalized=normalize(posDir)
    local displacement_pose=p[direction_vector_normalized[0] * position_distance,direction_vector_normalized[1] * position_distance,direction_vector_normalized[2] * position_distance,0,0,0]
    local wanted_displacement_in_base_frame=pose_sub(pose_trans(feature, displacement_pose), feature)
    return pose_add(get_target_waypoint(), wanted_displacement_in_base_frame)
  end
  global Linea2_A_p=p[.466954168710, .182156727796, .110171699464, -2.448457838983, -1.966199888042, -.011076390033]
  global Linea2_A_q=[-3.096264362332022, -1.8105063261906196, 2.419381749575411, -0.604569943120544, -4.609367858418758, 0.008210447251383535]
  global Linea2_B_p=p[.671809999536, .182878038708, .110175282179, -2.448398718020, -1.966214966670, -.010953917198]
  global Linea2_B_q=[-3.112193266343249, -1.4618930385561022, 2.1005475692711357, -0.6342202128720773, -4.625507134533515, 0.00845567105716949]
  global Linea2_C_p=p[.694980620228, .182769618296, .110459932861, -2.448327792652, -1.966241960778, -.010898882344]
  global Linea2_C_q=[-3.1136170783763246, -1.427697328825201, 2.059986020915073, -0.6277999413035573, -4.626970277725095, 0.008475304624878617]
  global Linea2_D_p=p[.898787430028, .183234989861, .110403286316, -2.448304893977, -1.966353718915, -.010975641562]
  global Linea2_D_q=[-3.12042574519119, -1.1376151787135544, 1.6647315225706083, -0.5226894752077342, -4.633689721395611, 0.008491290355203619]
  global Linea2_E_p=p[.923789841802, .182506729307, .110323521287, -2.448339335785, -1.966352412105, -.011034134800]
  global Linea2_E_q=[-3.1220303350773233, -1.1024169697310633, 1.610792612077442, -0.5039930836645397, -4.635244042411777, 0.008484609097352974]
  global Linea2_F_p=p[1.126945944045, .182371421241, .110084235246, -2.448292218177, -1.966366471653, -.011020014588]
  global Linea2_F_q=[-3.126205891145389, -0.7888654762746627, 1.0844527378197477, -0.2911805586510319, -4.6389576225939395, 0.008426573530911268]
  global Linea7_A_p=p[.737913382913, -.359696656416, .110246852616, 3.131872092311, .186635383423, -.000389334829]
  global Linea7_A_q=[-3.681156562266171, -1.1996168071622932, 1.757330151202673, -0.5522026597660465, -3.9601640674441323, 0.005316316519943243]
  global Linea7_B_p=p[.783713148217, -.360080715325, .110620974020, 3.131872080694, .186635404395, -.000389343545]
  global Linea7_B_q=[-3.650143104990655, -1.1359413316685298, 1.6616529669860118, -0.5200665751996176, -3.929093763815281, 0.005555397450602444]
  global Linea8_A_p=p[.886282799932, -.360229310841, .110453772921, 3.131519956407, .186494776915, .000579777937]
  global Linea8_A_q=[-3.591304287493482, -0.9891617182428476, 1.4289624761138866, -0.4346002764061705, -3.870006358141346, 0.006011745682200086]
  global Linea8_B_p=p[1.009987450255, -.360229310302, .110179227584, 3.131519925151, .186494817820, .000579759973]
  global Linea8_B_q=[-3.5358660704998717, -0.7924298121308935, 1.0907006839592273, -0.2928265782260997, -3.8142305776877343, 0.0064076248760271785]
  global Linea9_A_p=p[1.089313325367, -.360630550626, .110237381886, 3.131274831042, .186572958872, .001401500331]
  global Linea9_A_q=[-3.507282006423159, -0.6385942191612735, 0.8089501351297868, -0.1653539889318978, -3.785363860326909, 0.006616479785108709]
  global Linea9_B_p=p[1.138944388844, -.360869351507, .110826017632, 3.131274802661, .186572988174, .001401483023]
  global Linea9_B_q=[-3.4914339632991864, -0.5124624399707418, 0.5676507222077732, -0.05011131989687101, -3.7691835676211607, 0.006732071657192494]
  global Linea10_A_p=p[.620978322043, -.324892456797, .110623766440, 3.127402623628, -.245143091263, -.004063554207]
  global Linea10_A_q=[-3.6869382053447044, -1.3223584773988293, 1.927375204305715, -0.5983630349819116, -3.6905142249820324, 0.0056231827538635315]
  global Linea10_B_p=p[.621097917225, -.276980216964, .110320290981, 3.127402605879, -.245143081258, -.004063559866]
  global Linea10_B_q=[-3.6188087722380935, -1.3384072237024949, 1.949063614559142, -0.6032315503323895, -3.6223937108691318, 0.006590396406481958]
  global Linea11_A_p=p[.623455356385, -.144672989900, .110191487849, -2.632012907887, -1.710466693368, -.008551801775]
  global Linea11_A_q=[-3.7294766647125748, -1.5700524659119814, 2.21580175367518, -0.6379282889546607, -5.042121691434226, 0.005581533742989642]
  global Linea11_B_p=p[.624119671393, -.090095469021, .110353884155, -2.632012896780, -1.710466734062, -.008551794970]
  global Linea11_B_q=[-3.6247502966617073, -1.585150048761757, 2.2304099707796063, -0.6377871669514974, -4.937393005511421, 0.006400309223622675]
  global Linea12_A_p=p[.624141411120, -.066274166300, .110334660294, -2.632061457031, -1.710628419892, -.008680091079]
  global Linea12_A_q=[-3.576867818672329, -1.5888248455929554, 2.23409769230859, -0.638081681915871, -4.88958008805711, 0.006759858484637715]
  global Linea12_B_p=p[.625005135416, .106664404916, .110180545519, -2.632061469151, -1.710628482598, -.008680127081]
  global Linea12_B_q=[-3.2068887547507323, -1.551909790420524, 2.1974871560020848, -0.638805025446775, -4.519623607927026, 0.009359012311380255]
  global Linea13_A_p=p[.625493298354, .262478777538, .110355483985, -2.632548083396, -1.710921113652, -.010070841951]
  global Linea13_A_q=[-2.896364151370071, -1.4448052024132805, 2.0799552622917368, -0.6290694071523859, -4.209104057924403, 0.011452105368751556]
  global Linea13_B_p=p[.625493296860, .318856578939, .110131630173, -2.632548086986, -1.710921163442, -.010070846484]
  global Linea13_B_q=[-2.7987199569733097, -1.394849229494266, 2.020507255629248, -0.6192929302058419, -4.111456896339345, 0.012194173917594142]
  global Linea14_A_p=p[.625748762392, .343504937265, .110090990642, -2.632595117185, -1.711060508708, -.011002715073]
  global Linea14_A_q=[-2.7589776121724974, -1.371725061704466, 1.991938508379024, -0.614306407879349, -4.0717686455064666, 0.012519321582973785]
  global Linea14_B_p=p[.626022539964, .485152545421, .110593753972, -2.632595124419, -1.711060553733, -.011002727305]
  global Linea14_B_q=[-2.561324434207597, -1.228184115147677, 1.79766140697026, -0.5625917279677406, -3.874049521809336, 0.014268843198803616]
  global Linea15_A_p=p[.626306650398, .508674603028, .110445455669, -2.632595127775, -1.711060613121, -.011002737975]
  global Linea15_A_q=[-2.533508862703878, -1.202261171286347, 1.7605999966793635, -0.55125669711577, -3.846216171124823, 0.014567785906905393]
  global Linea15_B_p=p[.626327608491, .587415564298, .110050045410, -2.632661246672, -1.711049389617, -.010999857798]
  global Linea15_B_q=[-2.4482942280068585, -1.1131828351876312, 1.6277564152308788, -0.5068229975694187, -3.760894753760676, 0.015518000293985423]
  global Linea16_A_p=p[.464714302335, .611413139504, .110697464349, -1.544268383540, -2.732104823202, -.006884184964]
  global Linea16_A_q=[-2.4550359831168613, -1.3587121352385232, 1.9739909556549193, -0.6095013542703764, -4.727784672200272, 0.006868741264362654]
  global Linea16_B_p=p[.487741348141, .611017673565, .110415464036, -1.544268358835, -2.732104854917, -.006884177480]
  global Linea16_B_q=[-2.4794279049425754, -1.3389262434910556, 1.9490984118290324, -0.604365353535707, -4.75217062245783, 0.006734800587170575]
  global Linea17_A_p=p[.517383659268, .611103429132, .110729179233, -1.544779713402, -2.732685367780, -.009945500495]
  global Linea17_A_q=[-2.5082575279683113, -1.3131453182243042, 1.9151753969774692, -0.598283135183288, -4.78088650060061, 0.00668272054728547]
  global Linea17_B_p=p[.569253413106, .610696887479, .110460451666, -1.544779672167, -2.732685417131, -.009945491911]
  global Linea17_B_q=[-2.5549019817458243, -1.2642731579102362, 1.8492778264267276, -0.5811941707445918, -4.827506542897114, 0.006516537786687767]
  global Linea18_A_p=p[.652275282871, .616966070789, .110402012202, -1.544268371887, -2.732104838867, -.006884188160]
  global Linea18_A_q=[-2.6106362750002035, -1.1730578134725853, 1.7176129055392177, -0.5385325271143078, -4.883275143872667, 0.005979356975084116]
  global Linea18_AB_p=p[.883614943259, .616349563116, .110351134256, -1.544268345639, -2.732104870876, -.006884192709]
  global Linea18_AB_q=[-2.7386992398245744, -0.9017900558849279, 1.281606576558123, -0.3734626609773617, -5.010988146234565, 0.005130637771908034]
  global Linea18_BA_p=p[.909904961943, .616222280799, .110421447666, -1.544268322161, -2.732104902209, -.006884182125]
  global Linea18_BA_q=[-2.7498726987223208, -0.8660697617883866, 1.2197485096371476, -0.3472882558118906, -5.02209865790525, 0.005047885057257062]
  global Linea18_B_p=p[1.141235285063, .615792039333, .110307833561, -1.544268303833, -2.732104945128, -.006884144817]
  global Linea18_B_q=[-2.8277732907081354, -0.39061700846990277, 0.32871463965525227, 0.06857809871196263, -5.098826528836324, 0.004459377539679431]
  global Linea3_A_p=p[.464230833806, -.387159783178, .110302837424, -2.419116994491, -2.002063214725, -.010924024823]
  global Linea3_A_q=[-4.3910163833731914, -1.555782586510814, 2.202005657326122, -0.6299721466298944, -5.933748291401908, -0.006546668033756475]
  global Linea3_B_p=p[.667429999599, -.387164709724, .110463996486, -2.419112960004, -2.002099447112, -.010918294544]
  global Linea3_B_q=[-4.057680660838788, -1.323350209478841, 1.9290195916743436, -0.5973157418827517, -5.6004464441758355, 0.0019643644184652587]
  global Linea3_C_p=p[.692830001733, -.387650681328, .110109359717, -2.419059878647, -2.002159205155, -.010925286677]
  global Linea3_C_q=[-4.026535686604552, -1.2922202748569482, 1.8881224565782944, -0.5878969018347195, -5.569340867091353, 0.002380584369406691]
  global Linea3_D_p=p[.896029998777, -.387852804805, .110196889251, -2.419080439535, -2.002173420011, -.010934520449]
  global Linea3_D_q=[-3.829265965876175, -1.0382006055234712, 1.5094078253308432, -0.4647896797065121, -5.371850161314754, 0.004346050949126656]
  global Linea3_E_p=p[.921429998459, -.388319341203, .110580746835, -2.419087749766, -2.002201874505, -.010952866993]
  global Linea3_E_q=[-3.8105196931013556, -1.0042069202420114, 1.4534307338800188, -0.442942131267305, -5.3530686968067505, 0.004496004728317427]
  global Linea3_F_p=p[1.124629998567, -.388399736062, .110402465879, -2.419125348681, -2.002211693637, -.010968628578]
  global Linea3_F_q=[-3.686825535686765, -0.6866169613755719, 0.8978925546882044, -0.20560612623027819, -5.228777140850181, 0.005303851178450003]
  global Linea4_A_p=p[.464979976316, .017836773167, .110310404991, -2.448457836899, -1.966199895061, -.011076466632]
  global Linea4_A_q=[-3.6529867765693265, -1.9452905946133079, 2.501674762544585, -0.5506678388692903, -5.165918169719263, 0.005229115013293928]
  global Linea4_B_p=p[.668170000037, .017833792943, .110301370691, -2.448481013042, -1.966150615318, -.011068565459]
  global Linea4_B_q=[-3.4381583087354946, -1.5218818556667548, 2.1666255386489652, -0.6398943768365513, -4.9513971286391545, 0.00694330599646038]
  global Linea4_C_p=p[.693569999371, .018136934193, .110396766029, -2.448555603805, -1.966143161170, -.011081417994]
  global Linea4_C_q=[-3.4230261654246217, -1.4801703680484923, 2.12081541771418, -0.6358791842300828, -4.9362363497913835, 0.007021482749777874]
  global Linea4_D_p=p[.896769999275, .017310642274, .110305174457, -2.448571849199, -1.966119022896, -.011066680754]
  global Linea4_D_q=[-3.3451971602477997, -1.174492939736922, 1.7203661334209173, -0.541265722112624, -4.858269381434981, 0.007475731853766376]
  global Linea4_E_p=p[.922169999701, .017310244028, .110356528892, -2.448641417951, -1.966134840023, -.011114602385]
  global Linea4_E_q=[-3.338321082289934, -1.1376526551075221, 1.6649290062563085, -0.5227466706314932, -4.8513393849974475, 0.0074892124034669355]
  global Linea4_F_p=p[1.125369999206, .017258611272, .110276213649, -2.448642075535, -1.966106276713, -.011053663852]
  global Linea4_F_q=[-3.296678674914709, -0.823269689152891, 1.1453259230712316, -0.31754572368232736, -4.809226384426388, 0.007609882209201224]
  global Linea19_A_p=p[.459500483192, -.521966359264, .110287307573, 2.444310209774, 1.962895565264, .013982840383]
  global Linea19_A_q=[-4.471273749261577, -1.392054727345812, 2.0194079671963188, -0.631880630087049, -5.984536630474428, 0.008512064870961566]
  global Linea19_B_p=p[.483360000235, -.521950949871, .110282315610, 2.444325023128, 1.962902223119, .013994776933]
  global Linea19_B_q=[-4.431418332577646, -1.3728259473858282, 1.9954261647225349, -0.6266575038166051, -5.944674315997971, 0.007991292980141475]
  global Linea20_A_p=p[.513036034860, -.521545431794, .110268231563, 2.444009364395, 1.962577422245, .013682365965]
  global Linea20_A_q=[-4.3834965789724585, -1.3484805306961114, 1.9644732931448647, -0.6200502308609375, -5.896708193899019, 0.007411715416055564]
  global Linea20_B_p=p[.564367225862, -.521477319483, .110373765560, 2.444016038345, 1.962504003089, .013643134348]
  global Linea20_B_q=[-4.3058887078080375, -1.3027271523559243, 1.9039833103281723, -0.6047911467897613, -5.819042462186221, 0.0066992366938736225]
  global Linea22_A_p=p[.620834960282, -.492247478559, .110497141865, 2.443672554456, 1.961786926726, .013351573251]
  global Linea22_A_q=[-4.206755740765137, -1.2804659183319655, 1.8736182491376765, -0.5968641932902443, -5.719676086958917, 0.005935095196567525]
  global Linea22_B_p=p[.620833404792, -.466079999734, .110459690156, 2.443722512690, 1.961793090207, .013354519254]
  global Linea22_B_q=[-4.1866126282627825, -1.3077962244491328, 1.9107030191507974, -0.6064669786035877, -5.699529941145465, 0.005780495013403351]
  global Linea23_A_p=p[.621024526563, -.312761557524, .110089939756, 2.443246126125, 1.961395760010, .013163762842]
  global Linea23_A_q=[-4.036926680747516, -1.4547656269869815, 2.0950717331465434, -0.6438091569554754, -5.5498710282044215, 0.004712934754347309]
  global Linea23_B_p=p[.621018358815, -.264150000183, .110084555763, 2.443270526968, 1.961384280882, .013190437581]
  global Linea23_B_q=[-3.9759151346568355, -1.4950906707753084, 2.140588135264717, -0.6488316844199273, -5.488842649275668, 0.0044022199091813975]
  global Linea24_A_p=p[.621098439622, -.240775675200, .110574395502, 2.442915738284, 1.960990434209, .013229551219]
  global Linea24_A_q=[-3.943688610074833, -1.5136152224729447, 2.1598199021528064, -0.6499650281649636, -5.456556883931132, 0.004208571162668064]
  global Linea24_B_p=p[.621118179566, -.130050000223, .110593596533, 2.442940887576, 1.960970321451, .013243383298]
  global Linea24_B_q=[-3.7657146588007127, -1.5803190255179214, 2.228636133114988, -0.6517531716906797, -5.2785469770071005, 0.0033512703841079025]
  global Linea25_A_p=p[.621437015783, -.106982911313, .110365967551, 2.442654836858, 1.960739689231, .013433900484]
  global Linea25_A_q=[-3.7228620416933285, -1.5889924294860043, 2.2377643530667757, -0.6525555528636033, -5.235691478214098, 0.0031786304463132424]
  global Linea25_B_p=p[.621448492153, -.058220000048, .110378145190, 2.442603922060, 1.960750387302, .013453779592]
  global Linea25_B_q=[-3.6275781962436264, -1.6026393687452547, 2.2509404516858775, -0.6520428035114243, -5.140428502414784, 0.0027627020952146345]
  global Linea26_A_p=p[.619159227850, .096338884870, .110740941987, .899978624169, 3.001630062312, .019199733645]
  global Linea26_A_q=[-3.5390754743527815, -1.4787706815615067, 2.123788189423017, -0.778642028497547, -6.257990636071562, 0.1308097629133993]
  global Linea26_B_p=p[.619176001176, .121859999719, .110738192265, .900005863428, 3.001632041634, .019205064751]
  global Linea26_B_q=[-3.4941546104866616, -1.4665413577991107, 2.1079108634834878, -0.6895245612943697, -6.213138821490713, 0.04522556275457999]
  global Linea27_A_p=p[.619470388681, .145721512233, .110285520947, .899984863397, 3.001101158686, .019169741261]
  global Linea27_A_q=[-3.4511962546946826, -1.4630482655533044, 2.104742069163123, -0.6720639641347148, -6.17011399581671, 0.026805913560317585]
  global Linea27_B_p=p[.619467972926, .310059999998, .110284525077, .899976853464, 3.001034446604, .019158185330]
  global Linea27_B_q=[-3.1499341209632474, -1.4192801482839945, 2.053305987085655, -0.6428059491629234, -5.868866145482653, 0.004292910361343351]
  global Linea28_B_p=p[.619758029730, .342258392106, .110153188185, .899916349228, 3.000597837149, .019434917209]
  global Linea28_B_q=[-3.0923901875970277, -1.402935932194037, 2.0338680097589563, -0.6392981617522118, -5.811277262215688, 0.0032495578488829224]
  global Precam_bro1_p=p[.656076269686, .067103652830, .801529194085, 2.333752758408, 2.077660178403, .030474428127]
  global Precam_bro1_q=[-3.3770460833376266, -1.5485738802438487, 0.9024271451168131, 0.6289852346296929, -4.989016163426699, 0.005603611084501629]
  global Precam_bro2_p=p[-.210318050744, .625064228220, .801529194085, .167219476409, -3.132160268904, -.039745099994]
  global Precam_bro2_q=[-1.5836008221808306, -1.5485738802438487, 0.9024271451168131, 0.6289852346296929, -4.989016163426699, 0.005603611084501629]
  global Dejar_broca_p=p[.000823895285, .461515686418, .010824983886, -.221812507768, -3.131977618886, .000372128741]
  global Dejar_broca_q=[-2.183487269545523, -1.7626289818446779, 2.619089631151862, -0.8448915610823917, -5.34389996121201, -0.0023222697552238714]
  def Quitar_broca():
    $ 5334 "Quitar_broca" "noBreak"
    $ 5335 "Quitar_broca"
    $ 5336 "barrenos_hechos≔barrenos_hechos+1"
    global barrenos_hechos=barrenos_hechos+1
    $ 5341 "If barrenos_hechos≟14 or cambiar_broca≟ True "
    if (barrenos_hechos == 14  or  cambiar_broca ==   True  ):
      $ 5342 "'Codigo de quitar broca'"
      # 'Codigo de quitar broca'
      $ 5343 "MoveL"
      $ 5344 "Direction: Base Z+"
      global move_thread_flag_5344=0
      thread move_thread_5344():
        enter_critical
        move_thread_flag_5344 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.1)
        movel(towardsPos, a=1.2, v=0.25)
        move_thread_flag_5344 = 2
        exit_critical
      end
      move_thread_flag_5344 = 0
      move_thread_han_5344 = run move_thread_5344()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_5344 > 1):
          join move_thread_han_5344
          $ 5345 "Until (distance)"
          break
        end
        sync()
      end
      $ 5346 "If eje7≟3"
      if (eje7 == 3):
        $ 5347 "Home3" "breakAfter"
        movel(Home3_p, a=1.2, v=0.25)
        $ 5348 "Precam_bro1" "breakAfter"
        movel(Precam_bro1_p, a=1.2, v=0.25)
        $ 5349 "Precam_bro2" "breakAfter"
        movel(Precam_bro2_p, a=1.2, v=0.25)
      end
      $ 5350 "If eje7≟2"
      if (eje7 == 2):
        $ 5351 "Home2" "breakAfter"
        movel(Home2_p, a=1.2, v=0.25)
      end
      $ 5353 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=1.2, v=0.25)
      $ 5354 "Dejar_broca" "breakAfter"
      movel(Dejar_broca_p, a=0.1, v=0.09)
      $ 5355 "Set outputbroc_m291=Encender"
      modbus_set_output_signal("outputbroc_m291", True)
      $ 5356 "Wait: 2.0"
      sleep(2.0)
      $ 5358 "Wait: 2.0"
      sleep(2.0)
      $ 5359 "Set outputbroc_m291=Apagar"
      modbus_set_output_signal("outputbroc_m291", False)
      $ 5360 "Wait: 0.5"
      sleep(0.5)
      $ 5361 "Wait fciclocarr_m292=LO"
      while (modbus_get_signal_status("fciclocarr_m292") == True):
        sync()
      end
      $ 5362 "Wait: 0.5"
      sleep(0.5)
      $ 5364 "MoveL"
      $ 5365 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=0.1, v=0.09)
      $ 5366 "Set avancarrusel_m7=Encender"
      modbus_set_output_signal("avancarrusel_m7", True)
      $ 5367 "Wait: 1.0"
      sleep(1.0)
      $ 5368 "Wait: 0.1"
      sleep(0.1)
    end
  end
  def Poner_broca():
    $ 5369 "Poner_broca" "noBreak"
    $ 5370 "Poner_broca"
    $ 5371 "If cambiar_broca≟ True  or iniciando_prog≟ True "
    if (cambiar_broca ==   True    or  iniciando_prog ==   True  ):
      $ 5372 "'Codigo de poner broca'"
      # 'Codigo de poner broca'
      $ 5373 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 5374 "MoveL"
      $ 5375 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=1.2, v=0.25)
      $ 5376 "Popup: Cambia a las siguientes brocas"
      popup("Cambia a las siguientes brocas", "Advertencia", True, False, blocking=True)
      $ 5377 "Dejar_broca" "breakAfter"
      movel(Dejar_broca_p, a=0.1, v=0.09)
      $ 5378 "Set ini_cambro_m289=Encender"
      modbus_set_output_signal("ini_cambro_m289", True)
      $ 5379 "Wait: 2.0"
      sleep(2.0)
      $ 5381 "Wait: 2.0"
      sleep(2.0)
      $ 5382 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 5383 "Wait: 0.5"
      sleep(0.5)
      $ 5384 "Wait fciclocarr_m292=LO"
      while (modbus_get_signal_status("fciclocarr_m292") == True):
        sync()
      end
      $ 5385 "Wait: 0.5"
      sleep(0.5)
      $ 5387 "MoveL"
      $ 5388 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=0.1, v=0.09)
      $ 5389 "If eje7≟3"
      if (eje7 == 3):
        $ 5390 "Precam_bro2" "breakAfter"
        movel(Precam_bro2_p, a=1.2, v=0.25)
        $ 5391 "Precam_bro1" "breakAfter"
        movel(Precam_bro1_p, a=1.2, v=0.25)
        $ 5392 "Home3" "breakAfter"
        movel(Home3_p, a=1.2, v=0.25)
      end
      $ 5393 "If eje7≟2"
      if (eje7 == 2):
        $ 5395 "Home2" "breakAfter"
        movel(Home2_p, a=1.2, v=0.25)
      end
      $ 5396 "barrenos_hechos≔0"
      global barrenos_hechos=0
      $ 5397 "iniciando_prog≔ False "
      global iniciando_prog=  False  
      $ 5398 "cambiar_broca≔ False "
      global cambiar_broca=  False  
    end
    $ 5399 "If barrenos_hechos≟14"
    if (barrenos_hechos == 14):
      $ 5400 "If cambiar_broca≟ False "
      if (cambiar_broca ==   False  ):
        $ 5401 "'Codigo de poner broca'"
        # 'Codigo de poner broca'
        $ 5402 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5403 "MoveL"
        $ 5404 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=1.2, v=0.25)
        $ 5405 "Dejar_broca" "breakAfter"
        movel(Dejar_broca_p, a=0.1, v=0.09)
        $ 5406 "Set ini_cambro_m289=Encender"
        modbus_set_output_signal("ini_cambro_m289", True)
        $ 5407 "Wait: 2.0"
        sleep(2.0)
        $ 5409 "Wait: 2.0"
        sleep(2.0)
        $ 5410 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5411 "Wait: 0.5"
        sleep(0.5)
        $ 5412 "Wait fciclocarr_m292=LO"
        while (modbus_get_signal_status("fciclocarr_m292") == True):
          sync()
        end
        $ 5413 "Wait: 0.5"
        sleep(0.5)
        $ 5415 "MoveL"
        $ 5416 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=0.1, v=0.09)
        $ 5417 "If eje7≟3"
        if (eje7 == 3):
          $ 5418 "Precam_bro2" "breakAfter"
          movel(Precam_bro2_p, a=1.2, v=0.25)
          $ 5419 "Precam_bro1" "breakAfter"
          movel(Precam_bro1_p, a=1.2, v=0.25)
          $ 5420 "Home3" "breakAfter"
          movel(Home3_p, a=1.2, v=0.25)
        end
        $ 5421 "If eje7≟2"
        if (eje7 == 2):
          $ 5423 "Home2" "breakAfter"
          movel(Home2_p, a=1.2, v=0.25)
        end
        $ 5424 "barrenos_hechos≔0"
        global barrenos_hechos=0
      else:
        $ 5425 "Else" "noBreak"
        $ 5426 "'Codigo de poner broca'"
        # 'Codigo de poner broca'
        $ 5427 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5428 "MoveL"
        $ 5429 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=1.2, v=0.25)
        $ 5430 "Popup: Cambia a las siguientes brocas"
        popup("Cambia a las siguientes brocas", "Advertencia", True, False, blocking=True)
        $ 5431 "Dejar_broca" "breakAfter"
        movel(Dejar_broca_p, a=0.1, v=0.09)
        $ 5432 "Set ini_cambro_m289=Encender"
        modbus_set_output_signal("ini_cambro_m289", True)
        $ 5433 "Wait: 2.0"
        sleep(2.0)
        $ 5435 "Wait: 2.0"
        sleep(2.0)
        $ 5436 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5437 "Wait: 0.5"
        sleep(0.5)
        $ 5438 "Wait fciclocarr_m292=LO"
        while (modbus_get_signal_status("fciclocarr_m292") == True):
          sync()
        end
        $ 5439 "Wait: 0.5"
        sleep(0.5)
        $ 5441 "MoveL"
        $ 5442 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=0.1, v=0.09)
        $ 5443 "If eje7≟3"
        if (eje7 == 3):
          $ 5444 "Precam_bro2" "breakAfter"
          movel(Precam_bro2_p, a=1.2, v=0.25)
          $ 5445 "Precam_bro1" "breakAfter"
          movel(Precam_bro1_p, a=1.2, v=0.25)
          $ 5446 "Home3" "breakAfter"
          movel(Home3_p, a=1.2, v=0.25)
        end
        $ 5447 "If eje7≟2"
        if (eje7 == 2):
          $ 5449 "Home2" "breakAfter"
          movel(Home2_p, a=1.2, v=0.25)
        end
        $ 5450 "barrenos_hechos≔0"
        global barrenos_hechos=0
        $ 5451 "iniciando_prog≔ False "
        global iniciando_prog=  False  
        $ 5452 "cambiar_broca≔ False "
        global cambiar_broca=  False  
        $ 5453 "Force"
        sleep(0.02)
        zero_ftsensor()
        force_mode(tool_pose(), [0, 0, 1, 0, 0, 0], [0.0, 1.0, 220.0, 0.0, 0.0, 0.0], 2, [0.1, 0.1, 0.15, 0.3490658503988659, 0.3490658503988659, 0.3490658503988659])
        $ 5454 "MoveL" "noBreak"
        $ 5455 "Direction: Base Z-" "noBreak"
        global move_thread_flag_5455=0
        thread move_thread_5455():
          enter_critical
          move_thread_flag_5455 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.024)
          movel(towardsPos, a=1.2, v=0.25)
          move_thread_flag_5455 = 2
          exit_critical
        end
        move_thread_flag_5455 = 0
        move_thread_han_5455 = run move_thread_5455()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_5455 > 1):
            join move_thread_han_5455
            $ 5456 "Until (distance)" "noBreak"
            break
          end
          sync()
        end
        end_force_mode()
        stopl(5.0)
      end
    end
  end
  while (True):
    $ 1 "Robot Program"
    $ 2 "Variables"
    $ 3 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4 "barrenos_menos1≔0"
    global barrenos_menos1=0
    $ 5 "barreno_actual≔0"
    global barreno_actual=0
    $ 6 "posicion≔p[0,0,300,0,0,0]"
    global posicion=p[0,0,300,0,0,0]
    $ 7 "cambiar_broca≔ False "
    global cambiar_broca=  False  
    $ 8 "barrenos_hechos≔0"
    global barrenos_hechos=0
    $ 9 "eje7≔0"
    global eje7=0
    $ 10 "Wait: 0.5"
    sleep(0.5)
    $ 11 "Home"
    $ 12 "Wait: 0.3"
    sleep(0.3)
    $ 13 "MoveL"
    $ 14 "Traslacion" "breakAfter"
    movel(Traslacion_p, a=1.2, v=0.25)
    $ 15 "Home2" "breakAfter"
    movel(Home2_p, a=1.2, v=0.25)
    $ 16 "Home3" "breakAfter"
    movel(Home3_p, a=1.2, v=0.25)
    $ 17 "Home4" "breakAfter"
    movel(Home4_p, a=1.2, v=0.25)
    $ 18 "PosicionApagado" "breakAfter"
    movel(PosicionApagado_p, a=1.2, v=0.25)
    $ 19 "Precambio_broca" "breakAfter"
    movel(Precambio_broca_p, a=1.2, v=0.25)
    $ 20 "Home"
    movej([-2.5890958934427104, -1.990702925865989, 2.190075797821148, -0.17834602565650215, -5.748178516127443, -0.01395064457738826], a=1.3962634015954636, v=1.0471975511965976)
    $ 23 "Wait: 0.3"
    sleep(0.3)
    $ 24 "iniciando_prog≔ True "
    global iniciando_prog=  True  
    $ 25 "Call Poner_broca"
    Poner_broca()
    $ 26 "Posicion2"
    $ 27 "Inicio"
    $ 28 "eje7≔2"
    global eje7=2
    $ 29 "MoveL"
    $ 30 "Home2" "breakAfter"
    movel(Home2_p, a=1.2, v=0.25)
    $ 31 "SeatTracks"
    $ 32 "Broca_1"
    $ 33 "Linea1"
    $ 34 "Marcar_puntos"
    $ 35 "MoveL"
    $ 36 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 37 "Linea1_A" "breakAfter"
    movel(Linea1_A_p, a=0.5, v=0.1)
    $ 38 "Linea1_B" "breakAfter"
    movel(Linea1_B_p, a=0.5, v=0.1)
    $ 39 "Linea1_C" "breakAfter"
    movel(Linea1_C_p, a=0.5, v=0.1)
    $ 40 "Linea1_D" "breakAfter"
    movel(Linea1_D_p, a=0.5, v=0.1)
    $ 41 "Linea1_E" "breakAfter"
    movel(Linea1_E_p, a=0.5, v=0.1)
    $ 42 "Linea1_F" "breakAfter"
    movel(Linea1_F_p, a=0.5, v=0.1)
    $ 43 "AB"
    $ 44 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 45 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 46 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 47 "barreno_actual≔0"
    global barreno_actual=0
    $ 48 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 49 "Perforacion"
      $ 50 "MoveL"
      $ 51 "internos≔interpolate_pose(Linea1_A, Linea1_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_A_p, Linea1_B_p, barreno_actual/barrenos_menos1)
      $ 52 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 53 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 54 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 55 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 56 "Direction: Base Z-"
      global move_thread_flag_56=0
      thread move_thread_56():
        enter_critical
        move_thread_flag_56 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_56 = 2
        exit_critical
      end
      move_thread_flag_56 = 0
      move_thread_han_56 = run move_thread_56()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_56 > 1):
          join move_thread_han_56
          $ 57 "Until (distance)"
          break
        end
        sync()
      end
      $ 58 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 59 "Direction: Base Z+"
      global move_thread_flag_59=0
      thread move_thread_59():
        enter_critical
        move_thread_flag_59 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_59 = 2
        exit_critical
      end
      move_thread_flag_59 = 0
      move_thread_han_59 = run move_thread_59()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_59 > 1):
          join move_thread_han_59
          $ 60 "Until (distance)"
          break
        end
        sync()
      end
      $ 61 "Wait: 0.3"
      sleep(0.3)
      $ 62 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 63 "Wait: 0.3"
      sleep(0.3)
      $ 64 "Loop 3 times"
      Loop_39 = 0
      while (Loop_39 < 3):
        $ 65 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 66 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 67 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 68 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 69 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_39 = Loop_39 + 1
      end
      $ 70 "Direction: Base Z+"
      global move_thread_flag_70=0
      thread move_thread_70():
        enter_critical
        move_thread_flag_70 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_70 = 2
        exit_critical
      end
      move_thread_flag_70 = 0
      move_thread_han_70 = run move_thread_70()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_70 > 1):
          join move_thread_han_70
          $ 71 "Until (distance)"
          break
        end
        sync()
      end
      $ 72 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 73 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 76 "CD"
    $ 77 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 78 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 79 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 80 "barreno_actual≔0"
    global barreno_actual=0
    $ 81 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 82 "Perforacion"
      $ 83 "MoveL"
      $ 84 "internos≔interpolate_pose(Linea1_C, Linea1_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_C_p, Linea1_D_p, barreno_actual/barrenos_menos1)
      $ 85 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 86 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 87 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 88 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 89 "Direction: Base Z-"
      global move_thread_flag_89=0
      thread move_thread_89():
        enter_critical
        move_thread_flag_89 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_89 = 2
        exit_critical
      end
      move_thread_flag_89 = 0
      move_thread_han_89 = run move_thread_89()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_89 > 1):
          join move_thread_han_89
          $ 90 "Until (distance)"
          break
        end
        sync()
      end
      $ 91 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 92 "Direction: Base Z+"
      global move_thread_flag_92=0
      thread move_thread_92():
        enter_critical
        move_thread_flag_92 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_92 = 2
        exit_critical
      end
      move_thread_flag_92 = 0
      move_thread_han_92 = run move_thread_92()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_92 > 1):
          join move_thread_han_92
          $ 93 "Until (distance)"
          break
        end
        sync()
      end
      $ 94 "Wait: 0.3"
      sleep(0.3)
      $ 95 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 96 "Wait: 0.3"
      sleep(0.3)
      $ 97 "Loop 3 times"
      Loop_56 = 0
      while (Loop_56 < 3):
        $ 98 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 99 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 100 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 101 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 102 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_56 = Loop_56 + 1
      end
      $ 103 "Direction: Base Z+"
      global move_thread_flag_103=0
      thread move_thread_103():
        enter_critical
        move_thread_flag_103 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_103 = 2
        exit_critical
      end
      move_thread_flag_103 = 0
      move_thread_han_103 = run move_thread_103()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_103 > 1):
          join move_thread_han_103
          $ 104 "Until (distance)"
          break
        end
        sync()
      end
      $ 105 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 106 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 109 "EF"
    $ 110 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 111 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 112 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 113 "barreno_actual≔0"
    global barreno_actual=0
    $ 114 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 115 "Perforacion"
      $ 116 "MoveL"
      $ 117 "internos≔interpolate_pose(Linea1_E, Linea1_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_E_p, Linea1_F_p, barreno_actual/barrenos_menos1)
      $ 118 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 119 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 120 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 121 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 122 "Direction: Base Z-"
      global move_thread_flag_122=0
      thread move_thread_122():
        enter_critical
        move_thread_flag_122 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_122 = 2
        exit_critical
      end
      move_thread_flag_122 = 0
      move_thread_han_122 = run move_thread_122()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_122 > 1):
          join move_thread_han_122
          $ 123 "Until (distance)"
          break
        end
        sync()
      end
      $ 124 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 125 "Direction: Base Z+"
      global move_thread_flag_125=0
      thread move_thread_125():
        enter_critical
        move_thread_flag_125 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_125 = 2
        exit_critical
      end
      move_thread_flag_125 = 0
      move_thread_han_125 = run move_thread_125()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_125 > 1):
          join move_thread_han_125
          $ 126 "Until (distance)"
          break
        end
        sync()
      end
      $ 127 "Wait: 0.3"
      sleep(0.3)
      $ 128 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 129 "Wait: 0.3"
      sleep(0.3)
      $ 130 "Loop 3 times"
      Loop_61 = 0
      while (Loop_61 < 3):
        $ 131 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 132 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 133 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 134 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 135 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_61 = Loop_61 + 1
      end
      $ 136 "Direction: Base Z+"
      global move_thread_flag_136=0
      thread move_thread_136():
        enter_critical
        move_thread_flag_136 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_136 = 2
        exit_critical
      end
      move_thread_flag_136 = 0
      move_thread_han_136 = run move_thread_136()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_136 > 1):
          join move_thread_han_136
          $ 137 "Until (distance)"
          break
        end
        sync()
      end
      $ 138 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 139 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 142 "Popup: Linea1 con chica Terminada!"
    popup("Linea1 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 143 "Linea2"
    $ 144 "Marcar_puntos"
    $ 145 "MoveL"
    $ 146 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 147 "Linea2_A" "breakAfter"
    movel(Linea2_A_p, a=0.5, v=0.1)
    $ 148 "Linea2_B" "breakAfter"
    movel(Linea2_B_p, a=0.5, v=0.1)
    $ 149 "Linea2_C" "breakAfter"
    movel(Linea2_C_p, a=0.5, v=0.1)
    $ 150 "Linea2_D" "breakAfter"
    movel(Linea2_D_p, a=0.5, v=0.1)
    $ 151 "Linea2_E" "breakAfter"
    movel(Linea2_E_p, a=0.5, v=0.1)
    $ 152 "Linea2_F" "breakAfter"
    movel(Linea2_F_p, a=0.5, v=0.1)
    $ 153 "AB"
    $ 154 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 155 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 156 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 157 "barreno_actual≔0"
    global barreno_actual=0
    $ 158 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 159 "Perforacion"
      $ 160 "MoveL"
      $ 161 "internos≔interpolate_pose(Linea2_A, Linea2_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_A_p, Linea2_B_p, barreno_actual/barrenos_menos1)
      $ 162 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 163 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 164 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 165 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 166 "Direction: Base Z-"
      global move_thread_flag_166=0
      thread move_thread_166():
        enter_critical
        move_thread_flag_166 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_166 = 2
        exit_critical
      end
      move_thread_flag_166 = 0
      move_thread_han_166 = run move_thread_166()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_166 > 1):
          join move_thread_han_166
          $ 167 "Until (distance)"
          break
        end
        sync()
      end
      $ 168 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 169 "Direction: Base Z+"
      global move_thread_flag_169=0
      thread move_thread_169():
        enter_critical
        move_thread_flag_169 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_169 = 2
        exit_critical
      end
      move_thread_flag_169 = 0
      move_thread_han_169 = run move_thread_169()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_169 > 1):
          join move_thread_han_169
          $ 170 "Until (distance)"
          break
        end
        sync()
      end
      $ 171 "Wait: 0.3"
      sleep(0.3)
      $ 172 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 173 "Wait: 0.3"
      sleep(0.3)
      $ 174 "Loop 3 times"
      Loop_63 = 0
      while (Loop_63 < 3):
        $ 175 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 176 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 177 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 178 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 179 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_63 = Loop_63 + 1
      end
      $ 180 "Direction: Base Z+"
      global move_thread_flag_180=0
      thread move_thread_180():
        enter_critical
        move_thread_flag_180 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_180 = 2
        exit_critical
      end
      move_thread_flag_180 = 0
      move_thread_han_180 = run move_thread_180()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_180 > 1):
          join move_thread_han_180
          $ 181 "Until (distance)"
          break
        end
        sync()
      end
      $ 182 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 183 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 186 "CD"
    $ 187 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 188 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 189 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 190 "barreno_actual≔0"
    global barreno_actual=0
    $ 191 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 192 "Perforacion"
      $ 193 "MoveL"
      $ 194 "internos≔interpolate_pose(Linea2_C, Linea2_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_C_p, Linea2_D_p, barreno_actual/barrenos_menos1)
      $ 195 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 196 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 197 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 198 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 199 "Direction: Base Z-"
      global move_thread_flag_199=0
      thread move_thread_199():
        enter_critical
        move_thread_flag_199 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_199 = 2
        exit_critical
      end
      move_thread_flag_199 = 0
      move_thread_han_199 = run move_thread_199()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_199 > 1):
          join move_thread_han_199
          $ 200 "Until (distance)"
          break
        end
        sync()
      end
      $ 201 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 202 "Direction: Base Z+"
      global move_thread_flag_202=0
      thread move_thread_202():
        enter_critical
        move_thread_flag_202 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_202 = 2
        exit_critical
      end
      move_thread_flag_202 = 0
      move_thread_han_202 = run move_thread_202()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_202 > 1):
          join move_thread_han_202
          $ 203 "Until (distance)"
          break
        end
        sync()
      end
      $ 204 "Wait: 0.3"
      sleep(0.3)
      $ 205 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 206 "Wait: 0.3"
      sleep(0.3)
      $ 207 "Loop 3 times"
      Loop_65 = 0
      while (Loop_65 < 3):
        $ 208 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 209 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 210 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 211 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 212 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_65 = Loop_65 + 1
      end
      $ 213 "Direction: Base Z+"
      global move_thread_flag_213=0
      thread move_thread_213():
        enter_critical
        move_thread_flag_213 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_213 = 2
        exit_critical
      end
      move_thread_flag_213 = 0
      move_thread_han_213 = run move_thread_213()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_213 > 1):
          join move_thread_han_213
          $ 214 "Until (distance)"
          break
        end
        sync()
      end
      $ 215 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 216 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 219 "EF"
    $ 220 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 221 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 222 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 223 "barreno_actual≔0"
    global barreno_actual=0
    $ 224 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 225 "Perforacion"
      $ 226 "MoveL"
      $ 227 "internos≔interpolate_pose(Linea2_E, Linea2_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_E_p, Linea2_F_p, barreno_actual/barrenos_menos1)
      $ 228 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 229 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 230 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 231 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 232 "Direction: Base Z-"
      global move_thread_flag_232=0
      thread move_thread_232():
        enter_critical
        move_thread_flag_232 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_232 = 2
        exit_critical
      end
      move_thread_flag_232 = 0
      move_thread_han_232 = run move_thread_232()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_232 > 1):
          join move_thread_han_232
          $ 233 "Until (distance)"
          break
        end
        sync()
      end
      $ 234 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 235 "Direction: Base Z+"
      global move_thread_flag_235=0
      thread move_thread_235():
        enter_critical
        move_thread_flag_235 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_235 = 2
        exit_critical
      end
      move_thread_flag_235 = 0
      move_thread_han_235 = run move_thread_235()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_235 > 1):
          join move_thread_han_235
          $ 236 "Until (distance)"
          break
        end
        sync()
      end
      $ 237 "Wait: 0.3"
      sleep(0.3)
      $ 238 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 239 "Wait: 0.3"
      sleep(0.3)
      $ 240 "Loop 3 times"
      Loop_67 = 0
      while (Loop_67 < 3):
        $ 241 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 242 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 243 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 244 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 245 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_67 = Loop_67 + 1
      end
      $ 246 "Direction: Base Z+"
      global move_thread_flag_246=0
      thread move_thread_246():
        enter_critical
        move_thread_flag_246 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_246 = 2
        exit_critical
      end
      move_thread_flag_246 = 0
      move_thread_han_246 = run move_thread_246()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_246 > 1):
          join move_thread_han_246
          $ 247 "Until (distance)"
          break
        end
        sync()
      end
      $ 248 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 249 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 250 "If barreno_actual≥barrenos_menos1"
      if (barreno_actual >= barrenos_menos1):
        $ 251 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
    end
    $ 254 "Popup: Linea2 con chica Terminada!"
    popup("Linea2 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 255 "Broca_2"
    $ 256 "Linea1"
    $ 257 "Marcar_puntos"
    $ 258 "MoveL"
    $ 259 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 260 "Linea1_A" "breakAfter"
    movel(Linea1_A_p, a=0.5, v=0.1)
    $ 261 "Linea1_B" "breakAfter"
    movel(Linea1_B_p, a=0.5, v=0.1)
    $ 262 "Linea1_C" "breakAfter"
    movel(Linea1_C_p, a=0.5, v=0.1)
    $ 263 "Linea1_D" "breakAfter"
    movel(Linea1_D_p, a=0.5, v=0.1)
    $ 264 "Linea1_E" "breakAfter"
    movel(Linea1_E_p, a=0.5, v=0.1)
    $ 265 "Linea1_F" "breakAfter"
    movel(Linea1_F_p, a=0.5, v=0.1)
    $ 266 "AB"
    $ 267 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 268 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 269 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 270 "barreno_actual≔0"
    global barreno_actual=0
    $ 271 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 272 "Perforacion"
      $ 273 "MoveL"
      $ 274 "internos≔interpolate_pose(Linea1_A, Linea1_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_A_p, Linea1_B_p, barreno_actual/barrenos_menos1)
      $ 275 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 276 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 277 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 278 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 279 "Direction: Base Z-"
      global move_thread_flag_279=0
      thread move_thread_279():
        enter_critical
        move_thread_flag_279 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_279 = 2
        exit_critical
      end
      move_thread_flag_279 = 0
      move_thread_han_279 = run move_thread_279()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_279 > 1):
          join move_thread_han_279
          $ 280 "Until (distance)"
          break
        end
        sync()
      end
      $ 281 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 282 "Direction: Base Z+"
      global move_thread_flag_282=0
      thread move_thread_282():
        enter_critical
        move_thread_flag_282 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_282 = 2
        exit_critical
      end
      move_thread_flag_282 = 0
      move_thread_han_282 = run move_thread_282()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_282 > 1):
          join move_thread_han_282
          $ 283 "Until (distance)"
          break
        end
        sync()
      end
      $ 284 "Wait: 0.3"
      sleep(0.3)
      $ 285 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 286 "Wait: 0.3"
      sleep(0.3)
      $ 287 "Loop 2 times"
      Loop_69 = 0
      while (Loop_69 < 2):
        $ 288 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 289 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 290 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 291 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 292 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_69 = Loop_69 + 1
      end
      $ 293 "Direction: Base Z+"
      global move_thread_flag_293=0
      thread move_thread_293():
        enter_critical
        move_thread_flag_293 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_293 = 2
        exit_critical
      end
      move_thread_flag_293 = 0
      move_thread_han_293 = run move_thread_293()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_293 > 1):
          join move_thread_han_293
          $ 294 "Until (distance)"
          break
        end
        sync()
      end
      $ 295 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 296 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 297 "Call Quitar_broca"
      Quitar_broca()
      $ 298 "Call Poner_broca"
      Poner_broca()
    end
    $ 299 "CD"
    $ 300 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 301 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 302 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 303 "barreno_actual≔0"
    global barreno_actual=0
    $ 304 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 305 "Perforacion"
      $ 306 "MoveL"
      $ 307 "internos≔interpolate_pose(Linea1_C, Linea1_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_C_p, Linea1_D_p, barreno_actual/barrenos_menos1)
      $ 308 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 309 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 310 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 311 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 312 "Direction: Base Z-"
      global move_thread_flag_312=0
      thread move_thread_312():
        enter_critical
        move_thread_flag_312 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_312 = 2
        exit_critical
      end
      move_thread_flag_312 = 0
      move_thread_han_312 = run move_thread_312()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_312 > 1):
          join move_thread_han_312
          $ 313 "Until (distance)"
          break
        end
        sync()
      end
      $ 314 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 315 "Direction: Base Z+"
      global move_thread_flag_315=0
      thread move_thread_315():
        enter_critical
        move_thread_flag_315 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_315 = 2
        exit_critical
      end
      move_thread_flag_315 = 0
      move_thread_han_315 = run move_thread_315()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_315 > 1):
          join move_thread_han_315
          $ 316 "Until (distance)"
          break
        end
        sync()
      end
      $ 317 "Wait: 0.3"
      sleep(0.3)
      $ 318 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 319 "Wait: 0.3"
      sleep(0.3)
      $ 320 "Loop 2 times"
      Loop_71 = 0
      while (Loop_71 < 2):
        $ 321 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 322 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 323 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 324 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 325 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_71 = Loop_71 + 1
      end
      $ 326 "Direction: Base Z+"
      global move_thread_flag_326=0
      thread move_thread_326():
        enter_critical
        move_thread_flag_326 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_326 = 2
        exit_critical
      end
      move_thread_flag_326 = 0
      move_thread_han_326 = run move_thread_326()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_326 > 1):
          join move_thread_han_326
          $ 327 "Until (distance)"
          break
        end
        sync()
      end
      $ 328 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 329 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 330 "Call Quitar_broca"
      Quitar_broca()
      $ 331 "Call Poner_broca"
      Poner_broca()
    end
    $ 332 "EF"
    $ 333 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 334 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 335 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 336 "barreno_actual≔0"
    global barreno_actual=0
    $ 337 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 338 "Perforacion"
      $ 339 "MoveL"
      $ 340 "internos≔interpolate_pose(Linea1_E, Linea1_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_E_p, Linea1_F_p, barreno_actual/barrenos_menos1)
      $ 341 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 342 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 343 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 344 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 345 "Direction: Base Z-"
      global move_thread_flag_345=0
      thread move_thread_345():
        enter_critical
        move_thread_flag_345 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_345 = 2
        exit_critical
      end
      move_thread_flag_345 = 0
      move_thread_han_345 = run move_thread_345()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_345 > 1):
          join move_thread_han_345
          $ 346 "Until (distance)"
          break
        end
        sync()
      end
      $ 347 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 348 "Direction: Base Z+"
      global move_thread_flag_348=0
      thread move_thread_348():
        enter_critical
        move_thread_flag_348 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_348 = 2
        exit_critical
      end
      move_thread_flag_348 = 0
      move_thread_han_348 = run move_thread_348()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_348 > 1):
          join move_thread_han_348
          $ 349 "Until (distance)"
          break
        end
        sync()
      end
      $ 350 "Wait: 0.3"
      sleep(0.3)
      $ 351 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 352 "Wait: 0.3"
      sleep(0.3)
      $ 353 "Loop 2 times"
      Loop_73 = 0
      while (Loop_73 < 2):
        $ 354 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 355 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 356 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 357 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 358 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_73 = Loop_73 + 1
      end
      $ 359 "Direction: Base Z+"
      global move_thread_flag_359=0
      thread move_thread_359():
        enter_critical
        move_thread_flag_359 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_359 = 2
        exit_critical
      end
      move_thread_flag_359 = 0
      move_thread_han_359 = run move_thread_359()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_359 > 1):
          join move_thread_han_359
          $ 360 "Until (distance)"
          break
        end
        sync()
      end
      $ 361 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 362 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 363 "Call Quitar_broca"
      Quitar_broca()
      $ 364 "Call Poner_broca"
      Poner_broca()
    end
    $ 365 "Popup: Linea1 con media Terminada!"
    popup("Linea1 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 366 "Linea2"
    $ 367 "Marcar_puntos"
    $ 368 "MoveL"
    $ 369 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 370 "Linea2_A" "breakAfter"
    movel(Linea2_A_p, a=0.5, v=0.1)
    $ 371 "Linea2_B" "breakAfter"
    movel(Linea2_B_p, a=0.5, v=0.1)
    $ 372 "Linea2_C" "breakAfter"
    movel(Linea2_C_p, a=0.5, v=0.1)
    $ 373 "Linea2_D" "breakAfter"
    movel(Linea2_D_p, a=0.5, v=0.1)
    $ 374 "Linea2_E" "breakAfter"
    movel(Linea2_E_p, a=0.5, v=0.1)
    $ 375 "Linea2_F" "breakAfter"
    movel(Linea2_F_p, a=0.5, v=0.1)
    $ 376 "AB"
    $ 377 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 378 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 379 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 380 "barreno_actual≔0"
    global barreno_actual=0
    $ 381 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 382 "Perforacion"
      $ 383 "MoveL"
      $ 384 "internos≔interpolate_pose(Linea2_A, Linea2_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_A_p, Linea2_B_p, barreno_actual/barrenos_menos1)
      $ 385 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 386 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 387 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 388 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 389 "Direction: Base Z-"
      global move_thread_flag_389=0
      thread move_thread_389():
        enter_critical
        move_thread_flag_389 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_389 = 2
        exit_critical
      end
      move_thread_flag_389 = 0
      move_thread_han_389 = run move_thread_389()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_389 > 1):
          join move_thread_han_389
          $ 390 "Until (distance)"
          break
        end
        sync()
      end
      $ 391 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 392 "Direction: Base Z+"
      global move_thread_flag_392=0
      thread move_thread_392():
        enter_critical
        move_thread_flag_392 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_392 = 2
        exit_critical
      end
      move_thread_flag_392 = 0
      move_thread_han_392 = run move_thread_392()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_392 > 1):
          join move_thread_han_392
          $ 393 "Until (distance)"
          break
        end
        sync()
      end
      $ 394 "Wait: 0.3"
      sleep(0.3)
      $ 395 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 396 "Wait: 0.3"
      sleep(0.3)
      $ 397 "Loop 2 times"
      Loop_75 = 0
      while (Loop_75 < 2):
        $ 398 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 399 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 400 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 401 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 402 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_75 = Loop_75 + 1
      end
      $ 403 "Direction: Base Z+"
      global move_thread_flag_403=0
      thread move_thread_403():
        enter_critical
        move_thread_flag_403 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_403 = 2
        exit_critical
      end
      move_thread_flag_403 = 0
      move_thread_han_403 = run move_thread_403()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_403 > 1):
          join move_thread_han_403
          $ 404 "Until (distance)"
          break
        end
        sync()
      end
      $ 405 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 406 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 407 "Call Quitar_broca"
      Quitar_broca()
      $ 408 "Call Poner_broca"
      Poner_broca()
    end
    $ 409 "CD"
    $ 410 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 411 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 412 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 413 "barreno_actual≔0"
    global barreno_actual=0
    $ 414 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 415 "Perforacion"
      $ 416 "MoveL"
      $ 417 "internos≔interpolate_pose(Linea2_C, Linea2_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_C_p, Linea2_D_p, barreno_actual/barrenos_menos1)
      $ 418 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 419 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 420 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 421 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 422 "Direction: Base Z-"
      global move_thread_flag_422=0
      thread move_thread_422():
        enter_critical
        move_thread_flag_422 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_422 = 2
        exit_critical
      end
      move_thread_flag_422 = 0
      move_thread_han_422 = run move_thread_422()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_422 > 1):
          join move_thread_han_422
          $ 423 "Until (distance)"
          break
        end
        sync()
      end
      $ 424 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 425 "Direction: Base Z+"
      global move_thread_flag_425=0
      thread move_thread_425():
        enter_critical
        move_thread_flag_425 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_425 = 2
        exit_critical
      end
      move_thread_flag_425 = 0
      move_thread_han_425 = run move_thread_425()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_425 > 1):
          join move_thread_han_425
          $ 426 "Until (distance)"
          break
        end
        sync()
      end
      $ 427 "Wait: 0.3"
      sleep(0.3)
      $ 428 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 429 "Wait: 0.3"
      sleep(0.3)
      $ 430 "Loop 2 times"
      Loop_78 = 0
      while (Loop_78 < 2):
        $ 431 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 432 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 433 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 434 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 435 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_78 = Loop_78 + 1
      end
      $ 436 "Direction: Base Z+"
      global move_thread_flag_436=0
      thread move_thread_436():
        enter_critical
        move_thread_flag_436 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_436 = 2
        exit_critical
      end
      move_thread_flag_436 = 0
      move_thread_han_436 = run move_thread_436()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_436 > 1):
          join move_thread_han_436
          $ 437 "Until (distance)"
          break
        end
        sync()
      end
      $ 438 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 439 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 440 "Call Quitar_broca"
      Quitar_broca()
      $ 441 "Call Poner_broca"
      Poner_broca()
    end
    $ 442 "EF"
    $ 443 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 444 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 445 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 446 "barreno_actual≔0"
    global barreno_actual=0
    $ 447 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 448 "Perforacion"
      $ 449 "MoveL"
      $ 450 "internos≔interpolate_pose(Linea2_E, Linea2_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_E_p, Linea2_F_p, barreno_actual/barrenos_menos1)
      $ 451 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 452 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 453 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 454 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 455 "Direction: Base Z-"
      global move_thread_flag_455=0
      thread move_thread_455():
        enter_critical
        move_thread_flag_455 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_455 = 2
        exit_critical
      end
      move_thread_flag_455 = 0
      move_thread_han_455 = run move_thread_455()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_455 > 1):
          join move_thread_han_455
          $ 456 "Until (distance)"
          break
        end
        sync()
      end
      $ 457 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 458 "Direction: Base Z+"
      global move_thread_flag_458=0
      thread move_thread_458():
        enter_critical
        move_thread_flag_458 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_458 = 2
        exit_critical
      end
      move_thread_flag_458 = 0
      move_thread_han_458 = run move_thread_458()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_458 > 1):
          join move_thread_han_458
          $ 459 "Until (distance)"
          break
        end
        sync()
      end
      $ 460 "Wait: 0.3"
      sleep(0.3)
      $ 461 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 462 "Wait: 0.3"
      sleep(0.3)
      $ 463 "Loop 2 times"
      Loop_80 = 0
      while (Loop_80 < 2):
        $ 464 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 465 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 466 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 467 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 468 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_80 = Loop_80 + 1
      end
      $ 469 "Direction: Base Z+"
      global move_thread_flag_469=0
      thread move_thread_469():
        enter_critical
        move_thread_flag_469 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_469 = 2
        exit_critical
      end
      move_thread_flag_469 = 0
      move_thread_han_469 = run move_thread_469()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_469 > 1):
          join move_thread_han_469
          $ 470 "Until (distance)"
          break
        end
        sync()
      end
      $ 471 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 472 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 473 "If barreno_actual≥barrenos_menos1"
      if (barreno_actual >= barrenos_menos1):
        $ 474 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 475 "Call Quitar_broca"
      Quitar_broca()
      $ 476 "Call Poner_broca"
      Poner_broca()
    end
    $ 477 "Popup: Linea2 con media Terminada!"
    popup("Linea2 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 478 "Broca_3"
    $ 479 "Linea1"
    $ 480 "Marcar_puntos"
    $ 481 "MoveL"
    $ 482 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 483 "var"
    $ 484 "barrenos_hechos≔2"
    global barrenos_hechos=2
    $ 485 "eje7≔2"
    global eje7=2
    $ 486 "cambiar_broca≔ False "
    global cambiar_broca=  False  
    $ 487 "iniciando_prog≔ False "
    global iniciando_prog=  False  
    $ 488 "Linea1_A" "breakAfter"
    movel(Linea1_A_p, a=0.5, v=0.1)
    $ 489 "Linea1_B" "breakAfter"
    movel(Linea1_B_p, a=0.5, v=0.1)
    $ 490 "Linea1_C" "breakAfter"
    movel(Linea1_C_p, a=0.5, v=0.1)
    $ 491 "Linea1_D" "breakAfter"
    movel(Linea1_D_p, a=0.5, v=0.1)
    $ 492 "Linea1_E" "breakAfter"
    movel(Linea1_E_p, a=0.5, v=0.1)
    $ 493 "Linea1_F" "breakAfter"
    movel(Linea1_F_p, a=0.5, v=0.1)
    $ 494 "AB"
    $ 495 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 496 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 497 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 498 "barreno_actual≔2"
    global barreno_actual=2
    $ 499 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 500 "Perforacion"
      $ 501 "MoveL"
      $ 502 "internos≔interpolate_pose(Linea1_A, Linea1_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_A_p, Linea1_B_p, barreno_actual/barrenos_menos1)
      $ 503 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 504 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 505 "bajada_broca≔p[0,0,-0.026,0,0,0]"
      global bajada_broca=p[0,0,-0.026,0,0,0]
      $ 506 "bajada≔p[0,0,0.026,0,0,0]"
      global bajada=p[0,0,0.026,0,0,0]
      $ 507 "Direction: Base Z-"
      global move_thread_flag_507=0
      thread move_thread_507():
        enter_critical
        move_thread_flag_507 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08270000000000001)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_507 = 2
        exit_critical
      end
      move_thread_flag_507 = 0
      move_thread_han_507 = run move_thread_507()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_507 > 1):
          join move_thread_han_507
          $ 508 "Until (distance)"
          break
        end
        sync()
      end
      $ 509 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 510 "Direction: Base Z+"
      global move_thread_flag_510=0
      thread move_thread_510():
        enter_critical
        move_thread_flag_510 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_510 = 2
        exit_critical
      end
      move_thread_flag_510 = 0
      move_thread_han_510 = run move_thread_510()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_510 > 1):
          join move_thread_han_510
          $ 511 "Until (distance)"
          break
        end
        sync()
      end
      $ 512 "Wait: 0.3"
      sleep(0.3)
      $ 513 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 514 "Wait: 0.3"
      sleep(0.3)
      $ 515 "Loop 1 times"
      Loop_82 = 0
      while (Loop_82 < 1):
        $ 516 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 517 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 518 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 519 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 520 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_82 = Loop_82 + 1
      end
      $ 521 "Direction: Base Z+"
      global move_thread_flag_521=0
      thread move_thread_521():
        enter_critical
        move_thread_flag_521 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_521 = 2
        exit_critical
      end
      move_thread_flag_521 = 0
      move_thread_han_521 = run move_thread_521()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_521 > 1):
          join move_thread_han_521
          $ 522 "Until (distance)"
          break
        end
        sync()
      end
      $ 523 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 524 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 525 "Call Quitar_broca"
      Quitar_broca()
      $ 526 "Call Poner_broca"
      Poner_broca()
    end
    $ 527 "CD"
    $ 528 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 529 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 530 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 531 "barreno_actual≔5"
    global barreno_actual=5
    $ 532 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 533 "Perforacion"
      $ 534 "MoveL"
      $ 535 "internos≔interpolate_pose(Linea1_C, Linea1_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_C_p, Linea1_D_p, barreno_actual/barrenos_menos1)
      $ 536 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 537 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 538 "bajada_broca≔p[0,0,-0.026,0,0,0]"
      global bajada_broca=p[0,0,-0.026,0,0,0]
      $ 539 "bajada≔p[0,0,0.026,0,0,0]"
      global bajada=p[0,0,0.026,0,0,0]
      $ 540 "Direction: Base Z-"
      global move_thread_flag_540=0
      thread move_thread_540():
        enter_critical
        move_thread_flag_540 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08270000000000001)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_540 = 2
        exit_critical
      end
      move_thread_flag_540 = 0
      move_thread_han_540 = run move_thread_540()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_540 > 1):
          join move_thread_han_540
          $ 541 "Until (distance)"
          break
        end
        sync()
      end
      $ 542 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 543 "Direction: Base Z+"
      global move_thread_flag_543=0
      thread move_thread_543():
        enter_critical
        move_thread_flag_543 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_543 = 2
        exit_critical
      end
      move_thread_flag_543 = 0
      move_thread_han_543 = run move_thread_543()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_543 > 1):
          join move_thread_han_543
          $ 544 "Until (distance)"
          break
        end
        sync()
      end
      $ 545 "Wait: 0.3"
      sleep(0.3)
      $ 546 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 547 "Wait: 0.3"
      sleep(0.3)
      $ 548 "Loop 1 times"
      Loop_85 = 0
      while (Loop_85 < 1):
        $ 549 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 550 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 551 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 552 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 553 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_85 = Loop_85 + 1
      end
      $ 554 "Direction: Base Z+"
      global move_thread_flag_554=0
      thread move_thread_554():
        enter_critical
        move_thread_flag_554 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_554 = 2
        exit_critical
      end
      move_thread_flag_554 = 0
      move_thread_han_554 = run move_thread_554()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_554 > 1):
          join move_thread_han_554
          $ 555 "Until (distance)"
          break
        end
        sync()
      end
      $ 556 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 557 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 558 "Call Quitar_broca"
      Quitar_broca()
      $ 559 "Call Poner_broca"
      Poner_broca()
    end
    $ 560 "EF"
    $ 561 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 562 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 563 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 564 "barreno_actual≔0"
    global barreno_actual=0
    $ 565 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 566 "Perforacion"
      $ 567 "MoveL"
      $ 568 "internos≔interpolate_pose(Linea1_E, Linea1_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_E_p, Linea1_F_p, barreno_actual/barrenos_menos1)
      $ 569 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 570 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 571 "bajada_broca≔p[0,0,-0.026,0,0,0]"
      global bajada_broca=p[0,0,-0.026,0,0,0]
      $ 572 "bajada≔p[0,0,0.026,0,0,0]"
      global bajada=p[0,0,0.026,0,0,0]
      $ 573 "Direction: Base Z-"
      global move_thread_flag_573=0
      thread move_thread_573():
        enter_critical
        move_thread_flag_573 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08270000000000001)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_573 = 2
        exit_critical
      end
      move_thread_flag_573 = 0
      move_thread_han_573 = run move_thread_573()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_573 > 1):
          join move_thread_han_573
          $ 574 "Until (distance)"
          break
        end
        sync()
      end
      $ 575 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 576 "Direction: Base Z+"
      global move_thread_flag_576=0
      thread move_thread_576():
        enter_critical
        move_thread_flag_576 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_576 = 2
        exit_critical
      end
      move_thread_flag_576 = 0
      move_thread_han_576 = run move_thread_576()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_576 > 1):
          join move_thread_han_576
          $ 577 "Until (distance)"
          break
        end
        sync()
      end
      $ 578 "Wait: 0.3"
      sleep(0.3)
      $ 579 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 580 "Wait: 0.3"
      sleep(0.3)
      $ 581 "Loop 1 times"
      Loop_87 = 0
      while (Loop_87 < 1):
        $ 582 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 583 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 584 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 585 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 586 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_87 = Loop_87 + 1
      end
      $ 587 "Direction: Base Z+"
      global move_thread_flag_587=0
      thread move_thread_587():
        enter_critical
        move_thread_flag_587 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_587 = 2
        exit_critical
      end
      move_thread_flag_587 = 0
      move_thread_han_587 = run move_thread_587()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_587 > 1):
          join move_thread_han_587
          $ 588 "Until (distance)"
          break
        end
        sync()
      end
      $ 589 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 590 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 591 "Call Quitar_broca"
      Quitar_broca()
      $ 592 "Call Poner_broca"
      Poner_broca()
    end
    $ 593 "Popup: Linea1 con full Terminada!"
    popup("Linea1 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 594 "Linea2"
    $ 595 "Marcar_puntos"
    $ 596 "MoveL"
    $ 597 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 598 "Linea2_A" "breakAfter"
    movel(Linea2_A_p, a=0.5, v=0.1)
    $ 599 "Linea2_B" "breakAfter"
    movel(Linea2_B_p, a=0.5, v=0.1)
    $ 600 "Linea2_C" "breakAfter"
    movel(Linea2_C_p, a=0.5, v=0.1)
    $ 601 "Linea2_D" "breakAfter"
    movel(Linea2_D_p, a=0.5, v=0.1)
    $ 602 "Linea2_E" "breakAfter"
    movel(Linea2_E_p, a=0.5, v=0.1)
    $ 603 "Linea2_F" "breakAfter"
    movel(Linea2_F_p, a=0.5, v=0.1)
    $ 604 "AB"
    $ 605 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 606 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 607 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 608 "barreno_actual≔0"
    global barreno_actual=0
    $ 609 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 610 "Perforacion"
      $ 611 "MoveL"
      $ 612 "internos≔interpolate_pose(Linea2_A, Linea2_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_A_p, Linea2_B_p, barreno_actual/barrenos_menos1)
      $ 613 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 614 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 615 "bajada_broca≔p[0,0,-0.026,0,0,0]"
      global bajada_broca=p[0,0,-0.026,0,0,0]
      $ 616 "bajada≔p[0,0,0.026,0,0,0]"
      global bajada=p[0,0,0.026,0,0,0]
      $ 617 "Direction: Base Z-"
      global move_thread_flag_617=0
      thread move_thread_617():
        enter_critical
        move_thread_flag_617 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08270000000000001)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_617 = 2
        exit_critical
      end
      move_thread_flag_617 = 0
      move_thread_han_617 = run move_thread_617()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_617 > 1):
          join move_thread_han_617
          $ 618 "Until (distance)"
          break
        end
        sync()
      end
      $ 619 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 620 "Direction: Base Z+"
      global move_thread_flag_620=0
      thread move_thread_620():
        enter_critical
        move_thread_flag_620 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_620 = 2
        exit_critical
      end
      move_thread_flag_620 = 0
      move_thread_han_620 = run move_thread_620()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_620 > 1):
          join move_thread_han_620
          $ 621 "Until (distance)"
          break
        end
        sync()
      end
      $ 622 "Wait: 0.3"
      sleep(0.3)
      $ 623 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 624 "Wait: 0.3"
      sleep(0.3)
      $ 625 "Loop 1 times"
      Loop_90 = 0
      while (Loop_90 < 1):
        $ 626 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 627 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 628 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 629 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 630 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_90 = Loop_90 + 1
      end
      $ 631 "Direction: Base Z+"
      global move_thread_flag_631=0
      thread move_thread_631():
        enter_critical
        move_thread_flag_631 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_631 = 2
        exit_critical
      end
      move_thread_flag_631 = 0
      move_thread_han_631 = run move_thread_631()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_631 > 1):
          join move_thread_han_631
          $ 632 "Until (distance)"
          break
        end
        sync()
      end
      $ 633 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 634 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 635 "Call Quitar_broca"
      Quitar_broca()
      $ 636 "Call Poner_broca"
      Poner_broca()
    end
    $ 637 "CD"
    $ 638 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 639 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 640 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 641 "barreno_actual≔0"
    global barreno_actual=0
    $ 642 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 643 "Perforacion"
      $ 644 "MoveL"
      $ 645 "internos≔interpolate_pose(Linea2_C, Linea2_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_C_p, Linea2_D_p, barreno_actual/barrenos_menos1)
      $ 646 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 647 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 648 "bajada_broca≔p[0,0,-0.026,0,0,0]"
      global bajada_broca=p[0,0,-0.026,0,0,0]
      $ 649 "bajada≔p[0,0,0.026,0,0,0]"
      global bajada=p[0,0,0.026,0,0,0]
      $ 650 "Direction: Base Z-"
      global move_thread_flag_650=0
      thread move_thread_650():
        enter_critical
        move_thread_flag_650 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08270000000000001)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_650 = 2
        exit_critical
      end
      move_thread_flag_650 = 0
      move_thread_han_650 = run move_thread_650()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_650 > 1):
          join move_thread_han_650
          $ 651 "Until (distance)"
          break
        end
        sync()
      end
      $ 652 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 653 "Direction: Base Z+"
      global move_thread_flag_653=0
      thread move_thread_653():
        enter_critical
        move_thread_flag_653 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_653 = 2
        exit_critical
      end
      move_thread_flag_653 = 0
      move_thread_han_653 = run move_thread_653()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_653 > 1):
          join move_thread_han_653
          $ 654 "Until (distance)"
          break
        end
        sync()
      end
      $ 655 "Wait: 0.3"
      sleep(0.3)
      $ 656 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 657 "Wait: 0.3"
      sleep(0.3)
      $ 658 "Loop 1 times"
      Loop_92 = 0
      while (Loop_92 < 1):
        $ 659 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 660 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 661 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 662 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 663 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_92 = Loop_92 + 1
      end
      $ 664 "Direction: Base Z+"
      global move_thread_flag_664=0
      thread move_thread_664():
        enter_critical
        move_thread_flag_664 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_664 = 2
        exit_critical
      end
      move_thread_flag_664 = 0
      move_thread_han_664 = run move_thread_664()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_664 > 1):
          join move_thread_han_664
          $ 665 "Until (distance)"
          break
        end
        sync()
      end
      $ 666 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 667 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 668 "Call Quitar_broca"
      Quitar_broca()
      $ 669 "Call Poner_broca"
      Poner_broca()
    end
    $ 670 "EF"
    $ 671 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 672 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 673 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 674 "barreno_actual≔0"
    global barreno_actual=0
    $ 675 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 676 "Perforacion"
      $ 677 "MoveL"
      $ 678 "internos≔interpolate_pose(Linea2_E, Linea2_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_E_p, Linea2_F_p, barreno_actual/barrenos_menos1)
      $ 679 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 680 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 681 "bajada_broca≔p[0,0,-0.026,0,0,0]"
      global bajada_broca=p[0,0,-0.026,0,0,0]
      $ 682 "bajada≔p[0,0,0.026,0,0,0]"
      global bajada=p[0,0,0.026,0,0,0]
      $ 683 "Direction: Base Z-"
      global move_thread_flag_683=0
      thread move_thread_683():
        enter_critical
        move_thread_flag_683 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08270000000000001)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_683 = 2
        exit_critical
      end
      move_thread_flag_683 = 0
      move_thread_han_683 = run move_thread_683()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_683 > 1):
          join move_thread_han_683
          $ 684 "Until (distance)"
          break
        end
        sync()
      end
      $ 685 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 686 "Direction: Base Z+"
      global move_thread_flag_686=0
      thread move_thread_686():
        enter_critical
        move_thread_flag_686 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_686 = 2
        exit_critical
      end
      move_thread_flag_686 = 0
      move_thread_han_686 = run move_thread_686()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_686 > 1):
          join move_thread_han_686
          $ 687 "Until (distance)"
          break
        end
        sync()
      end
      $ 688 "Wait: 0.3"
      sleep(0.3)
      $ 689 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 690 "Wait: 0.3"
      sleep(0.3)
      $ 691 "Loop 1 times"
      Loop_94 = 0
      while (Loop_94 < 1):
        $ 692 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 693 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 694 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 695 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 696 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_94 = Loop_94 + 1
      end
      $ 697 "Direction: Base Z+"
      global move_thread_flag_697=0
      thread move_thread_697():
        enter_critical
        move_thread_flag_697 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_697 = 2
        exit_critical
      end
      move_thread_flag_697 = 0
      move_thread_han_697 = run move_thread_697()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_697 > 1):
          join move_thread_han_697
          $ 698 "Until (distance)"
          break
        end
        sync()
      end
      $ 699 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 700 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 701 "If barreno_actual≥barrenos_menos1"
      if (barreno_actual >= barrenos_menos1):
        $ 702 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 703 "Call Quitar_broca"
      Quitar_broca()
      $ 704 "Call Poner_broca"
      Poner_broca()
    end
    $ 705 "Popup: Linea2 con full Terminada!"
    popup("Linea2 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 706 "600"
    $ 1218 "Broca_1"
    $ 1219 "Linea7"
    $ 1220 "Marcar_puntos"
    $ 1221 "MoveL"
    $ 1222 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 1223 "Linea7_A" "breakAfter"
    movel(Linea7_A_p, a=0.5, v=0.1)
    $ 1224 "bajada_comprobacion"
    $ 1225 "Direction: Base Z-"
    global move_thread_flag_1225=0
    thread move_thread_1225():
      enter_critical
      move_thread_flag_1225 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1225 = 2
      exit_critical
    end
    move_thread_flag_1225 = 0
    move_thread_han_1225 = run move_thread_1225()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1225 > 1):
        join move_thread_han_1225
        $ 1226 "Until (distance)"
        break
      end
      sync()
    end
    $ 1227 "Direction: Base Z-"
    global move_thread_flag_1227=0
    thread move_thread_1227():
      enter_critical
      move_thread_flag_1227 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1227 = 2
      exit_critical
    end
    move_thread_flag_1227 = 0
    move_thread_han_1227 = run move_thread_1227()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1227
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1228 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1229 "Direction: Base Z+"
    global move_thread_flag_1229=0
    thread move_thread_1229():
      enter_critical
      move_thread_flag_1229 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1229 = 2
      exit_critical
    end
    move_thread_flag_1229 = 0
    move_thread_han_1229 = run move_thread_1229()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1229 > 1):
        join move_thread_han_1229
        $ 1230 "Until (distance)"
        break
      end
      sync()
    end
    $ 1231 "Linea7_B" "breakAfter"
    movel(Linea7_B_p, a=0.5, v=0.1)
    $ 1232 "bajada_comprobacion"
    $ 1233 "Direction: Base Z-"
    global move_thread_flag_1233=0
    thread move_thread_1233():
      enter_critical
      move_thread_flag_1233 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1233 = 2
      exit_critical
    end
    move_thread_flag_1233 = 0
    move_thread_han_1233 = run move_thread_1233()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1233 > 1):
        join move_thread_han_1233
        $ 1234 "Until (distance)"
        break
      end
      sync()
    end
    $ 1235 "Direction: Base Z-"
    global move_thread_flag_1235=0
    thread move_thread_1235():
      enter_critical
      move_thread_flag_1235 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1235 = 2
      exit_critical
    end
    move_thread_flag_1235 = 0
    move_thread_han_1235 = run move_thread_1235()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1235
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1236 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1237 "Direction: Base Z+"
    global move_thread_flag_1237=0
    thread move_thread_1237():
      enter_critical
      move_thread_flag_1237 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1237 = 2
      exit_critical
    end
    move_thread_flag_1237 = 0
    move_thread_han_1237 = run move_thread_1237()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1237 > 1):
        join move_thread_han_1237
        $ 1238 "Until (distance)"
        break
      end
      sync()
    end
    $ 1239 "AB"
    $ 1240 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1241 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1242 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1243 "barreno_actual≔1"
    global barreno_actual=1
    $ 1244 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1245 "Perforacion"
      $ 1246 "MoveL"
      $ 1247 "internos≔interpolate_pose(Linea7_A, Linea7_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea7_A_p, Linea7_B_p, barreno_actual/barrenos_menos1)
      $ 1248 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1249 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1250 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1251 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1252 "Direction: Base Z-"
      global move_thread_flag_1252=0
      thread move_thread_1252():
        enter_critical
        move_thread_flag_1252 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1252 = 2
        exit_critical
      end
      move_thread_flag_1252 = 0
      move_thread_han_1252 = run move_thread_1252()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1252 > 1):
          join move_thread_han_1252
          $ 1253 "Until (distance)"
          break
        end
        sync()
      end
      $ 1254 "Direction: Base Z-"
      global move_thread_flag_1254=0
      thread move_thread_1254():
        enter_critical
        move_thread_flag_1254 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1254 = 2
        exit_critical
      end
      move_thread_flag_1254 = 0
      move_thread_han_1254 = run move_thread_1254()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1254
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1255 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1256 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1257 "Direction: Base Z+"
      global move_thread_flag_1257=0
      thread move_thread_1257():
        enter_critical
        move_thread_flag_1257 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1257 = 2
        exit_critical
      end
      move_thread_flag_1257 = 0
      move_thread_han_1257 = run move_thread_1257()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1257 > 1):
          join move_thread_han_1257
          $ 1258 "Until (distance)"
          break
        end
        sync()
      end
      $ 1259 "Wait: 0.3"
      sleep(0.3)
      $ 1260 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1261 "Wait: 0.3"
      sleep(0.3)
      $ 1262 "Loop 1 times"
      Loop_96 = 0
      while (Loop_96 < 1):
        $ 1263 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1264 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1265 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1266 "Direction: Base Z+"
        global move_thread_flag_1266=0
        thread move_thread_1266():
          enter_critical
          move_thread_flag_1266 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1266 = 2
          exit_critical
        end
        move_thread_flag_1266 = 0
        move_thread_han_1266 = run move_thread_1266()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1266 > 1):
            join move_thread_han_1266
            $ 1267 "Until (distance)"
            break
          end
          sync()
        end
        $ 1268 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1269 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1270 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_96 = Loop_96 + 1
      end
      $ 1271 "Direction: Base Z+"
      global move_thread_flag_1271=0
      thread move_thread_1271():
        enter_critical
        move_thread_flag_1271 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1271 = 2
        exit_critical
      end
      move_thread_flag_1271 = 0
      move_thread_han_1271 = run move_thread_1271()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1271 > 1):
          join move_thread_han_1271
          $ 1272 "Until (distance)"
          break
        end
        sync()
      end
      $ 1273 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1274 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1275 "Call Quitar_broca"
      Quitar_broca()
      $ 1276 "Call Poner_broca"
      Poner_broca()
    end
    $ 1277 "Popup: Linea7 con chica Terminada!"
    popup("Linea7 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1278 "Linea8"
    $ 1279 "Marcar_puntos"
    $ 1280 "MoveL"
    $ 1281 "Linea8_A" "breakAfter"
    movel(Linea8_A_p, a=0.5, v=0.1)
    $ 1282 "bajada_comprobacion"
    $ 1283 "Direction: Base Z-"
    global move_thread_flag_1283=0
    thread move_thread_1283():
      enter_critical
      move_thread_flag_1283 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1283 = 2
      exit_critical
    end
    move_thread_flag_1283 = 0
    move_thread_han_1283 = run move_thread_1283()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1283 > 1):
        join move_thread_han_1283
        $ 1284 "Until (distance)"
        break
      end
      sync()
    end
    $ 1285 "Direction: Base Z-"
    global move_thread_flag_1285=0
    thread move_thread_1285():
      enter_critical
      move_thread_flag_1285 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1285 = 2
      exit_critical
    end
    move_thread_flag_1285 = 0
    move_thread_han_1285 = run move_thread_1285()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1285
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1286 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1287 "Direction: Base Z+"
    global move_thread_flag_1287=0
    thread move_thread_1287():
      enter_critical
      move_thread_flag_1287 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1287 = 2
      exit_critical
    end
    move_thread_flag_1287 = 0
    move_thread_han_1287 = run move_thread_1287()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1287 > 1):
        join move_thread_han_1287
        $ 1288 "Until (distance)"
        break
      end
      sync()
    end
    $ 1289 "Linea8_B" "breakAfter"
    movel(Linea8_B_p, a=0.5, v=0.1)
    $ 1290 "bajada_comprobacion"
    $ 1291 "Direction: Base Z-"
    global move_thread_flag_1291=0
    thread move_thread_1291():
      enter_critical
      move_thread_flag_1291 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1291 = 2
      exit_critical
    end
    move_thread_flag_1291 = 0
    move_thread_han_1291 = run move_thread_1291()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1291 > 1):
        join move_thread_han_1291
        $ 1292 "Until (distance)"
        break
      end
      sync()
    end
    $ 1293 "Direction: Base Z-"
    global move_thread_flag_1293=0
    thread move_thread_1293():
      enter_critical
      move_thread_flag_1293 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1293 = 2
      exit_critical
    end
    move_thread_flag_1293 = 0
    move_thread_han_1293 = run move_thread_1293()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1293
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1294 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1295 "Direction: Base Z+"
    global move_thread_flag_1295=0
    thread move_thread_1295():
      enter_critical
      move_thread_flag_1295 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1295 = 2
      exit_critical
    end
    move_thread_flag_1295 = 0
    move_thread_han_1295 = run move_thread_1295()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1295 > 1):
        join move_thread_han_1295
        $ 1296 "Until (distance)"
        break
      end
      sync()
    end
    $ 1297 "AB"
    $ 1298 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1299 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1300 "barrenos_menos1≔5"
    global barrenos_menos1=5
    $ 1301 "barreno_actual≔0"
    global barreno_actual=0
    $ 1302 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1303 "Perforacion"
      $ 1304 "MoveL"
      $ 1305 "internos≔interpolate_pose(Linea8_A, Linea8_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea8_A_p, Linea8_B_p, barreno_actual/barrenos_menos1)
      $ 1306 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1307 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1308 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1309 "bajada≔p[0,0,0.0024,0,0,0]"
      global bajada=p[0,0,0.0024,0,0,0]
      $ 1310 "Direction: Base Z-"
      global move_thread_flag_1310=0
      thread move_thread_1310():
        enter_critical
        move_thread_flag_1310 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1310 = 2
        exit_critical
      end
      move_thread_flag_1310 = 0
      move_thread_han_1310 = run move_thread_1310()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1310 > 1):
          join move_thread_han_1310
          $ 1311 "Until (distance)"
          break
        end
        sync()
      end
      $ 1312 "Direction: Base Z-"
      global move_thread_flag_1312=0
      thread move_thread_1312():
        enter_critical
        move_thread_flag_1312 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1312 = 2
        exit_critical
      end
      move_thread_flag_1312 = 0
      move_thread_han_1312 = run move_thread_1312()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1312
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1313 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1314 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1315 "Direction: Base Z+"
      global move_thread_flag_1315=0
      thread move_thread_1315():
        enter_critical
        move_thread_flag_1315 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1315 = 2
        exit_critical
      end
      move_thread_flag_1315 = 0
      move_thread_han_1315 = run move_thread_1315()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1315 > 1):
          join move_thread_han_1315
          $ 1316 "Until (distance)"
          break
        end
        sync()
      end
      $ 1317 "Wait: 0.3"
      sleep(0.3)
      $ 1318 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1319 "Wait: 0.3"
      sleep(0.3)
      $ 1320 "Loop 1 times"
      Loop_110 = 0
      while (Loop_110 < 1):
        $ 1321 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1322 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1323 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1324 "Direction: Base Z+"
        global move_thread_flag_1324=0
        thread move_thread_1324():
          enter_critical
          move_thread_flag_1324 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1324 = 2
          exit_critical
        end
        move_thread_flag_1324 = 0
        move_thread_han_1324 = run move_thread_1324()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1324 > 1):
            join move_thread_han_1324
            $ 1325 "Until (distance)"
            break
          end
          sync()
        end
        $ 1326 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1327 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1328 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_110 = Loop_110 + 1
      end
      $ 1329 "Direction: Base Z+"
      global move_thread_flag_1329=0
      thread move_thread_1329():
        enter_critical
        move_thread_flag_1329 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1329 = 2
        exit_critical
      end
      move_thread_flag_1329 = 0
      move_thread_han_1329 = run move_thread_1329()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1329 > 1):
          join move_thread_han_1329
          $ 1330 "Until (distance)"
          break
        end
        sync()
      end
      $ 1331 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1332 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1333 "Call Quitar_broca"
      Quitar_broca()
      $ 1334 "Call Poner_broca"
      Poner_broca()
    end
    $ 1335 "Popup: Linea8 con chica Terminada!"
    popup("Linea8 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1336 "Linea9"
    $ 1337 "Marcar_puntos"
    $ 1338 "MoveL"
    $ 1339 "Linea9_A" "breakAfter"
    movel(Linea9_A_p, a=0.5, v=0.1)
    $ 1340 "bajada_comprobacion"
    $ 1341 "Direction: Base Z-"
    global move_thread_flag_1341=0
    thread move_thread_1341():
      enter_critical
      move_thread_flag_1341 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1341 = 2
      exit_critical
    end
    move_thread_flag_1341 = 0
    move_thread_han_1341 = run move_thread_1341()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1341 > 1):
        join move_thread_han_1341
        $ 1342 "Until (distance)"
        break
      end
      sync()
    end
    $ 1343 "Direction: Base Z-"
    global move_thread_flag_1343=0
    thread move_thread_1343():
      enter_critical
      move_thread_flag_1343 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1343 = 2
      exit_critical
    end
    move_thread_flag_1343 = 0
    move_thread_han_1343 = run move_thread_1343()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1343
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1344 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1345 "Direction: Base Z+"
    global move_thread_flag_1345=0
    thread move_thread_1345():
      enter_critical
      move_thread_flag_1345 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1345 = 2
      exit_critical
    end
    move_thread_flag_1345 = 0
    move_thread_han_1345 = run move_thread_1345()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1345 > 1):
        join move_thread_han_1345
        $ 1346 "Until (distance)"
        break
      end
      sync()
    end
    $ 1347 "Linea9_B" "breakAfter"
    movel(Linea9_B_p, a=0.5, v=0.1)
    $ 1348 "bajada_comprobacion"
    $ 1349 "Direction: Base Z-"
    global move_thread_flag_1349=0
    thread move_thread_1349():
      enter_critical
      move_thread_flag_1349 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1349 = 2
      exit_critical
    end
    move_thread_flag_1349 = 0
    move_thread_han_1349 = run move_thread_1349()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1349 > 1):
        join move_thread_han_1349
        $ 1350 "Until (distance)"
        break
      end
      sync()
    end
    $ 1351 "Direction: Base Z-"
    global move_thread_flag_1351=0
    thread move_thread_1351():
      enter_critical
      move_thread_flag_1351 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1351 = 2
      exit_critical
    end
    move_thread_flag_1351 = 0
    move_thread_han_1351 = run move_thread_1351()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1351
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1352 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1353 "Direction: Base Z+"
    global move_thread_flag_1353=0
    thread move_thread_1353():
      enter_critical
      move_thread_flag_1353 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1353 = 2
      exit_critical
    end
    move_thread_flag_1353 = 0
    move_thread_han_1353 = run move_thread_1353()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1353 > 1):
        join move_thread_han_1353
        $ 1354 "Until (distance)"
        break
      end
      sync()
    end
    $ 1355 "AB"
    $ 1356 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1357 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1358 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1359 "barreno_actual≔0"
    global barreno_actual=0
    $ 1360 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1361 "Perforacion"
      $ 1362 "MoveL"
      $ 1363 "internos≔interpolate_pose(Linea9_A, Linea9_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea9_A_p, Linea9_B_p, barreno_actual/barrenos_menos1)
      $ 1364 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1365 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1366 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1367 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1368 "Direction: Base Z-"
      global move_thread_flag_1368=0
      thread move_thread_1368():
        enter_critical
        move_thread_flag_1368 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1368 = 2
        exit_critical
      end
      move_thread_flag_1368 = 0
      move_thread_han_1368 = run move_thread_1368()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1368 > 1):
          join move_thread_han_1368
          $ 1369 "Until (distance)"
          break
        end
        sync()
      end
      $ 1370 "Direction: Base Z-"
      global move_thread_flag_1370=0
      thread move_thread_1370():
        enter_critical
        move_thread_flag_1370 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1370 = 2
        exit_critical
      end
      move_thread_flag_1370 = 0
      move_thread_han_1370 = run move_thread_1370()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1370
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1371 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1372 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1373 "Direction: Base Z+"
      global move_thread_flag_1373=0
      thread move_thread_1373():
        enter_critical
        move_thread_flag_1373 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1373 = 2
        exit_critical
      end
      move_thread_flag_1373 = 0
      move_thread_han_1373 = run move_thread_1373()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1373 > 1):
          join move_thread_han_1373
          $ 1374 "Until (distance)"
          break
        end
        sync()
      end
      $ 1375 "Wait: 0.3"
      sleep(0.3)
      $ 1376 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1377 "Wait: 0.3"
      sleep(0.3)
      $ 1378 "Loop 1 times"
      Loop_114 = 0
      while (Loop_114 < 1):
        $ 1379 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1380 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1381 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1382 "Direction: Base Z+"
        global move_thread_flag_1382=0
        thread move_thread_1382():
          enter_critical
          move_thread_flag_1382 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1382 = 2
          exit_critical
        end
        move_thread_flag_1382 = 0
        move_thread_han_1382 = run move_thread_1382()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1382 > 1):
            join move_thread_han_1382
            $ 1383 "Until (distance)"
            break
          end
          sync()
        end
        $ 1384 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1385 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1386 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_114 = Loop_114 + 1
      end
      $ 1387 "Direction: Base Z+"
      global move_thread_flag_1387=0
      thread move_thread_1387():
        enter_critical
        move_thread_flag_1387 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1387 = 2
        exit_critical
      end
      move_thread_flag_1387 = 0
      move_thread_han_1387 = run move_thread_1387()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1387 > 1):
          join move_thread_han_1387
          $ 1388 "Until (distance)"
          break
        end
        sync()
      end
      $ 1389 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1390 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1391 "Call Quitar_broca"
      Quitar_broca()
      $ 1392 "Call Poner_broca"
      Poner_broca()
    end
    $ 1393 "Popup: Linea9 con chica Terminada!"
    popup("Linea9 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1394 "Linea10"
    $ 1395 "Marcar_puntos"
    $ 1396 "MoveL"
    $ 1397 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 1398 "Linea10_A" "breakAfter"
    movel(Linea10_A_p, a=0.5, v=0.1)
    $ 1399 "bajada_comprobacion"
    $ 1400 "Direction: Base Z-"
    global move_thread_flag_1400=0
    thread move_thread_1400():
      enter_critical
      move_thread_flag_1400 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1400 = 2
      exit_critical
    end
    move_thread_flag_1400 = 0
    move_thread_han_1400 = run move_thread_1400()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1400 > 1):
        join move_thread_han_1400
        $ 1401 "Until (distance)"
        break
      end
      sync()
    end
    $ 1402 "Direction: Base Z-"
    global move_thread_flag_1402=0
    thread move_thread_1402():
      enter_critical
      move_thread_flag_1402 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1402 = 2
      exit_critical
    end
    move_thread_flag_1402 = 0
    move_thread_han_1402 = run move_thread_1402()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1402
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1403 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1404 "Direction: Base Z+"
    global move_thread_flag_1404=0
    thread move_thread_1404():
      enter_critical
      move_thread_flag_1404 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1404 = 2
      exit_critical
    end
    move_thread_flag_1404 = 0
    move_thread_han_1404 = run move_thread_1404()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1404 > 1):
        join move_thread_han_1404
        $ 1405 "Until (distance)"
        break
      end
      sync()
    end
    $ 1406 "Linea10_B" "breakAfter"
    movel(Linea10_B_p, a=0.5, v=0.1)
    $ 1407 "bajada_comprobacion"
    $ 1408 "Direction: Base Z-"
    global move_thread_flag_1408=0
    thread move_thread_1408():
      enter_critical
      move_thread_flag_1408 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1408 = 2
      exit_critical
    end
    move_thread_flag_1408 = 0
    move_thread_han_1408 = run move_thread_1408()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1408 > 1):
        join move_thread_han_1408
        $ 1409 "Until (distance)"
        break
      end
      sync()
    end
    $ 1410 "Direction: Base Z-"
    global move_thread_flag_1410=0
    thread move_thread_1410():
      enter_critical
      move_thread_flag_1410 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1410 = 2
      exit_critical
    end
    move_thread_flag_1410 = 0
    move_thread_han_1410 = run move_thread_1410()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1410
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1411 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1412 "Direction: Base Z+"
    global move_thread_flag_1412=0
    thread move_thread_1412():
      enter_critical
      move_thread_flag_1412 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1412 = 2
      exit_critical
    end
    move_thread_flag_1412 = 0
    move_thread_han_1412 = run move_thread_1412()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1412 > 1):
        join move_thread_han_1412
        $ 1413 "Until (distance)"
        break
      end
      sync()
    end
    $ 1414 "AB"
    $ 1415 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1416 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1417 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1418 "barreno_actual≔0"
    global barreno_actual=0
    $ 1419 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1420 "Perforacion"
      $ 1421 "MoveL"
      $ 1422 "internos≔interpolate_pose(Linea10_A, Linea10_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea10_A_p, Linea10_B_p, barreno_actual/barrenos_menos1)
      $ 1423 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1424 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1425 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1426 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1427 "Direction: Base Z-"
      global move_thread_flag_1427=0
      thread move_thread_1427():
        enter_critical
        move_thread_flag_1427 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1427 = 2
        exit_critical
      end
      move_thread_flag_1427 = 0
      move_thread_han_1427 = run move_thread_1427()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1427 > 1):
          join move_thread_han_1427
          $ 1428 "Until (distance)"
          break
        end
        sync()
      end
      $ 1429 "Direction: Base Z-"
      global move_thread_flag_1429=0
      thread move_thread_1429():
        enter_critical
        move_thread_flag_1429 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1429 = 2
        exit_critical
      end
      move_thread_flag_1429 = 0
      move_thread_han_1429 = run move_thread_1429()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1429
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1430 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1431 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1432 "Direction: Base Z+"
      global move_thread_flag_1432=0
      thread move_thread_1432():
        enter_critical
        move_thread_flag_1432 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1432 = 2
        exit_critical
      end
      move_thread_flag_1432 = 0
      move_thread_han_1432 = run move_thread_1432()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1432 > 1):
          join move_thread_han_1432
          $ 1433 "Until (distance)"
          break
        end
        sync()
      end
      $ 1434 "Wait: 0.3"
      sleep(0.3)
      $ 1435 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1436 "Wait: 0.3"
      sleep(0.3)
      $ 1437 "Loop 1 times"
      Loop_118 = 0
      while (Loop_118 < 1):
        $ 1438 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1439 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1440 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1441 "Direction: Base Z+"
        global move_thread_flag_1441=0
        thread move_thread_1441():
          enter_critical
          move_thread_flag_1441 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1441 = 2
          exit_critical
        end
        move_thread_flag_1441 = 0
        move_thread_han_1441 = run move_thread_1441()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1441 > 1):
            join move_thread_han_1441
            $ 1442 "Until (distance)"
            break
          end
          sync()
        end
        $ 1443 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1444 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1445 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_118 = Loop_118 + 1
      end
      $ 1446 "Direction: Base Z+"
      global move_thread_flag_1446=0
      thread move_thread_1446():
        enter_critical
        move_thread_flag_1446 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1446 = 2
        exit_critical
      end
      move_thread_flag_1446 = 0
      move_thread_han_1446 = run move_thread_1446()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1446 > 1):
          join move_thread_han_1446
          $ 1447 "Until (distance)"
          break
        end
        sync()
      end
      $ 1448 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1449 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1452 "Popup: Linea10 con chica Terminada!"
    popup("Linea10 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1453 "Linea11"
    $ 1454 "Marcar_puntos"
    $ 1455 "MoveL"
    $ 1456 "Linea11_A" "breakAfter"
    movel(Linea11_A_p, a=0.5, v=0.1)
    $ 1457 "bajada_comprobacion"
    $ 1458 "Direction: Base Z-"
    global move_thread_flag_1458=0
    thread move_thread_1458():
      enter_critical
      move_thread_flag_1458 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1458 = 2
      exit_critical
    end
    move_thread_flag_1458 = 0
    move_thread_han_1458 = run move_thread_1458()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1458 > 1):
        join move_thread_han_1458
        $ 1459 "Until (distance)"
        break
      end
      sync()
    end
    $ 1460 "Direction: Base Z-"
    global move_thread_flag_1460=0
    thread move_thread_1460():
      enter_critical
      move_thread_flag_1460 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1460 = 2
      exit_critical
    end
    move_thread_flag_1460 = 0
    move_thread_han_1460 = run move_thread_1460()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1460
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1461 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1462 "Direction: Base Z+"
    global move_thread_flag_1462=0
    thread move_thread_1462():
      enter_critical
      move_thread_flag_1462 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1462 = 2
      exit_critical
    end
    move_thread_flag_1462 = 0
    move_thread_han_1462 = run move_thread_1462()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1462 > 1):
        join move_thread_han_1462
        $ 1463 "Until (distance)"
        break
      end
      sync()
    end
    $ 1464 "Linea11_B" "breakAfter"
    movel(Linea11_B_p, a=0.5, v=0.1)
    $ 1465 "bajada_comprobacion"
    $ 1466 "Direction: Base Z-"
    global move_thread_flag_1466=0
    thread move_thread_1466():
      enter_critical
      move_thread_flag_1466 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1466 = 2
      exit_critical
    end
    move_thread_flag_1466 = 0
    move_thread_han_1466 = run move_thread_1466()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1466 > 1):
        join move_thread_han_1466
        $ 1467 "Until (distance)"
        break
      end
      sync()
    end
    $ 1468 "Direction: Base Z-"
    global move_thread_flag_1468=0
    thread move_thread_1468():
      enter_critical
      move_thread_flag_1468 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1468 = 2
      exit_critical
    end
    move_thread_flag_1468 = 0
    move_thread_han_1468 = run move_thread_1468()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1468
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1469 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1470 "Direction: Base Z+"
    global move_thread_flag_1470=0
    thread move_thread_1470():
      enter_critical
      move_thread_flag_1470 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1470 = 2
      exit_critical
    end
    move_thread_flag_1470 = 0
    move_thread_han_1470 = run move_thread_1470()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1470 > 1):
        join move_thread_han_1470
        $ 1471 "Until (distance)"
        break
      end
      sync()
    end
    $ 1472 "AB"
    $ 1473 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1474 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1475 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1476 "barreno_actual≔0"
    global barreno_actual=0
    $ 1477 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1478 "Perforacion"
      $ 1479 "MoveL"
      $ 1482 "internos≔interpolate_pose(Linea11_A, Linea11_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea11_A_p, Linea11_B_p, barreno_actual/barrenos_menos1)
      $ 1483 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1484 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1485 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1486 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1487 "Direction: Base Z-"
      global move_thread_flag_1487=0
      thread move_thread_1487():
        enter_critical
        move_thread_flag_1487 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1487 = 2
        exit_critical
      end
      move_thread_flag_1487 = 0
      move_thread_han_1487 = run move_thread_1487()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1487 > 1):
          join move_thread_han_1487
          $ 1488 "Until (distance)"
          break
        end
        sync()
      end
      $ 1489 "Direction: Base Z-"
      global move_thread_flag_1489=0
      thread move_thread_1489():
        enter_critical
        move_thread_flag_1489 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1489 = 2
        exit_critical
      end
      move_thread_flag_1489 = 0
      move_thread_han_1489 = run move_thread_1489()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1489
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1490 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1491 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1492 "Direction: Base Z+"
      global move_thread_flag_1492=0
      thread move_thread_1492():
        enter_critical
        move_thread_flag_1492 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1492 = 2
        exit_critical
      end
      move_thread_flag_1492 = 0
      move_thread_han_1492 = run move_thread_1492()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1492 > 1):
          join move_thread_han_1492
          $ 1493 "Until (distance)"
          break
        end
        sync()
      end
      $ 1494 "Wait: 0.3"
      sleep(0.3)
      $ 1495 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1496 "Wait: 0.3"
      sleep(0.3)
      $ 1497 "Loop 1 times"
      Loop_122 = 0
      while (Loop_122 < 1):
        $ 1498 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1499 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1500 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1501 "Direction: Base Z+"
        global move_thread_flag_1501=0
        thread move_thread_1501():
          enter_critical
          move_thread_flag_1501 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1501 = 2
          exit_critical
        end
        move_thread_flag_1501 = 0
        move_thread_han_1501 = run move_thread_1501()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1501 > 1):
            join move_thread_han_1501
            $ 1502 "Until (distance)"
            break
          end
          sync()
        end
        $ 1503 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1504 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1505 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_122 = Loop_122 + 1
      end
      $ 1506 "Direction: Base Z+"
      global move_thread_flag_1506=0
      thread move_thread_1506():
        enter_critical
        move_thread_flag_1506 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1506 = 2
        exit_critical
      end
      move_thread_flag_1506 = 0
      move_thread_han_1506 = run move_thread_1506()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1506 > 1):
          join move_thread_han_1506
          $ 1507 "Until (distance)"
          break
        end
        sync()
      end
      $ 1508 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1509 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1512 "Popup: Linea11 con chica Terminada!"
    popup("Linea11 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1513 "Linea12"
    $ 1514 "Marcar_puntos"
    $ 1515 "MoveL"
    $ 1516 "Linea12_A" "breakAfter"
    movel(Linea12_A_p, a=0.5, v=0.1)
    $ 1517 "bajada_comprobacion"
    $ 1518 "Direction: Base Z-"
    global move_thread_flag_1518=0
    thread move_thread_1518():
      enter_critical
      move_thread_flag_1518 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1518 = 2
      exit_critical
    end
    move_thread_flag_1518 = 0
    move_thread_han_1518 = run move_thread_1518()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1518 > 1):
        join move_thread_han_1518
        $ 1519 "Until (distance)"
        break
      end
      sync()
    end
    $ 1520 "Direction: Base Z-"
    global move_thread_flag_1520=0
    thread move_thread_1520():
      enter_critical
      move_thread_flag_1520 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1520 = 2
      exit_critical
    end
    move_thread_flag_1520 = 0
    move_thread_han_1520 = run move_thread_1520()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1520
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1521 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1522 "Direction: Base Z+"
    global move_thread_flag_1522=0
    thread move_thread_1522():
      enter_critical
      move_thread_flag_1522 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1522 = 2
      exit_critical
    end
    move_thread_flag_1522 = 0
    move_thread_han_1522 = run move_thread_1522()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1522 > 1):
        join move_thread_han_1522
        $ 1523 "Until (distance)"
        break
      end
      sync()
    end
    $ 1524 "Linea12_B" "breakAfter"
    movel(Linea12_B_p, a=0.5, v=0.1)
    $ 1525 "bajada_comprobacion"
    $ 1526 "Direction: Base Z-"
    global move_thread_flag_1526=0
    thread move_thread_1526():
      enter_critical
      move_thread_flag_1526 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1526 = 2
      exit_critical
    end
    move_thread_flag_1526 = 0
    move_thread_han_1526 = run move_thread_1526()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1526 > 1):
        join move_thread_han_1526
        $ 1527 "Until (distance)"
        break
      end
      sync()
    end
    $ 1528 "Direction: Base Z-"
    global move_thread_flag_1528=0
    thread move_thread_1528():
      enter_critical
      move_thread_flag_1528 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1528 = 2
      exit_critical
    end
    move_thread_flag_1528 = 0
    move_thread_han_1528 = run move_thread_1528()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1528
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1529 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1530 "Direction: Base Z+"
    global move_thread_flag_1530=0
    thread move_thread_1530():
      enter_critical
      move_thread_flag_1530 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1530 = 2
      exit_critical
    end
    move_thread_flag_1530 = 0
    move_thread_han_1530 = run move_thread_1530()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1530 > 1):
        join move_thread_han_1530
        $ 1531 "Until (distance)"
        break
      end
      sync()
    end
    $ 1532 "AB"
    $ 1533 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1534 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1535 "barrenos_menos1≔7"
    global barrenos_menos1=7
    $ 1536 "barreno_actual≔0"
    global barreno_actual=0
    $ 1537 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1538 "Perforacion"
      $ 1539 "MoveL"
      $ 1540 "If barreno_actual≟2"
      if (barreno_actual == 2):
        $ 1541 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1542 "internos≔interpolate_pose(Linea12_A, Linea12_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea12_A_p, Linea12_B_p, barreno_actual/barrenos_menos1)
      $ 1543 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1544 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1545 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1546 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1547 "Direction: Base Z-"
      global move_thread_flag_1547=0
      thread move_thread_1547():
        enter_critical
        move_thread_flag_1547 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1547 = 2
        exit_critical
      end
      move_thread_flag_1547 = 0
      move_thread_han_1547 = run move_thread_1547()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1547 > 1):
          join move_thread_han_1547
          $ 1548 "Until (distance)"
          break
        end
        sync()
      end
      $ 1549 "Direction: Base Z-"
      global move_thread_flag_1549=0
      thread move_thread_1549():
        enter_critical
        move_thread_flag_1549 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1549 = 2
        exit_critical
      end
      move_thread_flag_1549 = 0
      move_thread_han_1549 = run move_thread_1549()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1549
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1550 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1551 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1552 "Direction: Base Z+"
      global move_thread_flag_1552=0
      thread move_thread_1552():
        enter_critical
        move_thread_flag_1552 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1552 = 2
        exit_critical
      end
      move_thread_flag_1552 = 0
      move_thread_han_1552 = run move_thread_1552()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1552 > 1):
          join move_thread_han_1552
          $ 1553 "Until (distance)"
          break
        end
        sync()
      end
      $ 1554 "Wait: 0.3"
      sleep(0.3)
      $ 1555 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1556 "Wait: 0.3"
      sleep(0.3)
      $ 1557 "Loop 1 times"
      Loop_126 = 0
      while (Loop_126 < 1):
        $ 1558 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1559 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1560 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1561 "Direction: Base Z+"
        global move_thread_flag_1561=0
        thread move_thread_1561():
          enter_critical
          move_thread_flag_1561 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1561 = 2
          exit_critical
        end
        move_thread_flag_1561 = 0
        move_thread_han_1561 = run move_thread_1561()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1561 > 1):
            join move_thread_han_1561
            $ 1562 "Until (distance)"
            break
          end
          sync()
        end
        $ 1563 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1564 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1565 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_126 = Loop_126 + 1
      end
      $ 1566 "Direction: Base Z+"
      global move_thread_flag_1566=0
      thread move_thread_1566():
        enter_critical
        move_thread_flag_1566 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1566 = 2
        exit_critical
      end
      move_thread_flag_1566 = 0
      move_thread_han_1566 = run move_thread_1566()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1566 > 1):
          join move_thread_han_1566
          $ 1567 "Until (distance)"
          break
        end
        sync()
      end
      $ 1568 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1569 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1572 "Popup: Linea12 con chica Terminada!"
    popup("Linea12 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1573 "Linea13"
    $ 1574 "Marcar_puntos"
    $ 1575 "MoveL"
    $ 1576 "Linea13_A" "breakAfter"
    movel(Linea13_A_p, a=0.5, v=0.1)
    $ 1577 "bajada_comprobacion"
    $ 1578 "Direction: Base Z-"
    global move_thread_flag_1578=0
    thread move_thread_1578():
      enter_critical
      move_thread_flag_1578 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1578 = 2
      exit_critical
    end
    move_thread_flag_1578 = 0
    move_thread_han_1578 = run move_thread_1578()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1578 > 1):
        join move_thread_han_1578
        $ 1579 "Until (distance)"
        break
      end
      sync()
    end
    $ 1580 "Direction: Base Z-"
    global move_thread_flag_1580=0
    thread move_thread_1580():
      enter_critical
      move_thread_flag_1580 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1580 = 2
      exit_critical
    end
    move_thread_flag_1580 = 0
    move_thread_han_1580 = run move_thread_1580()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1580
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1581 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1582 "Direction: Base Z+"
    global move_thread_flag_1582=0
    thread move_thread_1582():
      enter_critical
      move_thread_flag_1582 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1582 = 2
      exit_critical
    end
    move_thread_flag_1582 = 0
    move_thread_han_1582 = run move_thread_1582()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1582 > 1):
        join move_thread_han_1582
        $ 1583 "Until (distance)"
        break
      end
      sync()
    end
    $ 1584 "Linea13_B" "breakAfter"
    movel(Linea13_B_p, a=0.5, v=0.1)
    $ 1585 "bajada_comprobacion"
    $ 1586 "Direction: Base Z-"
    global move_thread_flag_1586=0
    thread move_thread_1586():
      enter_critical
      move_thread_flag_1586 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1586 = 2
      exit_critical
    end
    move_thread_flag_1586 = 0
    move_thread_han_1586 = run move_thread_1586()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1586 > 1):
        join move_thread_han_1586
        $ 1587 "Until (distance)"
        break
      end
      sync()
    end
    $ 1588 "Direction: Base Z-"
    global move_thread_flag_1588=0
    thread move_thread_1588():
      enter_critical
      move_thread_flag_1588 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1588 = 2
      exit_critical
    end
    move_thread_flag_1588 = 0
    move_thread_han_1588 = run move_thread_1588()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1588
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1589 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1590 "Direction: Base Z+"
    global move_thread_flag_1590=0
    thread move_thread_1590():
      enter_critical
      move_thread_flag_1590 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1590 = 2
      exit_critical
    end
    move_thread_flag_1590 = 0
    move_thread_han_1590 = run move_thread_1590()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1590 > 1):
        join move_thread_han_1590
        $ 1591 "Until (distance)"
        break
      end
      sync()
    end
    $ 1592 "AB"
    $ 1593 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1594 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1595 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1596 "barreno_actual≔0"
    global barreno_actual=0
    $ 1597 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1598 "Perforacion"
      $ 1599 "MoveL"
      $ 1602 "internos≔interpolate_pose(Linea13_A, Linea13_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea13_A_p, Linea13_B_p, barreno_actual/barrenos_menos1)
      $ 1603 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1604 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1605 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1606 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1607 "Direction: Base Z-"
      global move_thread_flag_1607=0
      thread move_thread_1607():
        enter_critical
        move_thread_flag_1607 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1607 = 2
        exit_critical
      end
      move_thread_flag_1607 = 0
      move_thread_han_1607 = run move_thread_1607()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1607 > 1):
          join move_thread_han_1607
          $ 1608 "Until (distance)"
          break
        end
        sync()
      end
      $ 1609 "Direction: Base Z-"
      global move_thread_flag_1609=0
      thread move_thread_1609():
        enter_critical
        move_thread_flag_1609 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1609 = 2
        exit_critical
      end
      move_thread_flag_1609 = 0
      move_thread_han_1609 = run move_thread_1609()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1609
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1610 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1611 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1612 "Direction: Base Z+"
      global move_thread_flag_1612=0
      thread move_thread_1612():
        enter_critical
        move_thread_flag_1612 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1612 = 2
        exit_critical
      end
      move_thread_flag_1612 = 0
      move_thread_han_1612 = run move_thread_1612()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1612 > 1):
          join move_thread_han_1612
          $ 1613 "Until (distance)"
          break
        end
        sync()
      end
      $ 1614 "Wait: 0.3"
      sleep(0.3)
      $ 1615 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1616 "Wait: 0.3"
      sleep(0.3)
      $ 1617 "Loop 1 times"
      Loop_129 = 0
      while (Loop_129 < 1):
        $ 1618 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1619 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1620 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1621 "Direction: Base Z+"
        global move_thread_flag_1621=0
        thread move_thread_1621():
          enter_critical
          move_thread_flag_1621 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1621 = 2
          exit_critical
        end
        move_thread_flag_1621 = 0
        move_thread_han_1621 = run move_thread_1621()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1621 > 1):
            join move_thread_han_1621
            $ 1622 "Until (distance)"
            break
          end
          sync()
        end
        $ 1623 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1624 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1625 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_129 = Loop_129 + 1
      end
      $ 1626 "Direction: Base Z+"
      global move_thread_flag_1626=0
      thread move_thread_1626():
        enter_critical
        move_thread_flag_1626 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1626 = 2
        exit_critical
      end
      move_thread_flag_1626 = 0
      move_thread_han_1626 = run move_thread_1626()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1626 > 1):
          join move_thread_han_1626
          $ 1627 "Until (distance)"
          break
        end
        sync()
      end
      $ 1628 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1629 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1632 "Popup: Linea13 con chica Terminada!"
    popup("Linea13 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1633 "Linea14"
    $ 1634 "Marcar_puntos"
    $ 1635 "MoveL"
    $ 1636 "Linea14_A" "breakAfter"
    movel(Linea14_A_p, a=0.5, v=0.1)
    $ 1637 "barrenos_hechos≔0"
    global barrenos_hechos=0
    $ 1638 "bajada_comprobacion"
    $ 1639 "Direction: Base Z-"
    global move_thread_flag_1639=0
    thread move_thread_1639():
      enter_critical
      move_thread_flag_1639 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1639 = 2
      exit_critical
    end
    move_thread_flag_1639 = 0
    move_thread_han_1639 = run move_thread_1639()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1639 > 1):
        join move_thread_han_1639
        $ 1640 "Until (distance)"
        break
      end
      sync()
    end
    $ 1641 "Direction: Base Z-"
    global move_thread_flag_1641=0
    thread move_thread_1641():
      enter_critical
      move_thread_flag_1641 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1641 = 2
      exit_critical
    end
    move_thread_flag_1641 = 0
    move_thread_han_1641 = run move_thread_1641()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1641
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1642 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1643 "Direction: Base Z+"
    global move_thread_flag_1643=0
    thread move_thread_1643():
      enter_critical
      move_thread_flag_1643 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1643 = 2
      exit_critical
    end
    move_thread_flag_1643 = 0
    move_thread_han_1643 = run move_thread_1643()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1643 > 1):
        join move_thread_han_1643
        $ 1644 "Until (distance)"
        break
      end
      sync()
    end
    $ 1645 "Linea14_B" "breakAfter"
    movel(Linea14_B_p, a=0.5, v=0.1)
    $ 1646 "bajada_comprobacion"
    $ 1647 "Direction: Base Z-"
    global move_thread_flag_1647=0
    thread move_thread_1647():
      enter_critical
      move_thread_flag_1647 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1647 = 2
      exit_critical
    end
    move_thread_flag_1647 = 0
    move_thread_han_1647 = run move_thread_1647()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1647 > 1):
        join move_thread_han_1647
        $ 1648 "Until (distance)"
        break
      end
      sync()
    end
    $ 1649 "Direction: Base Z-"
    global move_thread_flag_1649=0
    thread move_thread_1649():
      enter_critical
      move_thread_flag_1649 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1649 = 2
      exit_critical
    end
    move_thread_flag_1649 = 0
    move_thread_han_1649 = run move_thread_1649()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1649
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1650 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1651 "Direction: Base Z+"
    global move_thread_flag_1651=0
    thread move_thread_1651():
      enter_critical
      move_thread_flag_1651 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1651 = 2
      exit_critical
    end
    move_thread_flag_1651 = 0
    move_thread_han_1651 = run move_thread_1651()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1651 > 1):
        join move_thread_han_1651
        $ 1652 "Until (distance)"
        break
      end
      sync()
    end
    $ 1653 "AB"
    $ 1654 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1655 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1656 "barrenos_menos1≔5"
    global barrenos_menos1=5
    $ 1657 "barreno_actual≔0"
    global barreno_actual=0
    $ 1658 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1659 "Perforacion"
      $ 1660 "MoveL"
      $ 1661 "If barreno_actual≟3"
      if (barreno_actual == 3):
        $ 1662 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1663 "internos≔interpolate_pose(Linea14_A, Linea14_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea14_A_p, Linea14_B_p, barreno_actual/barrenos_menos1)
      $ 1664 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1665 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1666 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1667 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1668 "Direction: Base Z-"
      global move_thread_flag_1668=0
      thread move_thread_1668():
        enter_critical
        move_thread_flag_1668 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1668 = 2
        exit_critical
      end
      move_thread_flag_1668 = 0
      move_thread_han_1668 = run move_thread_1668()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1668 > 1):
          join move_thread_han_1668
          $ 1669 "Until (distance)"
          break
        end
        sync()
      end
      $ 1670 "Direction: Base Z-"
      global move_thread_flag_1670=0
      thread move_thread_1670():
        enter_critical
        move_thread_flag_1670 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1670 = 2
        exit_critical
      end
      move_thread_flag_1670 = 0
      move_thread_han_1670 = run move_thread_1670()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1670
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1671 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1672 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1673 "Direction: Base Z+"
      global move_thread_flag_1673=0
      thread move_thread_1673():
        enter_critical
        move_thread_flag_1673 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1673 = 2
        exit_critical
      end
      move_thread_flag_1673 = 0
      move_thread_han_1673 = run move_thread_1673()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1673 > 1):
          join move_thread_han_1673
          $ 1674 "Until (distance)"
          break
        end
        sync()
      end
      $ 1675 "Wait: 0.3"
      sleep(0.3)
      $ 1676 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1677 "Wait: 0.3"
      sleep(0.3)
      $ 1678 "Loop 1 times"
      Loop_131 = 0
      while (Loop_131 < 1):
        $ 1679 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1680 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1681 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1682 "Direction: Base Z+"
        global move_thread_flag_1682=0
        thread move_thread_1682():
          enter_critical
          move_thread_flag_1682 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1682 = 2
          exit_critical
        end
        move_thread_flag_1682 = 0
        move_thread_han_1682 = run move_thread_1682()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1682 > 1):
            join move_thread_han_1682
            $ 1683 "Until (distance)"
            break
          end
          sync()
        end
        $ 1684 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1685 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1686 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_131 = Loop_131 + 1
      end
      $ 1687 "Direction: Base Z+"
      global move_thread_flag_1687=0
      thread move_thread_1687():
        enter_critical
        move_thread_flag_1687 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1687 = 2
        exit_critical
      end
      move_thread_flag_1687 = 0
      move_thread_han_1687 = run move_thread_1687()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1687 > 1):
          join move_thread_han_1687
          $ 1688 "Until (distance)"
          break
        end
        sync()
      end
      $ 1689 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1690 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1693 "Popup: Linea14 con chica Terminada!"
    popup("Linea14 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1694 "Linea15"
    $ 1695 "Marcar_puntos"
    $ 1696 "MoveL"
    $ 1697 "Linea15_A" "breakAfter"
    movel(Linea15_A_p, a=0.5, v=0.1)
    $ 1698 "barrenos_hechos≔0"
    global barrenos_hechos=0
    $ 1699 "bajada_comprobacion"
    $ 1700 "Direction: Base Z-"
    global move_thread_flag_1700=0
    thread move_thread_1700():
      enter_critical
      move_thread_flag_1700 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1700 = 2
      exit_critical
    end
    move_thread_flag_1700 = 0
    move_thread_han_1700 = run move_thread_1700()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1700 > 1):
        join move_thread_han_1700
        $ 1701 "Until (distance)"
        break
      end
      sync()
    end
    $ 1702 "Direction: Base Z-"
    global move_thread_flag_1702=0
    thread move_thread_1702():
      enter_critical
      move_thread_flag_1702 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1702 = 2
      exit_critical
    end
    move_thread_flag_1702 = 0
    move_thread_han_1702 = run move_thread_1702()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1702
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1703 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1704 "Direction: Base Z+"
    global move_thread_flag_1704=0
    thread move_thread_1704():
      enter_critical
      move_thread_flag_1704 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1704 = 2
      exit_critical
    end
    move_thread_flag_1704 = 0
    move_thread_han_1704 = run move_thread_1704()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1704 > 1):
        join move_thread_han_1704
        $ 1705 "Until (distance)"
        break
      end
      sync()
    end
    $ 1706 "Linea15_B" "breakAfter"
    movel(Linea15_B_p, a=0.5, v=0.1)
    $ 1707 "bajada_comprobacion"
    $ 1708 "Direction: Base Z-"
    global move_thread_flag_1708=0
    thread move_thread_1708():
      enter_critical
      move_thread_flag_1708 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1708 = 2
      exit_critical
    end
    move_thread_flag_1708 = 0
    move_thread_han_1708 = run move_thread_1708()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1708 > 1):
        join move_thread_han_1708
        $ 1709 "Until (distance)"
        break
      end
      sync()
    end
    $ 1710 "Direction: Base Z-"
    global move_thread_flag_1710=0
    thread move_thread_1710():
      enter_critical
      move_thread_flag_1710 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1710 = 2
      exit_critical
    end
    move_thread_flag_1710 = 0
    move_thread_han_1710 = run move_thread_1710()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1710
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1711 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1712 "Direction: Base Z+"
    global move_thread_flag_1712=0
    thread move_thread_1712():
      enter_critical
      move_thread_flag_1712 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1712 = 2
      exit_critical
    end
    move_thread_flag_1712 = 0
    move_thread_han_1712 = run move_thread_1712()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1712 > 1):
        join move_thread_han_1712
        $ 1713 "Until (distance)"
        break
      end
      sync()
    end
    $ 1714 "AB"
    $ 1715 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1716 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1717 "barrenos_menos1≔3"
    global barrenos_menos1=3
    $ 1718 "barreno_actual≔0"
    global barreno_actual=0
    $ 1719 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1720 "Perforacion"
      $ 1721 "MoveL"
      $ 1724 "internos≔interpolate_pose(Linea15_A, Linea15_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea15_A_p, Linea15_B_p, barreno_actual/barrenos_menos1)
      $ 1725 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1726 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1727 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1728 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1729 "Direction: Base Z-"
      global move_thread_flag_1729=0
      thread move_thread_1729():
        enter_critical
        move_thread_flag_1729 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1729 = 2
        exit_critical
      end
      move_thread_flag_1729 = 0
      move_thread_han_1729 = run move_thread_1729()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1729 > 1):
          join move_thread_han_1729
          $ 1730 "Until (distance)"
          break
        end
        sync()
      end
      $ 1731 "Direction: Base Z-"
      global move_thread_flag_1731=0
      thread move_thread_1731():
        enter_critical
        move_thread_flag_1731 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1731 = 2
        exit_critical
      end
      move_thread_flag_1731 = 0
      move_thread_han_1731 = run move_thread_1731()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1731
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1732 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1733 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1734 "Direction: Base Z+"
      global move_thread_flag_1734=0
      thread move_thread_1734():
        enter_critical
        move_thread_flag_1734 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1734 = 2
        exit_critical
      end
      move_thread_flag_1734 = 0
      move_thread_han_1734 = run move_thread_1734()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1734 > 1):
          join move_thread_han_1734
          $ 1735 "Until (distance)"
          break
        end
        sync()
      end
      $ 1736 "Wait: 0.3"
      sleep(0.3)
      $ 1737 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1738 "Wait: 0.3"
      sleep(0.3)
      $ 1739 "Loop 1 times"
      Loop_133 = 0
      while (Loop_133 < 1):
        $ 1740 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1741 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1742 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1743 "Direction: Base Z+"
        global move_thread_flag_1743=0
        thread move_thread_1743():
          enter_critical
          move_thread_flag_1743 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1743 = 2
          exit_critical
        end
        move_thread_flag_1743 = 0
        move_thread_han_1743 = run move_thread_1743()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1743 > 1):
            join move_thread_han_1743
            $ 1744 "Until (distance)"
            break
          end
          sync()
        end
        $ 1745 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1746 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1747 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_133 = Loop_133 + 1
      end
      $ 1748 "Direction: Base Z+"
      global move_thread_flag_1748=0
      thread move_thread_1748():
        enter_critical
        move_thread_flag_1748 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1748 = 2
        exit_critical
      end
      move_thread_flag_1748 = 0
      move_thread_han_1748 = run move_thread_1748()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1748 > 1):
          join move_thread_han_1748
          $ 1749 "Until (distance)"
          break
        end
        sync()
      end
      $ 1750 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1751 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1754 "Popup: Linea15 con chica Terminada!"
    popup("Linea15 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1755 "Linea16"
    $ 1756 "Marcar_puntos"
    $ 1757 "MoveL"
    $ 1758 "Linea16_A" "breakAfter"
    movel(Linea16_A_p, a=0.5, v=0.1)
    $ 1759 "bajada_comprobacion"
    $ 1760 "Direction: Base Z-"
    global move_thread_flag_1760=0
    thread move_thread_1760():
      enter_critical
      move_thread_flag_1760 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1760 = 2
      exit_critical
    end
    move_thread_flag_1760 = 0
    move_thread_han_1760 = run move_thread_1760()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1760 > 1):
        join move_thread_han_1760
        $ 1761 "Until (distance)"
        break
      end
      sync()
    end
    $ 1762 "Direction: Base Z-"
    global move_thread_flag_1762=0
    thread move_thread_1762():
      enter_critical
      move_thread_flag_1762 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1762 = 2
      exit_critical
    end
    move_thread_flag_1762 = 0
    move_thread_han_1762 = run move_thread_1762()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1762
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1763 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1764 "Direction: Base Z+"
    global move_thread_flag_1764=0
    thread move_thread_1764():
      enter_critical
      move_thread_flag_1764 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1764 = 2
      exit_critical
    end
    move_thread_flag_1764 = 0
    move_thread_han_1764 = run move_thread_1764()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1764 > 1):
        join move_thread_han_1764
        $ 1765 "Until (distance)"
        break
      end
      sync()
    end
    $ 1766 "Linea16_B" "breakAfter"
    movel(Linea16_B_p, a=0.5, v=0.1)
    $ 1767 "bajada_comprobacion"
    $ 1768 "Direction: Base Z-"
    global move_thread_flag_1768=0
    thread move_thread_1768():
      enter_critical
      move_thread_flag_1768 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1768 = 2
      exit_critical
    end
    move_thread_flag_1768 = 0
    move_thread_han_1768 = run move_thread_1768()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1768 > 1):
        join move_thread_han_1768
        $ 1769 "Until (distance)"
        break
      end
      sync()
    end
    $ 1770 "Direction: Base Z-"
    global move_thread_flag_1770=0
    thread move_thread_1770():
      enter_critical
      move_thread_flag_1770 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1770 = 2
      exit_critical
    end
    move_thread_flag_1770 = 0
    move_thread_han_1770 = run move_thread_1770()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1770
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1771 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1772 "Direction: Base Z+"
    global move_thread_flag_1772=0
    thread move_thread_1772():
      enter_critical
      move_thread_flag_1772 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1772 = 2
      exit_critical
    end
    move_thread_flag_1772 = 0
    move_thread_han_1772 = run move_thread_1772()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1772 > 1):
        join move_thread_han_1772
        $ 1773 "Until (distance)"
        break
      end
      sync()
    end
    $ 1774 "AB"
    $ 1775 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1776 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1777 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 1778 "barreno_actual≔0"
    global barreno_actual=0
    $ 1779 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1780 "Perforacion"
      $ 1781 "MoveL"
      $ 1784 "internos≔interpolate_pose(Linea16_A, Linea16_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea16_A_p, Linea16_B_p, barreno_actual/barrenos_menos1)
      $ 1785 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1786 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1787 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1788 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1789 "Direction: Base Z-"
      global move_thread_flag_1789=0
      thread move_thread_1789():
        enter_critical
        move_thread_flag_1789 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1789 = 2
        exit_critical
      end
      move_thread_flag_1789 = 0
      move_thread_han_1789 = run move_thread_1789()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1789 > 1):
          join move_thread_han_1789
          $ 1790 "Until (distance)"
          break
        end
        sync()
      end
      $ 1791 "Direction: Base Z-"
      global move_thread_flag_1791=0
      thread move_thread_1791():
        enter_critical
        move_thread_flag_1791 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1791 = 2
        exit_critical
      end
      move_thread_flag_1791 = 0
      move_thread_han_1791 = run move_thread_1791()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1791
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1792 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1793 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1794 "Direction: Base Z+"
      global move_thread_flag_1794=0
      thread move_thread_1794():
        enter_critical
        move_thread_flag_1794 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1794 = 2
        exit_critical
      end
      move_thread_flag_1794 = 0
      move_thread_han_1794 = run move_thread_1794()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1794 > 1):
          join move_thread_han_1794
          $ 1795 "Until (distance)"
          break
        end
        sync()
      end
      $ 1796 "Wait: 0.3"
      sleep(0.3)
      $ 1797 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1798 "Wait: 0.3"
      sleep(0.3)
      $ 1799 "Loop 1 times"
      Loop_135 = 0
      while (Loop_135 < 1):
        $ 1800 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1801 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1802 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1803 "Direction: Base Z+"
        global move_thread_flag_1803=0
        thread move_thread_1803():
          enter_critical
          move_thread_flag_1803 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1803 = 2
          exit_critical
        end
        move_thread_flag_1803 = 0
        move_thread_han_1803 = run move_thread_1803()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1803 > 1):
            join move_thread_han_1803
            $ 1804 "Until (distance)"
            break
          end
          sync()
        end
        $ 1805 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1806 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1807 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_135 = Loop_135 + 1
      end
      $ 1808 "Direction: Base Z+"
      global move_thread_flag_1808=0
      thread move_thread_1808():
        enter_critical
        move_thread_flag_1808 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1808 = 2
        exit_critical
      end
      move_thread_flag_1808 = 0
      move_thread_han_1808 = run move_thread_1808()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1808 > 1):
          join move_thread_han_1808
          $ 1809 "Until (distance)"
          break
        end
        sync()
      end
      $ 1810 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1811 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1814 "Popup: Linea16 con chica Terminada!"
    popup("Linea16 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1815 "Linea17"
    $ 1816 "Marcar_puntos"
    $ 1817 "MoveL"
    $ 1818 "Linea17_A" "breakAfter"
    movel(Linea17_A_p, a=0.5, v=0.1)
    $ 1819 "bajada_comprobacion"
    $ 1820 "Direction: Base Z-"
    global move_thread_flag_1820=0
    thread move_thread_1820():
      enter_critical
      move_thread_flag_1820 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1820 = 2
      exit_critical
    end
    move_thread_flag_1820 = 0
    move_thread_han_1820 = run move_thread_1820()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1820 > 1):
        join move_thread_han_1820
        $ 1821 "Until (distance)"
        break
      end
      sync()
    end
    $ 1822 "Direction: Base Z-"
    global move_thread_flag_1822=0
    thread move_thread_1822():
      enter_critical
      move_thread_flag_1822 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1822 = 2
      exit_critical
    end
    move_thread_flag_1822 = 0
    move_thread_han_1822 = run move_thread_1822()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1822
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1823 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1824 "Direction: Base Z+"
    global move_thread_flag_1824=0
    thread move_thread_1824():
      enter_critical
      move_thread_flag_1824 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1824 = 2
      exit_critical
    end
    move_thread_flag_1824 = 0
    move_thread_han_1824 = run move_thread_1824()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1824 > 1):
        join move_thread_han_1824
        $ 1825 "Until (distance)"
        break
      end
      sync()
    end
    $ 1826 "Linea17_B" "breakAfter"
    movel(Linea17_B_p, a=0.5, v=0.1)
    $ 1827 "bajada_comprobacion"
    $ 1828 "Direction: Base Z-"
    global move_thread_flag_1828=0
    thread move_thread_1828():
      enter_critical
      move_thread_flag_1828 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1828 = 2
      exit_critical
    end
    move_thread_flag_1828 = 0
    move_thread_han_1828 = run move_thread_1828()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1828 > 1):
        join move_thread_han_1828
        $ 1829 "Until (distance)"
        break
      end
      sync()
    end
    $ 1830 "Direction: Base Z-"
    global move_thread_flag_1830=0
    thread move_thread_1830():
      enter_critical
      move_thread_flag_1830 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1830 = 2
      exit_critical
    end
    move_thread_flag_1830 = 0
    move_thread_han_1830 = run move_thread_1830()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1830
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1831 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1832 "Direction: Base Z+"
    global move_thread_flag_1832=0
    thread move_thread_1832():
      enter_critical
      move_thread_flag_1832 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1832 = 2
      exit_critical
    end
    move_thread_flag_1832 = 0
    move_thread_han_1832 = run move_thread_1832()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1832 > 1):
        join move_thread_han_1832
        $ 1833 "Until (distance)"
        break
      end
      sync()
    end
    $ 1834 "AB"
    $ 1835 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1836 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1837 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1838 "barreno_actual≔0"
    global barreno_actual=0
    $ 1839 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1840 "Perforacion"
      $ 1841 "MoveL"
      $ 1844 "internos≔interpolate_pose(Linea17_A, Linea17_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea17_A_p, Linea17_B_p, barreno_actual/barrenos_menos1)
      $ 1845 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1846 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1847 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1848 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1849 "Direction: Base Z-"
      global move_thread_flag_1849=0
      thread move_thread_1849():
        enter_critical
        move_thread_flag_1849 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1849 = 2
        exit_critical
      end
      move_thread_flag_1849 = 0
      move_thread_han_1849 = run move_thread_1849()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1849 > 1):
          join move_thread_han_1849
          $ 1850 "Until (distance)"
          break
        end
        sync()
      end
      $ 1851 "Direction: Base Z-"
      global move_thread_flag_1851=0
      thread move_thread_1851():
        enter_critical
        move_thread_flag_1851 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1851 = 2
        exit_critical
      end
      move_thread_flag_1851 = 0
      move_thread_han_1851 = run move_thread_1851()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1851
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1852 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1853 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1854 "Direction: Base Z+"
      global move_thread_flag_1854=0
      thread move_thread_1854():
        enter_critical
        move_thread_flag_1854 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1854 = 2
        exit_critical
      end
      move_thread_flag_1854 = 0
      move_thread_han_1854 = run move_thread_1854()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1854 > 1):
          join move_thread_han_1854
          $ 1855 "Until (distance)"
          break
        end
        sync()
      end
      $ 1856 "Wait: 0.3"
      sleep(0.3)
      $ 1857 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1858 "Wait: 0.3"
      sleep(0.3)
      $ 1859 "Loop 1 times"
      Loop_137 = 0
      while (Loop_137 < 1):
        $ 1860 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1861 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1862 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1863 "Direction: Base Z+"
        global move_thread_flag_1863=0
        thread move_thread_1863():
          enter_critical
          move_thread_flag_1863 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1863 = 2
          exit_critical
        end
        move_thread_flag_1863 = 0
        move_thread_han_1863 = run move_thread_1863()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1863 > 1):
            join move_thread_han_1863
            $ 1864 "Until (distance)"
            break
          end
          sync()
        end
        $ 1865 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1866 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1867 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_137 = Loop_137 + 1
      end
      $ 1868 "Direction: Base Z+"
      global move_thread_flag_1868=0
      thread move_thread_1868():
        enter_critical
        move_thread_flag_1868 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_1868 = 2
        exit_critical
      end
      move_thread_flag_1868 = 0
      move_thread_han_1868 = run move_thread_1868()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1868 > 1):
          join move_thread_han_1868
          $ 1869 "Until (distance)"
          break
        end
        sync()
      end
      $ 1870 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1871 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1874 "Popup: Linea17 con chica Terminada!"
    popup("Linea17 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1875 "Linea18"
    $ 1876 "Marcar_puntos"
    $ 1877 "MoveL"
    $ 1878 "Linea18_A" "breakAfter"
    movel(Linea18_A_p, a=0.5, v=0.1)
    $ 1879 "bajada_comprobacion"
    $ 1880 "Direction: Base Z-"
    global move_thread_flag_1880=0
    thread move_thread_1880():
      enter_critical
      move_thread_flag_1880 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1880 = 2
      exit_critical
    end
    move_thread_flag_1880 = 0
    move_thread_han_1880 = run move_thread_1880()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1880 > 1):
        join move_thread_han_1880
        $ 1881 "Until (distance)"
        break
      end
      sync()
    end
    $ 1882 "Direction: Base Z-"
    global move_thread_flag_1882=0
    thread move_thread_1882():
      enter_critical
      move_thread_flag_1882 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1882 = 2
      exit_critical
    end
    move_thread_flag_1882 = 0
    move_thread_han_1882 = run move_thread_1882()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1882
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1883 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1884 "Direction: Base Z+"
    global move_thread_flag_1884=0
    thread move_thread_1884():
      enter_critical
      move_thread_flag_1884 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1884 = 2
      exit_critical
    end
    move_thread_flag_1884 = 0
    move_thread_han_1884 = run move_thread_1884()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1884 > 1):
        join move_thread_han_1884
        $ 1885 "Until (distance)"
        break
      end
      sync()
    end
    $ 1886 "Linea18_AB" "breakAfter"
    movel(Linea18_AB_p, a=0.5, v=0.1)
    $ 1888 "bajada_comprobacion"
    $ 1889 "Direction: Base Z-"
    global move_thread_flag_1889=0
    thread move_thread_1889():
      enter_critical
      move_thread_flag_1889 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1889 = 2
      exit_critical
    end
    move_thread_flag_1889 = 0
    move_thread_han_1889 = run move_thread_1889()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1889 > 1):
        join move_thread_han_1889
        $ 1890 "Until (distance)"
        break
      end
      sync()
    end
    $ 1891 "Direction: Base Z-"
    global move_thread_flag_1891=0
    thread move_thread_1891():
      enter_critical
      move_thread_flag_1891 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1891 = 2
      exit_critical
    end
    move_thread_flag_1891 = 0
    move_thread_han_1891 = run move_thread_1891()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1891
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1892 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1893 "Direction: Base Z+"
    global move_thread_flag_1893=0
    thread move_thread_1893():
      enter_critical
      move_thread_flag_1893 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1893 = 2
      exit_critical
    end
    move_thread_flag_1893 = 0
    move_thread_han_1893 = run move_thread_1893()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1893 > 1):
        join move_thread_han_1893
        $ 1894 "Until (distance)"
        break
      end
      sync()
    end
    $ 1895 "AB"
    $ 1896 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1897 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1898 "barrenos_menos1≔9"
    global barrenos_menos1=9
    $ 1899 "barreno_actual≔0"
    global barreno_actual=0
    $ 1900 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1901 "Perforacion"
      $ 1902 "MoveL"
      $ 1903 "If barreno_actual≟6 "
      if (barreno_actual == 6 ):
        $ 1904 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1905 "internos≔interpolate_pose(Linea18_A, Linea18_AB, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea18_A_p, Linea18_AB_p, barreno_actual/barrenos_menos1)
      $ 1906 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1907 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1908 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1909 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1910 "Direction: Base Z-"
      global move_thread_flag_1910=0
      thread move_thread_1910():
        enter_critical
        move_thread_flag_1910 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1910 = 2
        exit_critical
      end
      move_thread_flag_1910 = 0
      move_thread_han_1910 = run move_thread_1910()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1910 > 1):
          join move_thread_han_1910
          $ 1911 "Until (distance)"
          break
        end
        sync()
      end
      $ 1912 "Direction: Base Z-"
      global move_thread_flag_1912=0
      thread move_thread_1912():
        enter_critical
        move_thread_flag_1912 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1912 = 2
        exit_critical
      end
      move_thread_flag_1912 = 0
      move_thread_han_1912 = run move_thread_1912()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1912
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1913 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1914 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1915 "Direction: Base Z+"
      global move_thread_flag_1915=0
      thread move_thread_1915():
        enter_critical
        move_thread_flag_1915 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1915 = 2
        exit_critical
      end
      move_thread_flag_1915 = 0
      move_thread_han_1915 = run move_thread_1915()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1915 > 1):
          join move_thread_han_1915
          $ 1916 "Until (distance)"
          break
        end
        sync()
      end
      $ 1917 "Wait: 0.3"
      sleep(0.3)
      $ 1918 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1919 "Wait: 0.3"
      sleep(0.3)
      $ 1920 "Loop 1 times"
      Loop_139 = 0
      while (Loop_139 < 1):
        $ 1921 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1922 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1923 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1924 "Direction: Base Z+"
        global move_thread_flag_1924=0
        thread move_thread_1924():
          enter_critical
          move_thread_flag_1924 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1924 = 2
          exit_critical
        end
        move_thread_flag_1924 = 0
        move_thread_han_1924 = run move_thread_1924()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1924 > 1):
            join move_thread_han_1924
            $ 1925 "Until (distance)"
            break
          end
          sync()
        end
        $ 1926 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1927 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1928 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_139 = Loop_139 + 1
      end
      $ 1929 "Direction: Base Z+"
      global move_thread_flag_1929=0
      thread move_thread_1929():
        enter_critical
        move_thread_flag_1929 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1929 = 2
        exit_critical
      end
      move_thread_flag_1929 = 0
      move_thread_han_1929 = run move_thread_1929()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1929 > 1):
          join move_thread_han_1929
          $ 1930 "Until (distance)"
          break
        end
        sync()
      end
      $ 1931 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1932 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1933 "Call Quitar_broca"
      Quitar_broca()
      $ 1934 "Call Poner_broca"
      Poner_broca()
    end
    $ 1935 "Popup: Linea18 con chica Terminada!"
    popup("Linea18 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1936 "Linea18B"
    $ 1937 "Marcar_puntos"
    $ 1938 "MoveL"
    $ 1939 "Linea18_BA" "breakAfter"
    movel(Linea18_BA_p, a=0.5, v=0.1)
    $ 1940 "bajada_comprobacion"
    $ 1941 "Direction: Base Z-"
    global move_thread_flag_1941=0
    thread move_thread_1941():
      enter_critical
      move_thread_flag_1941 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1941 = 2
      exit_critical
    end
    move_thread_flag_1941 = 0
    move_thread_han_1941 = run move_thread_1941()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1941 > 1):
        join move_thread_han_1941
        $ 1942 "Until (distance)"
        break
      end
      sync()
    end
    $ 1943 "Direction: Base Z-"
    global move_thread_flag_1943=0
    thread move_thread_1943():
      enter_critical
      move_thread_flag_1943 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1943 = 2
      exit_critical
    end
    move_thread_flag_1943 = 0
    move_thread_han_1943 = run move_thread_1943()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1943
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1944 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1945 "Direction: Base Z+"
    global move_thread_flag_1945=0
    thread move_thread_1945():
      enter_critical
      move_thread_flag_1945 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1945 = 2
      exit_critical
    end
    move_thread_flag_1945 = 0
    move_thread_han_1945 = run move_thread_1945()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1945 > 1):
        join move_thread_han_1945
        $ 1946 "Until (distance)"
        break
      end
      sync()
    end
    $ 1948 "Linea18_B" "breakAfter"
    movel(Linea18_B_p, a=0.5, v=0.1)
    $ 1949 "bajada_comprobacion"
    $ 1950 "Direction: Base Z-"
    global move_thread_flag_1950=0
    thread move_thread_1950():
      enter_critical
      move_thread_flag_1950 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1950 = 2
      exit_critical
    end
    move_thread_flag_1950 = 0
    move_thread_han_1950 = run move_thread_1950()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1950 > 1):
        join move_thread_han_1950
        $ 1951 "Until (distance)"
        break
      end
      sync()
    end
    $ 1952 "Direction: Base Z-"
    global move_thread_flag_1952=0
    thread move_thread_1952():
      enter_critical
      move_thread_flag_1952 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1952 = 2
      exit_critical
    end
    move_thread_flag_1952 = 0
    move_thread_han_1952 = run move_thread_1952()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1952
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1953 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1954 "Direction: Base Z+"
    global move_thread_flag_1954=0
    thread move_thread_1954():
      enter_critical
      move_thread_flag_1954 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1954 = 2
      exit_critical
    end
    move_thread_flag_1954 = 0
    move_thread_han_1954 = run move_thread_1954()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1954 > 1):
        join move_thread_han_1954
        $ 1955 "Until (distance)"
        break
      end
      sync()
    end
    $ 1956 "AB"
    $ 1957 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1958 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1959 "barrenos_menos1≔9"
    global barrenos_menos1=9
    $ 1960 "barreno_actual≔8"
    global barreno_actual=8
    $ 1961 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1962 "Perforacion"
      $ 1963 "MoveL"
      $ 1964 "If barreno_actual≟3"
      if (barreno_actual == 3):
        $ 1965 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1966 "internos≔interpolate_pose(Linea18_BA, Linea18_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea18_BA_p, Linea18_B_p, barreno_actual/barrenos_menos1)
      $ 1967 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1968 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1969 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1970 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1971 "Direction: Base Z-"
      global move_thread_flag_1971=0
      thread move_thread_1971():
        enter_critical
        move_thread_flag_1971 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1971 = 2
        exit_critical
      end
      move_thread_flag_1971 = 0
      move_thread_han_1971 = run move_thread_1971()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1971 > 1):
          join move_thread_han_1971
          $ 1972 "Until (distance)"
          break
        end
        sync()
      end
      $ 1973 "Direction: Base Z-"
      global move_thread_flag_1973=0
      thread move_thread_1973():
        enter_critical
        move_thread_flag_1973 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1973 = 2
        exit_critical
      end
      move_thread_flag_1973 = 0
      move_thread_han_1973 = run move_thread_1973()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1973
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1974 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1975 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1976 "Direction: Base Z+"
      global move_thread_flag_1976=0
      thread move_thread_1976():
        enter_critical
        move_thread_flag_1976 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1976 = 2
        exit_critical
      end
      move_thread_flag_1976 = 0
      move_thread_han_1976 = run move_thread_1976()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1976 > 1):
          join move_thread_han_1976
          $ 1977 "Until (distance)"
          break
        end
        sync()
      end
      $ 1978 "Wait: 0.3"
      sleep(0.3)
      $ 1979 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1980 "Wait: 0.3"
      sleep(0.3)
      $ 1981 "Loop 1 times"
      Loop_28 = 0
      while (Loop_28 < 1):
        $ 1982 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1983 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1984 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1985 "Direction: Base Z+"
        global move_thread_flag_1985=0
        thread move_thread_1985():
          enter_critical
          move_thread_flag_1985 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1985 = 2
          exit_critical
        end
        move_thread_flag_1985 = 0
        move_thread_han_1985 = run move_thread_1985()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1985 > 1):
            join move_thread_han_1985
            $ 1986 "Until (distance)"
            break
          end
          sync()
        end
        $ 1987 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1988 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1989 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_28 = Loop_28 + 1
      end
      $ 1990 "Direction: Base Z+"
      global move_thread_flag_1990=0
      thread move_thread_1990():
        enter_critical
        move_thread_flag_1990 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1990 = 2
        exit_critical
      end
      move_thread_flag_1990 = 0
      move_thread_han_1990 = run move_thread_1990()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1990 > 1):
          join move_thread_han_1990
          $ 1991 "Until (distance)"
          break
        end
        sync()
      end
      $ 1992 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1993 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1994 "Call Quitar_broca"
      Quitar_broca()
      $ 1995 "Call Poner_broca"
      Poner_broca()
    end
    $ 1996 "Popup: Linea18B con chica Terminada!"
    popup("Linea18B con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1997 "cambiar_broca≔ True "
    global cambiar_broca=  True  
    $ 3166 "Posicion3"
    $ 3167 "Inicio"
    $ 3168 "eje7≔3"
    global eje7=3
    $ 3169 "MoveL"
    $ 3170 "Home3" "breakAfter"
    movel(Home3_p, a=1.2, v=0.25)
    $ 3171 "SeatTracks"
    $ 3172 "Broca_1"
    $ 3173 "Linea3"
    $ 3174 "Marcar_puntos"
    $ 3175 "MoveL"
    $ 3176 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3177 "Linea3_A" "breakAfter"
    movel(Linea3_A_p, a=0.5, v=0.1)
    $ 3178 "Linea3_B" "breakAfter"
    movel(Linea3_B_p, a=0.5, v=0.1)
    $ 3179 "Linea3_C" "breakAfter"
    movel(Linea3_C_p, a=0.5, v=0.1)
    $ 3180 "Linea3_D" "breakAfter"
    movel(Linea3_D_p, a=0.5, v=0.1)
    $ 3181 "Linea3_E" "breakAfter"
    movel(Linea3_E_p, a=0.5, v=0.1)
    $ 3182 "Linea3_F" "breakAfter"
    movel(Linea3_F_p, a=0.5, v=0.1)
    $ 3183 "AB"
    $ 3184 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3185 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3186 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3187 "barreno_actual≔0"
    global barreno_actual=0
    $ 3188 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3189 "Perforacion"
      $ 3190 "MoveL"
      $ 3191 "internos≔interpolate_pose(Linea3_A, Linea3_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_A_p, Linea3_B_p, barreno_actual/barrenos_menos1)
      $ 3192 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3193 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3194 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3195 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3196 "Direction: Base Z-"
      global move_thread_flag_3196=0
      thread move_thread_3196():
        enter_critical
        move_thread_flag_3196 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3196 = 2
        exit_critical
      end
      move_thread_flag_3196 = 0
      move_thread_han_3196 = run move_thread_3196()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3196 > 1):
          join move_thread_han_3196
          $ 3197 "Until (distance)"
          break
        end
        sync()
      end
      $ 3198 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3199 "Direction: Base Z+"
      global move_thread_flag_3199=0
      thread move_thread_3199():
        enter_critical
        move_thread_flag_3199 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3199 = 2
        exit_critical
      end
      move_thread_flag_3199 = 0
      move_thread_han_3199 = run move_thread_3199()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3199 > 1):
          join move_thread_han_3199
          $ 3200 "Until (distance)"
          break
        end
        sync()
      end
      $ 3201 "Wait: 0.3"
      sleep(0.3)
      $ 3202 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3203 "Wait: 0.3"
      sleep(0.3)
      $ 3204 "Loop 3 times"
      Loop_21 = 0
      while (Loop_21 < 3):
        $ 3205 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3206 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3207 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3208 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3209 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_21 = Loop_21 + 1
      end
      $ 3210 "Direction: Base Z+"
      global move_thread_flag_3210=0
      thread move_thread_3210():
        enter_critical
        move_thread_flag_3210 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3210 = 2
        exit_critical
      end
      move_thread_flag_3210 = 0
      move_thread_han_3210 = run move_thread_3210()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3210 > 1):
          join move_thread_han_3210
          $ 3211 "Until (distance)"
          break
        end
        sync()
      end
      $ 3212 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3213 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3216 "CD"
    $ 3217 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3218 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3219 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3220 "barreno_actual≔0"
    global barreno_actual=0
    $ 3221 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3222 "Perforacion"
      $ 3223 "MoveL"
      $ 3224 "internos≔interpolate_pose(Linea3_C, Linea3_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_C_p, Linea3_D_p, barreno_actual/barrenos_menos1)
      $ 3225 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3226 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3227 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3228 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3229 "Direction: Base Z-"
      global move_thread_flag_3229=0
      thread move_thread_3229():
        enter_critical
        move_thread_flag_3229 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3229 = 2
        exit_critical
      end
      move_thread_flag_3229 = 0
      move_thread_han_3229 = run move_thread_3229()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3229 > 1):
          join move_thread_han_3229
          $ 3230 "Until (distance)"
          break
        end
        sync()
      end
      $ 3231 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3232 "Direction: Base Z+"
      global move_thread_flag_3232=0
      thread move_thread_3232():
        enter_critical
        move_thread_flag_3232 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3232 = 2
        exit_critical
      end
      move_thread_flag_3232 = 0
      move_thread_han_3232 = run move_thread_3232()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3232 > 1):
          join move_thread_han_3232
          $ 3233 "Until (distance)"
          break
        end
        sync()
      end
      $ 3234 "Wait: 0.3"
      sleep(0.3)
      $ 3235 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3236 "Wait: 0.3"
      sleep(0.3)
      $ 3237 "Loop 3 times"
      Loop_24 = 0
      while (Loop_24 < 3):
        $ 3238 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3239 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3240 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3241 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3242 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_24 = Loop_24 + 1
      end
      $ 3243 "Direction: Base Z+"
      global move_thread_flag_3243=0
      thread move_thread_3243():
        enter_critical
        move_thread_flag_3243 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3243 = 2
        exit_critical
      end
      move_thread_flag_3243 = 0
      move_thread_han_3243 = run move_thread_3243()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3243 > 1):
          join move_thread_han_3243
          $ 3244 "Until (distance)"
          break
        end
        sync()
      end
      $ 3245 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3246 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3249 "EF"
    $ 3250 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3251 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3252 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3253 "barreno_actual≔0"
    global barreno_actual=0
    $ 3254 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3255 "Perforacion"
      $ 3256 "MoveL"
      $ 3257 "internos≔interpolate_pose(Linea3_E, Linea3_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_E_p, Linea3_F_p, barreno_actual/barrenos_menos1)
      $ 3258 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3259 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3260 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3261 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3262 "Direction: Base Z-"
      global move_thread_flag_3262=0
      thread move_thread_3262():
        enter_critical
        move_thread_flag_3262 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3262 = 2
        exit_critical
      end
      move_thread_flag_3262 = 0
      move_thread_han_3262 = run move_thread_3262()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3262 > 1):
          join move_thread_han_3262
          $ 3263 "Until (distance)"
          break
        end
        sync()
      end
      $ 3264 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3265 "Direction: Base Z+"
      global move_thread_flag_3265=0
      thread move_thread_3265():
        enter_critical
        move_thread_flag_3265 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3265 = 2
        exit_critical
      end
      move_thread_flag_3265 = 0
      move_thread_han_3265 = run move_thread_3265()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3265 > 1):
          join move_thread_han_3265
          $ 3266 "Until (distance)"
          break
        end
        sync()
      end
      $ 3267 "Wait: 0.3"
      sleep(0.3)
      $ 3268 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3269 "Wait: 0.3"
      sleep(0.3)
      $ 3270 "Loop 3 times"
      Loop_46 = 0
      while (Loop_46 < 3):
        $ 3271 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3272 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3273 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3274 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3275 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_46 = Loop_46 + 1
      end
      $ 3276 "Direction: Base Z+"
      global move_thread_flag_3276=0
      thread move_thread_3276():
        enter_critical
        move_thread_flag_3276 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3276 = 2
        exit_critical
      end
      move_thread_flag_3276 = 0
      move_thread_han_3276 = run move_thread_3276()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3276 > 1):
          join move_thread_han_3276
          $ 3277 "Until (distance)"
          break
        end
        sync()
      end
      $ 3278 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3279 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3282 "Popup: Linea3 con chica Terminada!"
    popup("Linea3 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 3283 "Linea4"
    $ 3284 "Marcar_puntos"
    $ 3285 "MoveL"
    $ 3286 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3287 "Linea4_A" "breakAfter"
    movel(Linea4_A_p, a=0.5, v=0.1)
    $ 3288 "Linea4_B" "breakAfter"
    movel(Linea4_B_p, a=0.5, v=0.1)
    $ 3289 "Linea4_C" "breakAfter"
    movel(Linea4_C_p, a=0.5, v=0.1)
    $ 3290 "Linea4_D" "breakAfter"
    movel(Linea4_D_p, a=0.5, v=0.1)
    $ 3291 "Linea4_E" "breakAfter"
    movel(Linea4_E_p, a=0.5, v=0.1)
    $ 3292 "Linea4_F" "breakAfter"
    movel(Linea4_F_p, a=0.5, v=0.1)
    $ 3293 "AB"
    $ 3294 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3295 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3296 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3297 "barreno_actual≔0"
    global barreno_actual=0
    $ 3298 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3299 "Perforacion"
      $ 3300 "MoveL"
      $ 3301 "internos≔interpolate_pose(Linea4_A, Linea4_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_A_p, Linea4_B_p, barreno_actual/barrenos_menos1)
      $ 3302 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3303 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3304 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3305 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3306 "Direction: Base Z-"
      global move_thread_flag_3306=0
      thread move_thread_3306():
        enter_critical
        move_thread_flag_3306 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3306 = 2
        exit_critical
      end
      move_thread_flag_3306 = 0
      move_thread_han_3306 = run move_thread_3306()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3306 > 1):
          join move_thread_han_3306
          $ 3307 "Until (distance)"
          break
        end
        sync()
      end
      $ 3308 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3309 "Direction: Base Z+"
      global move_thread_flag_3309=0
      thread move_thread_3309():
        enter_critical
        move_thread_flag_3309 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3309 = 2
        exit_critical
      end
      move_thread_flag_3309 = 0
      move_thread_han_3309 = run move_thread_3309()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3309 > 1):
          join move_thread_han_3309
          $ 3310 "Until (distance)"
          break
        end
        sync()
      end
      $ 3311 "Wait: 0.3"
      sleep(0.3)
      $ 3312 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3313 "Wait: 0.3"
      sleep(0.3)
      $ 3314 "Loop 3 times"
      Loop_50 = 0
      while (Loop_50 < 3):
        $ 3315 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3316 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3317 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3318 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3319 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_50 = Loop_50 + 1
      end
      $ 3320 "Direction: Base Z+"
      global move_thread_flag_3320=0
      thread move_thread_3320():
        enter_critical
        move_thread_flag_3320 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3320 = 2
        exit_critical
      end
      move_thread_flag_3320 = 0
      move_thread_han_3320 = run move_thread_3320()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3320 > 1):
          join move_thread_han_3320
          $ 3321 "Until (distance)"
          break
        end
        sync()
      end
      $ 3322 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3323 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3326 "CD"
    $ 3327 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3328 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3329 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3330 "barreno_actual≔0"
    global barreno_actual=0
    $ 3331 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3332 "Perforacion"
      $ 3333 "MoveL"
      $ 3334 "internos≔interpolate_pose(Linea4_C, Linea4_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_C_p, Linea4_D_p, barreno_actual/barrenos_menos1)
      $ 3335 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3336 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3337 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3338 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3339 "Direction: Base Z-"
      global move_thread_flag_3339=0
      thread move_thread_3339():
        enter_critical
        move_thread_flag_3339 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3339 = 2
        exit_critical
      end
      move_thread_flag_3339 = 0
      move_thread_han_3339 = run move_thread_3339()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3339 > 1):
          join move_thread_han_3339
          $ 3340 "Until (distance)"
          break
        end
        sync()
      end
      $ 3341 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3342 "Direction: Base Z+"
      global move_thread_flag_3342=0
      thread move_thread_3342():
        enter_critical
        move_thread_flag_3342 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3342 = 2
        exit_critical
      end
      move_thread_flag_3342 = 0
      move_thread_han_3342 = run move_thread_3342()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3342 > 1):
          join move_thread_han_3342
          $ 3343 "Until (distance)"
          break
        end
        sync()
      end
      $ 3344 "Wait: 0.3"
      sleep(0.3)
      $ 3345 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3346 "Wait: 0.3"
      sleep(0.3)
      $ 3347 "Loop 3 times"
      Loop_53 = 0
      while (Loop_53 < 3):
        $ 3348 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3349 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3350 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3351 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3352 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_53 = Loop_53 + 1
      end
      $ 3353 "Direction: Base Z+"
      global move_thread_flag_3353=0
      thread move_thread_3353():
        enter_critical
        move_thread_flag_3353 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3353 = 2
        exit_critical
      end
      move_thread_flag_3353 = 0
      move_thread_han_3353 = run move_thread_3353()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3353 > 1):
          join move_thread_han_3353
          $ 3354 "Until (distance)"
          break
        end
        sync()
      end
      $ 3355 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3356 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3359 "EF"
    $ 3360 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3361 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3362 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3363 "barreno_actual≔0"
    global barreno_actual=0
    $ 3364 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3365 "Perforacion"
      $ 3366 "MoveL"
      $ 3367 "internos≔interpolate_pose(Linea4_E, Linea4_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_E_p, Linea4_F_p, barreno_actual/barrenos_menos1)
      $ 3368 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3369 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3370 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3371 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3372 "Direction: Base Z-"
      global move_thread_flag_3372=0
      thread move_thread_3372():
        enter_critical
        move_thread_flag_3372 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3372 = 2
        exit_critical
      end
      move_thread_flag_3372 = 0
      move_thread_han_3372 = run move_thread_3372()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3372 > 1):
          join move_thread_han_3372
          $ 3373 "Until (distance)"
          break
        end
        sync()
      end
      $ 3374 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3375 "Direction: Base Z+"
      global move_thread_flag_3375=0
      thread move_thread_3375():
        enter_critical
        move_thread_flag_3375 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3375 = 2
        exit_critical
      end
      move_thread_flag_3375 = 0
      move_thread_han_3375 = run move_thread_3375()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3375 > 1):
          join move_thread_han_3375
          $ 3376 "Until (distance)"
          break
        end
        sync()
      end
      $ 3377 "Wait: 0.3"
      sleep(0.3)
      $ 3378 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3379 "Wait: 0.3"
      sleep(0.3)
      $ 3380 "Loop 3 times"
      Loop_58 = 0
      while (Loop_58 < 3):
        $ 3381 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3382 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3383 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3384 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3385 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_58 = Loop_58 + 1
      end
      $ 3386 "Direction: Base Z+"
      global move_thread_flag_3386=0
      thread move_thread_3386():
        enter_critical
        move_thread_flag_3386 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3386 = 2
        exit_critical
      end
      move_thread_flag_3386 = 0
      move_thread_han_3386 = run move_thread_3386()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3386 > 1):
          join move_thread_han_3386
          $ 3387 "Until (distance)"
          break
        end
        sync()
      end
      $ 3388 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3389 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3390 "If barreno_actual≥barrenos_menos1"
      if (barreno_actual >= barrenos_menos1):
        $ 3391 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
    end
    $ 3394 "Popup: Linea4 con chica Terminada!"
    popup("Linea4 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 3395 "Broca_2"
    $ 3396 "Linea3"
    $ 3397 "Marcar_puntos"
    $ 3398 "MoveL"
    $ 3399 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3400 "Linea3_A" "breakAfter"
    movel(Linea3_A_p, a=0.5, v=0.1)
    $ 3401 "Linea3_B" "breakAfter"
    movel(Linea3_B_p, a=0.5, v=0.1)
    $ 3402 "Linea3_C" "breakAfter"
    movel(Linea3_C_p, a=0.5, v=0.1)
    $ 3403 "Linea3_D" "breakAfter"
    movel(Linea3_D_p, a=0.5, v=0.1)
    $ 3404 "Linea3_E" "breakAfter"
    movel(Linea3_E_p, a=0.5, v=0.1)
    $ 3405 "Linea3_F" "breakAfter"
    movel(Linea3_F_p, a=0.5, v=0.1)
    $ 3406 "AB"
    $ 3407 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3408 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3409 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3410 "barreno_actual≔0"
    global barreno_actual=0
    $ 3411 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3412 "Perforacion"
      $ 3413 "MoveL"
      $ 3414 "internos≔interpolate_pose(Linea3_A, Linea3_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_A_p, Linea3_B_p, barreno_actual/barrenos_menos1)
      $ 3415 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3416 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3417 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3418 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3419 "Direction: Base Z-"
      global move_thread_flag_3419=0
      thread move_thread_3419():
        enter_critical
        move_thread_flag_3419 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3419 = 2
        exit_critical
      end
      move_thread_flag_3419 = 0
      move_thread_han_3419 = run move_thread_3419()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3419 > 1):
          join move_thread_han_3419
          $ 3420 "Until (distance)"
          break
        end
        sync()
      end
      $ 3421 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3422 "Direction: Base Z+"
      global move_thread_flag_3422=0
      thread move_thread_3422():
        enter_critical
        move_thread_flag_3422 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3422 = 2
        exit_critical
      end
      move_thread_flag_3422 = 0
      move_thread_han_3422 = run move_thread_3422()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3422 > 1):
          join move_thread_han_3422
          $ 3423 "Until (distance)"
          break
        end
        sync()
      end
      $ 3424 "Wait: 0.3"
      sleep(0.3)
      $ 3425 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3426 "Wait: 0.3"
      sleep(0.3)
      $ 3427 "Loop 2 times"
      Loop_60 = 0
      while (Loop_60 < 2):
        $ 3428 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3429 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3430 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3431 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3432 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_60 = Loop_60 + 1
      end
      $ 3433 "Direction: Base Z+"
      global move_thread_flag_3433=0
      thread move_thread_3433():
        enter_critical
        move_thread_flag_3433 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3433 = 2
        exit_critical
      end
      move_thread_flag_3433 = 0
      move_thread_han_3433 = run move_thread_3433()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3433 > 1):
          join move_thread_han_3433
          $ 3434 "Until (distance)"
          break
        end
        sync()
      end
      $ 3435 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3436 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3439 "CD"
    $ 3440 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3441 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3442 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3443 "barreno_actual≔0"
    global barreno_actual=0
    $ 3444 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3445 "Perforacion"
      $ 3446 "MoveL"
      $ 3447 "internos≔interpolate_pose(Linea3_C, Linea3_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_C_p, Linea3_D_p, barreno_actual/barrenos_menos1)
      $ 3448 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3449 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3450 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3451 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3452 "Direction: Base Z-"
      global move_thread_flag_3452=0
      thread move_thread_3452():
        enter_critical
        move_thread_flag_3452 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3452 = 2
        exit_critical
      end
      move_thread_flag_3452 = 0
      move_thread_han_3452 = run move_thread_3452()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3452 > 1):
          join move_thread_han_3452
          $ 3453 "Until (distance)"
          break
        end
        sync()
      end
      $ 3454 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3455 "Direction: Base Z+"
      global move_thread_flag_3455=0
      thread move_thread_3455():
        enter_critical
        move_thread_flag_3455 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3455 = 2
        exit_critical
      end
      move_thread_flag_3455 = 0
      move_thread_han_3455 = run move_thread_3455()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3455 > 1):
          join move_thread_han_3455
          $ 3456 "Until (distance)"
          break
        end
        sync()
      end
      $ 3457 "Wait: 0.3"
      sleep(0.3)
      $ 3458 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3459 "Wait: 0.3"
      sleep(0.3)
      $ 3460 "Loop 2 times"
      Loop_64 = 0
      while (Loop_64 < 2):
        $ 3461 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3462 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3463 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3464 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3465 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_64 = Loop_64 + 1
      end
      $ 3466 "Direction: Base Z+"
      global move_thread_flag_3466=0
      thread move_thread_3466():
        enter_critical
        move_thread_flag_3466 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3466 = 2
        exit_critical
      end
      move_thread_flag_3466 = 0
      move_thread_han_3466 = run move_thread_3466()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3466 > 1):
          join move_thread_han_3466
          $ 3467 "Until (distance)"
          break
        end
        sync()
      end
      $ 3468 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3469 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3472 "EF"
    $ 3473 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3474 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3475 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3476 "barreno_actual≔0"
    global barreno_actual=0
    $ 3477 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3478 "Perforacion"
      $ 3479 "MoveL"
      $ 3480 "internos≔interpolate_pose(Linea3_E, Linea3_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_E_p, Linea3_F_p, barreno_actual/barrenos_menos1)
      $ 3481 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3482 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3483 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3484 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3485 "Direction: Base Z-"
      global move_thread_flag_3485=0
      thread move_thread_3485():
        enter_critical
        move_thread_flag_3485 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3485 = 2
        exit_critical
      end
      move_thread_flag_3485 = 0
      move_thread_han_3485 = run move_thread_3485()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3485 > 1):
          join move_thread_han_3485
          $ 3486 "Until (distance)"
          break
        end
        sync()
      end
      $ 3487 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3488 "Direction: Base Z+"
      global move_thread_flag_3488=0
      thread move_thread_3488():
        enter_critical
        move_thread_flag_3488 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3488 = 2
        exit_critical
      end
      move_thread_flag_3488 = 0
      move_thread_han_3488 = run move_thread_3488()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3488 > 1):
          join move_thread_han_3488
          $ 3489 "Until (distance)"
          break
        end
        sync()
      end
      $ 3490 "Wait: 0.3"
      sleep(0.3)
      $ 3491 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3492 "Wait: 0.3"
      sleep(0.3)
      $ 3493 "Loop 2 times"
      Loop_68 = 0
      while (Loop_68 < 2):
        $ 3494 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3495 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3496 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3497 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3498 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_68 = Loop_68 + 1
      end
      $ 3499 "Direction: Base Z+"
      global move_thread_flag_3499=0
      thread move_thread_3499():
        enter_critical
        move_thread_flag_3499 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3499 = 2
        exit_critical
      end
      move_thread_flag_3499 = 0
      move_thread_han_3499 = run move_thread_3499()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3499 > 1):
          join move_thread_han_3499
          $ 3500 "Until (distance)"
          break
        end
        sync()
      end
      $ 3501 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3502 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3505 "Popup: Linea3 con media Terminada!"
    popup("Linea3 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 3506 "Linea4"
    $ 3507 "Marcar_puntos"
    $ 3508 "MoveL"
    $ 3509 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3510 "Linea4_A" "breakAfter"
    movel(Linea4_A_p, a=0.5, v=0.1)
    $ 3511 "Linea4_B" "breakAfter"
    movel(Linea4_B_p, a=0.5, v=0.1)
    $ 3512 "Linea4_C" "breakAfter"
    movel(Linea4_C_p, a=0.5, v=0.1)
    $ 3513 "Linea4_D" "breakAfter"
    movel(Linea4_D_p, a=0.5, v=0.1)
    $ 3514 "Linea4_E" "breakAfter"
    movel(Linea4_E_p, a=0.5, v=0.1)
    $ 3515 "Linea4_F" "breakAfter"
    movel(Linea4_F_p, a=0.5, v=0.1)
    $ 3516 "AB"
    $ 3517 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3518 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3519 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3520 "barreno_actual≔0"
    global barreno_actual=0
    $ 3521 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3522 "Perforacion"
      $ 3523 "MoveL"
      $ 3524 "internos≔interpolate_pose(Linea4_A, Linea4_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_A_p, Linea4_B_p, barreno_actual/barrenos_menos1)
      $ 3525 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3526 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3527 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3528 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3529 "Direction: Base Z-"
      global move_thread_flag_3529=0
      thread move_thread_3529():
        enter_critical
        move_thread_flag_3529 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3529 = 2
        exit_critical
      end
      move_thread_flag_3529 = 0
      move_thread_han_3529 = run move_thread_3529()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3529 > 1):
          join move_thread_han_3529
          $ 3530 "Until (distance)"
          break
        end
        sync()
      end
      $ 3531 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3532 "Direction: Base Z+"
      global move_thread_flag_3532=0
      thread move_thread_3532():
        enter_critical
        move_thread_flag_3532 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3532 = 2
        exit_critical
      end
      move_thread_flag_3532 = 0
      move_thread_han_3532 = run move_thread_3532()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3532 > 1):
          join move_thread_han_3532
          $ 3533 "Until (distance)"
          break
        end
        sync()
      end
      $ 3534 "Wait: 0.3"
      sleep(0.3)
      $ 3535 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3536 "Wait: 0.3"
      sleep(0.3)
      $ 3537 "Loop 2 times"
      Loop_72 = 0
      while (Loop_72 < 2):
        $ 3538 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3539 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3540 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3541 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3542 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_72 = Loop_72 + 1
      end
      $ 3543 "Direction: Base Z+"
      global move_thread_flag_3543=0
      thread move_thread_3543():
        enter_critical
        move_thread_flag_3543 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3543 = 2
        exit_critical
      end
      move_thread_flag_3543 = 0
      move_thread_han_3543 = run move_thread_3543()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3543 > 1):
          join move_thread_han_3543
          $ 3544 "Until (distance)"
          break
        end
        sync()
      end
      $ 3545 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3546 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3549 "CD"
    $ 3550 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3551 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3552 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3553 "barreno_actual≔0"
    global barreno_actual=0
    $ 3554 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3555 "Perforacion"
      $ 3556 "MoveL"
      $ 3557 "internos≔interpolate_pose(Linea4_C, Linea4_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_C_p, Linea4_D_p, barreno_actual/barrenos_menos1)
      $ 3558 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3559 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3560 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3561 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3562 "Direction: Base Z-"
      global move_thread_flag_3562=0
      thread move_thread_3562():
        enter_critical
        move_thread_flag_3562 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3562 = 2
        exit_critical
      end
      move_thread_flag_3562 = 0
      move_thread_han_3562 = run move_thread_3562()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3562 > 1):
          join move_thread_han_3562
          $ 3563 "Until (distance)"
          break
        end
        sync()
      end
      $ 3564 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3565 "Direction: Base Z+"
      global move_thread_flag_3565=0
      thread move_thread_3565():
        enter_critical
        move_thread_flag_3565 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3565 = 2
        exit_critical
      end
      move_thread_flag_3565 = 0
      move_thread_han_3565 = run move_thread_3565()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3565 > 1):
          join move_thread_han_3565
          $ 3566 "Until (distance)"
          break
        end
        sync()
      end
      $ 3567 "Wait: 0.3"
      sleep(0.3)
      $ 3568 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3569 "Wait: 0.3"
      sleep(0.3)
      $ 3570 "Loop 2 times"
      Loop_77 = 0
      while (Loop_77 < 2):
        $ 3571 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3572 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3573 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3574 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3575 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_77 = Loop_77 + 1
      end
      $ 3576 "Direction: Base Z+"
      global move_thread_flag_3576=0
      thread move_thread_3576():
        enter_critical
        move_thread_flag_3576 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3576 = 2
        exit_critical
      end
      move_thread_flag_3576 = 0
      move_thread_han_3576 = run move_thread_3576()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3576 > 1):
          join move_thread_han_3576
          $ 3577 "Until (distance)"
          break
        end
        sync()
      end
      $ 3578 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3579 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3582 "EF"
    $ 3583 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3584 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3585 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3586 "barreno_actual≔0"
    global barreno_actual=0
    $ 3587 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3588 "Perforacion"
      $ 3589 "MoveL"
      $ 3590 "internos≔interpolate_pose(Linea4_E, Linea4_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_E_p, Linea4_F_p, barreno_actual/barrenos_menos1)
      $ 3591 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3592 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3593 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3594 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3595 "Direction: Base Z-"
      global move_thread_flag_3595=0
      thread move_thread_3595():
        enter_critical
        move_thread_flag_3595 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.073)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3595 = 2
        exit_critical
      end
      move_thread_flag_3595 = 0
      move_thread_han_3595 = run move_thread_3595()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3595 > 1):
          join move_thread_han_3595
          $ 3596 "Until (distance)"
          break
        end
        sync()
      end
      $ 3597 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3598 "Direction: Base Z+"
      global move_thread_flag_3598=0
      thread move_thread_3598():
        enter_critical
        move_thread_flag_3598 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3598 = 2
        exit_critical
      end
      move_thread_flag_3598 = 0
      move_thread_han_3598 = run move_thread_3598()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3598 > 1):
          join move_thread_han_3598
          $ 3599 "Until (distance)"
          break
        end
        sync()
      end
      $ 3600 "Wait: 0.3"
      sleep(0.3)
      $ 3601 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3602 "Wait: 0.3"
      sleep(0.3)
      $ 3603 "Loop 2 times"
      Loop_81 = 0
      while (Loop_81 < 2):
        $ 3604 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3605 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3606 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3607 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3608 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_81 = Loop_81 + 1
      end
      $ 3609 "Direction: Base Z+"
      global move_thread_flag_3609=0
      thread move_thread_3609():
        enter_critical
        move_thread_flag_3609 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3609 = 2
        exit_critical
      end
      move_thread_flag_3609 = 0
      move_thread_han_3609 = run move_thread_3609()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3609 > 1):
          join move_thread_han_3609
          $ 3610 "Until (distance)"
          break
        end
        sync()
      end
      $ 3611 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3612 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3613 "If barreno_actual≥barrenos_menos1"
      if (barreno_actual >= barrenos_menos1):
        $ 3614 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
    end
    $ 3617 "Popup: Linea4 con media Terminada!"
    popup("Linea4 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 3618 "Broca_3"
    $ 3619 "Linea3"
    $ 3620 "Marcar_puntos"
    $ 3621 "MoveL"
    $ 3622 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3623 "Linea3_A" "breakAfter"
    movel(Linea3_A_p, a=0.5, v=0.1)
    $ 3624 "Linea3_B" "breakAfter"
    movel(Linea3_B_p, a=0.5, v=0.1)
    $ 3625 "Linea3_C" "breakAfter"
    movel(Linea3_C_p, a=0.5, v=0.1)
    $ 3626 "Linea3_D" "breakAfter"
    movel(Linea3_D_p, a=0.5, v=0.1)
    $ 3627 "Linea3_E" "breakAfter"
    movel(Linea3_E_p, a=0.5, v=0.1)
    $ 3628 "Linea3_F" "breakAfter"
    movel(Linea3_F_p, a=0.5, v=0.1)
    $ 3629 "AB"
    $ 3630 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3631 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3632 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3633 "barreno_actual≔0"
    global barreno_actual=0
    $ 3634 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3635 "Perforacion"
      $ 3636 "MoveL"
      $ 3637 "internos≔interpolate_pose(Linea3_A, Linea3_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_A_p, Linea3_B_p, barreno_actual/barrenos_menos1)
      $ 3638 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3639 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3640 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3641 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3642 "Direction: Base Z-"
      global move_thread_flag_3642=0
      thread move_thread_3642():
        enter_critical
        move_thread_flag_3642 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3642 = 2
        exit_critical
      end
      move_thread_flag_3642 = 0
      move_thread_han_3642 = run move_thread_3642()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3642 > 1):
          join move_thread_han_3642
          $ 3643 "Until (distance)"
          break
        end
        sync()
      end
      $ 3644 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3645 "Direction: Base Z+"
      global move_thread_flag_3645=0
      thread move_thread_3645():
        enter_critical
        move_thread_flag_3645 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3645 = 2
        exit_critical
      end
      move_thread_flag_3645 = 0
      move_thread_han_3645 = run move_thread_3645()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3645 > 1):
          join move_thread_han_3645
          $ 3646 "Until (distance)"
          break
        end
        sync()
      end
      $ 3647 "Wait: 0.3"
      sleep(0.3)
      $ 3648 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3649 "Wait: 0.3"
      sleep(0.3)
      $ 3650 "Loop 1 times"
      Loop_86 = 0
      while (Loop_86 < 1):
        $ 3651 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3652 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3653 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3654 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3655 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_86 = Loop_86 + 1
      end
      $ 3656 "Direction: Base Z+"
      global move_thread_flag_3656=0
      thread move_thread_3656():
        enter_critical
        move_thread_flag_3656 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3656 = 2
        exit_critical
      end
      move_thread_flag_3656 = 0
      move_thread_han_3656 = run move_thread_3656()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3656 > 1):
          join move_thread_han_3656
          $ 3657 "Until (distance)"
          break
        end
        sync()
      end
      $ 3658 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3659 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3662 "CD"
    $ 3663 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3664 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3665 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3666 "barreno_actual≔0"
    global barreno_actual=0
    $ 3667 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3668 "Perforacion"
      $ 3669 "MoveL"
      $ 3670 "internos≔interpolate_pose(Linea3_C, Linea3_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_C_p, Linea3_D_p, barreno_actual/barrenos_menos1)
      $ 3671 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3672 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3673 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3674 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3675 "Direction: Base Z-"
      global move_thread_flag_3675=0
      thread move_thread_3675():
        enter_critical
        move_thread_flag_3675 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3675 = 2
        exit_critical
      end
      move_thread_flag_3675 = 0
      move_thread_han_3675 = run move_thread_3675()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3675 > 1):
          join move_thread_han_3675
          $ 3676 "Until (distance)"
          break
        end
        sync()
      end
      $ 3677 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3678 "Direction: Base Z+"
      global move_thread_flag_3678=0
      thread move_thread_3678():
        enter_critical
        move_thread_flag_3678 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3678 = 2
        exit_critical
      end
      move_thread_flag_3678 = 0
      move_thread_han_3678 = run move_thread_3678()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3678 > 1):
          join move_thread_han_3678
          $ 3679 "Until (distance)"
          break
        end
        sync()
      end
      $ 3680 "Wait: 0.3"
      sleep(0.3)
      $ 3681 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3682 "Wait: 0.3"
      sleep(0.3)
      $ 3683 "Loop 1 times"
      Loop_91 = 0
      while (Loop_91 < 1):
        $ 3684 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3685 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3686 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3687 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3688 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_91 = Loop_91 + 1
      end
      $ 3689 "Direction: Base Z+"
      global move_thread_flag_3689=0
      thread move_thread_3689():
        enter_critical
        move_thread_flag_3689 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3689 = 2
        exit_critical
      end
      move_thread_flag_3689 = 0
      move_thread_han_3689 = run move_thread_3689()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3689 > 1):
          join move_thread_han_3689
          $ 3690 "Until (distance)"
          break
        end
        sync()
      end
      $ 3691 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3692 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3695 "EF"
    $ 3696 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3697 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3698 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3699 "barreno_actual≔0"
    global barreno_actual=0
    $ 3700 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3701 "Perforacion"
      $ 3702 "MoveL"
      $ 3703 "internos≔interpolate_pose(Linea3_E, Linea3_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_E_p, Linea3_F_p, barreno_actual/barrenos_menos1)
      $ 3704 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3705 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3706 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3707 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3708 "Direction: Base Z-"
      global move_thread_flag_3708=0
      thread move_thread_3708():
        enter_critical
        move_thread_flag_3708 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3708 = 2
        exit_critical
      end
      move_thread_flag_3708 = 0
      move_thread_han_3708 = run move_thread_3708()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3708 > 1):
          join move_thread_han_3708
          $ 3709 "Until (distance)"
          break
        end
        sync()
      end
      $ 3710 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3711 "Direction: Base Z+"
      global move_thread_flag_3711=0
      thread move_thread_3711():
        enter_critical
        move_thread_flag_3711 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3711 = 2
        exit_critical
      end
      move_thread_flag_3711 = 0
      move_thread_han_3711 = run move_thread_3711()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3711 > 1):
          join move_thread_han_3711
          $ 3712 "Until (distance)"
          break
        end
        sync()
      end
      $ 3713 "Wait: 0.3"
      sleep(0.3)
      $ 3714 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3715 "Wait: 0.3"
      sleep(0.3)
      $ 3716 "Loop 1 times"
      Loop_100 = 0
      while (Loop_100 < 1):
        $ 3717 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3718 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3719 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3720 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3721 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_100 = Loop_100 + 1
      end
      $ 3722 "Direction: Base Z+"
      global move_thread_flag_3722=0
      thread move_thread_3722():
        enter_critical
        move_thread_flag_3722 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3722 = 2
        exit_critical
      end
      move_thread_flag_3722 = 0
      move_thread_han_3722 = run move_thread_3722()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3722 > 1):
          join move_thread_han_3722
          $ 3723 "Until (distance)"
          break
        end
        sync()
      end
      $ 3724 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3725 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3728 "Popup: Linea3 con full Terminada!"
    popup("Linea3 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 3729 "Linea4"
    $ 3730 "Marcar_puntos"
    $ 3731 "MoveL"
    $ 3732 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3733 "Linea4_A" "breakAfter"
    movel(Linea4_A_p, a=0.5, v=0.1)
    $ 3734 "Linea4_B" "breakAfter"
    movel(Linea4_B_p, a=0.5, v=0.1)
    $ 3735 "Linea4_C" "breakAfter"
    movel(Linea4_C_p, a=0.5, v=0.1)
    $ 3736 "Linea4_D" "breakAfter"
    movel(Linea4_D_p, a=0.5, v=0.1)
    $ 3737 "Linea4_E" "breakAfter"
    movel(Linea4_E_p, a=0.5, v=0.1)
    $ 3738 "Linea4_F" "breakAfter"
    movel(Linea4_F_p, a=0.5, v=0.1)
    $ 3739 "AB"
    $ 3740 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3741 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3742 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3743 "barreno_actual≔0"
    global barreno_actual=0
    $ 3744 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3745 "Perforacion"
      $ 3746 "MoveL"
      $ 3747 "internos≔interpolate_pose(Linea4_A, Linea4_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_A_p, Linea4_B_p, barreno_actual/barrenos_menos1)
      $ 3748 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3749 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3750 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3751 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3752 "Direction: Base Z-"
      global move_thread_flag_3752=0
      thread move_thread_3752():
        enter_critical
        move_thread_flag_3752 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3752 = 2
        exit_critical
      end
      move_thread_flag_3752 = 0
      move_thread_han_3752 = run move_thread_3752()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3752 > 1):
          join move_thread_han_3752
          $ 3753 "Until (distance)"
          break
        end
        sync()
      end
      $ 3754 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3755 "Direction: Base Z+"
      global move_thread_flag_3755=0
      thread move_thread_3755():
        enter_critical
        move_thread_flag_3755 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3755 = 2
        exit_critical
      end
      move_thread_flag_3755 = 0
      move_thread_han_3755 = run move_thread_3755()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3755 > 1):
          join move_thread_han_3755
          $ 3756 "Until (distance)"
          break
        end
        sync()
      end
      $ 3757 "Wait: 0.3"
      sleep(0.3)
      $ 3758 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3759 "Wait: 0.3"
      sleep(0.3)
      $ 3760 "Loop 1 times"
      Loop_120 = 0
      while (Loop_120 < 1):
        $ 3761 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3762 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3763 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3764 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3765 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_120 = Loop_120 + 1
      end
      $ 3766 "Direction: Base Z+"
      global move_thread_flag_3766=0
      thread move_thread_3766():
        enter_critical
        move_thread_flag_3766 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3766 = 2
        exit_critical
      end
      move_thread_flag_3766 = 0
      move_thread_han_3766 = run move_thread_3766()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3766 > 1):
          join move_thread_han_3766
          $ 3767 "Until (distance)"
          break
        end
        sync()
      end
      $ 3768 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3769 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3772 "CD"
    $ 3773 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3774 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3775 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3776 "barreno_actual≔0"
    global barreno_actual=0
    $ 3777 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3778 "Perforacion"
      $ 3779 "MoveL"
      $ 3780 "internos≔interpolate_pose(Linea4_C, Linea4_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_C_p, Linea4_D_p, barreno_actual/barrenos_menos1)
      $ 3781 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3782 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3783 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3784 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3785 "Direction: Base Z-"
      global move_thread_flag_3785=0
      thread move_thread_3785():
        enter_critical
        move_thread_flag_3785 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3785 = 2
        exit_critical
      end
      move_thread_flag_3785 = 0
      move_thread_han_3785 = run move_thread_3785()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3785 > 1):
          join move_thread_han_3785
          $ 3786 "Until (distance)"
          break
        end
        sync()
      end
      $ 3787 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3788 "Direction: Base Z+"
      global move_thread_flag_3788=0
      thread move_thread_3788():
        enter_critical
        move_thread_flag_3788 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3788 = 2
        exit_critical
      end
      move_thread_flag_3788 = 0
      move_thread_han_3788 = run move_thread_3788()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3788 > 1):
          join move_thread_han_3788
          $ 3789 "Until (distance)"
          break
        end
        sync()
      end
      $ 3790 "Wait: 0.3"
      sleep(0.3)
      $ 3791 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3792 "Wait: 0.3"
      sleep(0.3)
      $ 3793 "Loop 1 times"
      Loop_123 = 0
      while (Loop_123 < 1):
        $ 3794 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3795 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3796 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3797 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3798 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_123 = Loop_123 + 1
      end
      $ 3799 "Direction: Base Z+"
      global move_thread_flag_3799=0
      thread move_thread_3799():
        enter_critical
        move_thread_flag_3799 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3799 = 2
        exit_critical
      end
      move_thread_flag_3799 = 0
      move_thread_han_3799 = run move_thread_3799()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3799 > 1):
          join move_thread_han_3799
          $ 3800 "Until (distance)"
          break
        end
        sync()
      end
      $ 3801 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3802 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 3805 "EF"
    $ 3806 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3807 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3808 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3809 "barreno_actual≔0"
    global barreno_actual=0
    $ 3810 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3811 "Perforacion"
      $ 3812 "MoveL"
      $ 3813 "internos≔interpolate_pose(Linea4_E, Linea4_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_E_p, Linea4_F_p, barreno_actual/barrenos_menos1)
      $ 3814 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3815 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3816 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3817 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3818 "Direction: Base Z-"
      global move_thread_flag_3818=0
      thread move_thread_3818():
        enter_critical
        move_thread_flag_3818 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.015, v=0.02)
        move_thread_flag_3818 = 2
        exit_critical
      end
      move_thread_flag_3818 = 0
      move_thread_han_3818 = run move_thread_3818()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3818 > 1):
          join move_thread_han_3818
          $ 3819 "Until (distance)"
          break
        end
        sync()
      end
      $ 3820 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3821 "Direction: Base Z+"
      global move_thread_flag_3821=0
      thread move_thread_3821():
        enter_critical
        move_thread_flag_3821 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3821 = 2
        exit_critical
      end
      move_thread_flag_3821 = 0
      move_thread_han_3821 = run move_thread_3821()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3821 > 1):
          join move_thread_han_3821
          $ 3822 "Until (distance)"
          break
        end
        sync()
      end
      $ 3823 "Wait: 0.3"
      sleep(0.3)
      $ 3824 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3825 "Wait: 0.3"
      sleep(0.3)
      $ 3826 "Loop 1 times"
      Loop_125 = 0
      while (Loop_125 < 1):
        $ 3827 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3828 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3829 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3830 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3831 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_125 = Loop_125 + 1
      end
      $ 3832 "Direction: Base Z+"
      global move_thread_flag_3832=0
      thread move_thread_3832():
        enter_critical
        move_thread_flag_3832 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3832 = 2
        exit_critical
      end
      move_thread_flag_3832 = 0
      move_thread_han_3832 = run move_thread_3832()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3832 > 1):
          join move_thread_han_3832
          $ 3833 "Until (distance)"
          break
        end
        sync()
      end
      $ 3834 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3835 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3836 "If barreno_actual≥barrenos_menos1"
      if (barreno_actual >= barrenos_menos1):
        $ 3837 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
    end
    $ 3840 "Popup: Linea4 con full Terminada!"
    popup("Linea4 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 4061 "720"
    $ 4062 "Broca_1"
    $ 4063 "Linea19"
    $ 4064 "Marcar_puntos"
    $ 4065 "MoveL"
    $ 4066 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 4067 "Linea19_A" "breakAfter"
    movel(Linea19_A_p, a=0.5, v=0.1)
    $ 4068 "bajada_comprobacion"
    $ 4069 "Direction: Base Z-"
    global move_thread_flag_4069=0
    thread move_thread_4069():
      enter_critical
      move_thread_flag_4069 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4069 = 2
      exit_critical
    end
    move_thread_flag_4069 = 0
    move_thread_han_4069 = run move_thread_4069()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4069 > 1):
        join move_thread_han_4069
        $ 4070 "Until (distance)"
        break
      end
      sync()
    end
    $ 4071 "Direction: Base Z-"
    global move_thread_flag_4071=0
    thread move_thread_4071():
      enter_critical
      move_thread_flag_4071 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4071 = 2
      exit_critical
    end
    move_thread_flag_4071 = 0
    move_thread_han_4071 = run move_thread_4071()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4071
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4072 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4073 "Direction: Base Z+"
    global move_thread_flag_4073=0
    thread move_thread_4073():
      enter_critical
      move_thread_flag_4073 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4073 = 2
      exit_critical
    end
    move_thread_flag_4073 = 0
    move_thread_han_4073 = run move_thread_4073()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4073 > 1):
        join move_thread_han_4073
        $ 4074 "Until (distance)"
        break
      end
      sync()
    end
    $ 4075 "Linea19_B" "breakAfter"
    movel(Linea19_B_p, a=0.5, v=0.1)
    $ 4076 "bajada_comprobacion"
    $ 4077 "Direction: Base Z-"
    global move_thread_flag_4077=0
    thread move_thread_4077():
      enter_critical
      move_thread_flag_4077 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4077 = 2
      exit_critical
    end
    move_thread_flag_4077 = 0
    move_thread_han_4077 = run move_thread_4077()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4077 > 1):
        join move_thread_han_4077
        $ 4078 "Until (distance)"
        break
      end
      sync()
    end
    $ 4079 "Direction: Base Z-"
    global move_thread_flag_4079=0
    thread move_thread_4079():
      enter_critical
      move_thread_flag_4079 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4079 = 2
      exit_critical
    end
    move_thread_flag_4079 = 0
    move_thread_han_4079 = run move_thread_4079()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4079
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4080 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4081 "Direction: Base Z+"
    global move_thread_flag_4081=0
    thread move_thread_4081():
      enter_critical
      move_thread_flag_4081 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4081 = 2
      exit_critical
    end
    move_thread_flag_4081 = 0
    move_thread_han_4081 = run move_thread_4081()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4081 > 1):
        join move_thread_han_4081
        $ 4082 "Until (distance)"
        break
      end
      sync()
    end
    $ 4083 "AB"
    $ 4084 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4085 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4086 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 4087 "barreno_actual≔0"
    global barreno_actual=0
    $ 4088 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4089 "Perforacion"
      $ 4090 "MoveL"
      $ 4091 "internos≔interpolate_pose(Linea19_A, Linea19_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea19_A_p, Linea19_B_p, barreno_actual/barrenos_menos1)
      $ 4092 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4093 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4094 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4095 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4096 "Direction: Base Z-"
      global move_thread_flag_4096=0
      thread move_thread_4096():
        enter_critical
        move_thread_flag_4096 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4096 = 2
        exit_critical
      end
      move_thread_flag_4096 = 0
      move_thread_han_4096 = run move_thread_4096()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4096 > 1):
          join move_thread_han_4096
          $ 4097 "Until (distance)"
          break
        end
        sync()
      end
      $ 4098 "Direction: Base Z-"
      global move_thread_flag_4098=0
      thread move_thread_4098():
        enter_critical
        move_thread_flag_4098 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4098 = 2
        exit_critical
      end
      move_thread_flag_4098 = 0
      move_thread_han_4098 = run move_thread_4098()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4098
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4099 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4100 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4101 "Direction: Base Z+"
      global move_thread_flag_4101=0
      thread move_thread_4101():
        enter_critical
        move_thread_flag_4101 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4101 = 2
        exit_critical
      end
      move_thread_flag_4101 = 0
      move_thread_han_4101 = run move_thread_4101()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4101 > 1):
          join move_thread_han_4101
          $ 4102 "Until (distance)"
          break
        end
        sync()
      end
      $ 4103 "Wait: 0.3"
      sleep(0.3)
      $ 4104 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4105 "Wait: 0.3"
      sleep(0.3)
      $ 4106 "Loop 1 times"
      Loop_47 = 0
      while (Loop_47 < 1):
        $ 4107 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4108 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4109 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4110 "Direction: Base Z+"
        global move_thread_flag_4110=0
        thread move_thread_4110():
          enter_critical
          move_thread_flag_4110 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4110 = 2
          exit_critical
        end
        move_thread_flag_4110 = 0
        move_thread_han_4110 = run move_thread_4110()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4110 > 1):
            join move_thread_han_4110
            $ 4111 "Until (distance)"
            break
          end
          sync()
        end
        $ 4112 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4113 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4114 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_47 = Loop_47 + 1
      end
      $ 4115 "Direction: Base Z+"
      global move_thread_flag_4115=0
      thread move_thread_4115():
        enter_critical
        move_thread_flag_4115 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4115 = 2
        exit_critical
      end
      move_thread_flag_4115 = 0
      move_thread_han_4115 = run move_thread_4115()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4115 > 1):
          join move_thread_han_4115
          $ 4116 "Until (distance)"
          break
        end
        sync()
      end
      $ 4117 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4118 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4121 "Popup: Linea19 con chica Terminada!"
    popup("Linea19 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4122 "Linea20"
    $ 4123 "Marcar_puntos"
    $ 4124 "MoveL"
    $ 4125 "Linea20_A" "breakAfter"
    movel(Linea20_A_p, a=0.5, v=0.1)
    $ 4126 "bajada_comprobacion"
    $ 4127 "Direction: Base Z-"
    global move_thread_flag_4127=0
    thread move_thread_4127():
      enter_critical
      move_thread_flag_4127 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4127 = 2
      exit_critical
    end
    move_thread_flag_4127 = 0
    move_thread_han_4127 = run move_thread_4127()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4127 > 1):
        join move_thread_han_4127
        $ 4128 "Until (distance)"
        break
      end
      sync()
    end
    $ 4129 "Direction: Base Z-"
    global move_thread_flag_4129=0
    thread move_thread_4129():
      enter_critical
      move_thread_flag_4129 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4129 = 2
      exit_critical
    end
    move_thread_flag_4129 = 0
    move_thread_han_4129 = run move_thread_4129()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4129
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4130 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4131 "Direction: Base Z+"
    global move_thread_flag_4131=0
    thread move_thread_4131():
      enter_critical
      move_thread_flag_4131 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4131 = 2
      exit_critical
    end
    move_thread_flag_4131 = 0
    move_thread_han_4131 = run move_thread_4131()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4131 > 1):
        join move_thread_han_4131
        $ 4132 "Until (distance)"
        break
      end
      sync()
    end
    $ 4133 "Linea20_B" "breakAfter"
    movel(Linea20_B_p, a=0.5, v=0.1)
    $ 4134 "bajada_comprobacion"
    $ 4135 "Direction: Base Z-"
    global move_thread_flag_4135=0
    thread move_thread_4135():
      enter_critical
      move_thread_flag_4135 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4135 = 2
      exit_critical
    end
    move_thread_flag_4135 = 0
    move_thread_han_4135 = run move_thread_4135()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4135 > 1):
        join move_thread_han_4135
        $ 4136 "Until (distance)"
        break
      end
      sync()
    end
    $ 4137 "Direction: Base Z-"
    global move_thread_flag_4137=0
    thread move_thread_4137():
      enter_critical
      move_thread_flag_4137 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4137 = 2
      exit_critical
    end
    move_thread_flag_4137 = 0
    move_thread_han_4137 = run move_thread_4137()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4137
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4138 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4139 "Direction: Base Z+"
    global move_thread_flag_4139=0
    thread move_thread_4139():
      enter_critical
      move_thread_flag_4139 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4139 = 2
      exit_critical
    end
    move_thread_flag_4139 = 0
    move_thread_han_4139 = run move_thread_4139()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4139 > 1):
        join move_thread_han_4139
        $ 4140 "Until (distance)"
        break
      end
      sync()
    end
    $ 4141 "AB"
    $ 4142 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4143 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4144 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 4145 "barreno_actual≔0"
    global barreno_actual=0
    $ 4146 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4147 "Perforacion"
      $ 4148 "MoveL"
      $ 4149 "internos≔interpolate_pose(Linea20_A, Linea20_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea20_A_p, Linea20_B_p, barreno_actual/barrenos_menos1)
      $ 4150 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4151 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4152 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4153 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4154 "Direction: Base Z-"
      global move_thread_flag_4154=0
      thread move_thread_4154():
        enter_critical
        move_thread_flag_4154 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4154 = 2
        exit_critical
      end
      move_thread_flag_4154 = 0
      move_thread_han_4154 = run move_thread_4154()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4154 > 1):
          join move_thread_han_4154
          $ 4155 "Until (distance)"
          break
        end
        sync()
      end
      $ 4156 "Direction: Base Z-"
      global move_thread_flag_4156=0
      thread move_thread_4156():
        enter_critical
        move_thread_flag_4156 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4156 = 2
        exit_critical
      end
      move_thread_flag_4156 = 0
      move_thread_han_4156 = run move_thread_4156()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4156
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4157 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4158 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4159 "Direction: Base Z+"
      global move_thread_flag_4159=0
      thread move_thread_4159():
        enter_critical
        move_thread_flag_4159 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4159 = 2
        exit_critical
      end
      move_thread_flag_4159 = 0
      move_thread_han_4159 = run move_thread_4159()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4159 > 1):
          join move_thread_han_4159
          $ 4160 "Until (distance)"
          break
        end
        sync()
      end
      $ 4161 "Wait: 0.3"
      sleep(0.3)
      $ 4162 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4163 "Wait: 0.3"
      sleep(0.3)
      $ 4164 "Loop 1 times"
      Loop_57 = 0
      while (Loop_57 < 1):
        $ 4165 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4166 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4167 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4168 "Direction: Base Z+"
        global move_thread_flag_4168=0
        thread move_thread_4168():
          enter_critical
          move_thread_flag_4168 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4168 = 2
          exit_critical
        end
        move_thread_flag_4168 = 0
        move_thread_han_4168 = run move_thread_4168()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4168 > 1):
            join move_thread_han_4168
            $ 4169 "Until (distance)"
            break
          end
          sync()
        end
        $ 4170 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4171 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4172 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_57 = Loop_57 + 1
      end
      $ 4173 "Direction: Base Z+"
      global move_thread_flag_4173=0
      thread move_thread_4173():
        enter_critical
        move_thread_flag_4173 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4173 = 2
        exit_critical
      end
      move_thread_flag_4173 = 0
      move_thread_han_4173 = run move_thread_4173()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4173 > 1):
          join move_thread_han_4173
          $ 4174 "Until (distance)"
          break
        end
        sync()
      end
      $ 4175 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4176 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4179 "Popup: Linea20 con chica Terminada!"
    popup("Linea20 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4303 "Linea22"
    $ 4304 "Marcar_puntos"
    $ 4305 "MoveL"
    $ 4306 "Linea22_A" "breakAfter"
    movel(Linea22_A_p, a=0.5, v=0.1)
    $ 4307 "bajada_comprobacion"
    $ 4308 "Direction: Base Z-"
    global move_thread_flag_4308=0
    thread move_thread_4308():
      enter_critical
      move_thread_flag_4308 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4308 = 2
      exit_critical
    end
    move_thread_flag_4308 = 0
    move_thread_han_4308 = run move_thread_4308()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4308 > 1):
        join move_thread_han_4308
        $ 4309 "Until (distance)"
        break
      end
      sync()
    end
    $ 4310 "Direction: Base Z-"
    global move_thread_flag_4310=0
    thread move_thread_4310():
      enter_critical
      move_thread_flag_4310 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4310 = 2
      exit_critical
    end
    move_thread_flag_4310 = 0
    move_thread_han_4310 = run move_thread_4310()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4310
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4311 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4312 "Direction: Base Z+"
    global move_thread_flag_4312=0
    thread move_thread_4312():
      enter_critical
      move_thread_flag_4312 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4312 = 2
      exit_critical
    end
    move_thread_flag_4312 = 0
    move_thread_han_4312 = run move_thread_4312()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4312 > 1):
        join move_thread_han_4312
        $ 4313 "Until (distance)"
        break
      end
      sync()
    end
    $ 4314 "Linea22_B" "breakAfter"
    movel(Linea22_B_p, a=0.5, v=0.1)
    $ 4315 "bajada_comprobacion"
    $ 4316 "Direction: Base Z-"
    global move_thread_flag_4316=0
    thread move_thread_4316():
      enter_critical
      move_thread_flag_4316 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4316 = 2
      exit_critical
    end
    move_thread_flag_4316 = 0
    move_thread_han_4316 = run move_thread_4316()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4316 > 1):
        join move_thread_han_4316
        $ 4317 "Until (distance)"
        break
      end
      sync()
    end
    $ 4318 "Direction: Base Z-"
    global move_thread_flag_4318=0
    thread move_thread_4318():
      enter_critical
      move_thread_flag_4318 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4318 = 2
      exit_critical
    end
    move_thread_flag_4318 = 0
    move_thread_han_4318 = run move_thread_4318()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4318
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4319 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4320 "Direction: Base Z+"
    global move_thread_flag_4320=0
    thread move_thread_4320():
      enter_critical
      move_thread_flag_4320 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4320 = 2
      exit_critical
    end
    move_thread_flag_4320 = 0
    move_thread_han_4320 = run move_thread_4320()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4320 > 1):
        join move_thread_han_4320
        $ 4321 "Until (distance)"
        break
      end
      sync()
    end
    $ 4322 "AB"
    $ 4323 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4324 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4325 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 4326 "barreno_actual≔0"
    global barreno_actual=0
    $ 4327 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4328 "Perforacion"
      $ 4329 "MoveL"
      $ 4332 "internos≔interpolate_pose(Linea22_A, Linea22_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea22_A_p, Linea22_B_p, barreno_actual/barrenos_menos1)
      $ 4333 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4334 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4335 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4336 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4337 "Direction: Base Z-"
      global move_thread_flag_4337=0
      thread move_thread_4337():
        enter_critical
        move_thread_flag_4337 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4337 = 2
        exit_critical
      end
      move_thread_flag_4337 = 0
      move_thread_han_4337 = run move_thread_4337()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4337 > 1):
          join move_thread_han_4337
          $ 4338 "Until (distance)"
          break
        end
        sync()
      end
      $ 4339 "Direction: Base Z-"
      global move_thread_flag_4339=0
      thread move_thread_4339():
        enter_critical
        move_thread_flag_4339 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4339 = 2
        exit_critical
      end
      move_thread_flag_4339 = 0
      move_thread_han_4339 = run move_thread_4339()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4339
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4340 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4341 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4342 "Direction: Base Z+"
      global move_thread_flag_4342=0
      thread move_thread_4342():
        enter_critical
        move_thread_flag_4342 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4342 = 2
        exit_critical
      end
      move_thread_flag_4342 = 0
      move_thread_han_4342 = run move_thread_4342()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4342 > 1):
          join move_thread_han_4342
          $ 4343 "Until (distance)"
          break
        end
        sync()
      end
      $ 4344 "Wait: 0.3"
      sleep(0.3)
      $ 4345 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4346 "Wait: 0.3"
      sleep(0.3)
      $ 4347 "Loop 1 times"
      Loop_84 = 0
      while (Loop_84 < 1):
        $ 4348 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4349 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4350 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4351 "Direction: Base Z+"
        global move_thread_flag_4351=0
        thread move_thread_4351():
          enter_critical
          move_thread_flag_4351 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4351 = 2
          exit_critical
        end
        move_thread_flag_4351 = 0
        move_thread_han_4351 = run move_thread_4351()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4351 > 1):
            join move_thread_han_4351
            $ 4352 "Until (distance)"
            break
          end
          sync()
        end
        $ 4353 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4354 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 4355 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_84 = Loop_84 + 1
      end
      $ 4356 "Direction: Base Z+"
      global move_thread_flag_4356=0
      thread move_thread_4356():
        enter_critical
        move_thread_flag_4356 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4356 = 2
        exit_critical
      end
      move_thread_flag_4356 = 0
      move_thread_han_4356 = run move_thread_4356()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4356 > 1):
          join move_thread_han_4356
          $ 4357 "Until (distance)"
          break
        end
        sync()
      end
      $ 4358 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4359 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4362 "Popup: Linea22 con chica Terminada!"
    popup("Linea22 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4363 "Linea23"
    $ 4364 "Marcar_puntos"
    $ 4365 "MoveL"
    $ 4366 "Linea23_A" "breakAfter"
    movel(Linea23_A_p, a=0.5, v=0.1)
    $ 4367 "bajada_comprobacion"
    $ 4368 "Direction: Base Z-"
    global move_thread_flag_4368=0
    thread move_thread_4368():
      enter_critical
      move_thread_flag_4368 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4368 = 2
      exit_critical
    end
    move_thread_flag_4368 = 0
    move_thread_han_4368 = run move_thread_4368()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4368 > 1):
        join move_thread_han_4368
        $ 4369 "Until (distance)"
        break
      end
      sync()
    end
    $ 4370 "Direction: Base Z-"
    global move_thread_flag_4370=0
    thread move_thread_4370():
      enter_critical
      move_thread_flag_4370 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4370 = 2
      exit_critical
    end
    move_thread_flag_4370 = 0
    move_thread_han_4370 = run move_thread_4370()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4370
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4371 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4372 "Direction: Base Z+"
    global move_thread_flag_4372=0
    thread move_thread_4372():
      enter_critical
      move_thread_flag_4372 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4372 = 2
      exit_critical
    end
    move_thread_flag_4372 = 0
    move_thread_han_4372 = run move_thread_4372()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4372 > 1):
        join move_thread_han_4372
        $ 4373 "Until (distance)"
        break
      end
      sync()
    end
    $ 4374 "Linea23_B" "breakAfter"
    movel(Linea23_B_p, a=0.5, v=0.1)
    $ 4375 "bajada_comprobacion"
    $ 4376 "Direction: Base Z-"
    global move_thread_flag_4376=0
    thread move_thread_4376():
      enter_critical
      move_thread_flag_4376 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4376 = 2
      exit_critical
    end
    move_thread_flag_4376 = 0
    move_thread_han_4376 = run move_thread_4376()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4376 > 1):
        join move_thread_han_4376
        $ 4377 "Until (distance)"
        break
      end
      sync()
    end
    $ 4378 "Direction: Base Z-"
    global move_thread_flag_4378=0
    thread move_thread_4378():
      enter_critical
      move_thread_flag_4378 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4378 = 2
      exit_critical
    end
    move_thread_flag_4378 = 0
    move_thread_han_4378 = run move_thread_4378()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4378
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4379 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4380 "Direction: Base Z+"
    global move_thread_flag_4380=0
    thread move_thread_4380():
      enter_critical
      move_thread_flag_4380 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4380 = 2
      exit_critical
    end
    move_thread_flag_4380 = 0
    move_thread_han_4380 = run move_thread_4380()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4380 > 1):
        join move_thread_han_4380
        $ 4381 "Until (distance)"
        break
      end
      sync()
    end
    $ 4382 "AB"
    $ 4383 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4384 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4385 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 4386 "barreno_actual≔0"
    global barreno_actual=0
    $ 4387 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4388 "Perforacion"
      $ 4389 "MoveL"
      $ 4392 "internos≔interpolate_pose(Linea23_A, Linea23_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea23_A_p, Linea23_B_p, barreno_actual/barrenos_menos1)
      $ 4393 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4394 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4395 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4396 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4397 "Direction: Base Z-"
      global move_thread_flag_4397=0
      thread move_thread_4397():
        enter_critical
        move_thread_flag_4397 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4397 = 2
        exit_critical
      end
      move_thread_flag_4397 = 0
      move_thread_han_4397 = run move_thread_4397()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4397 > 1):
          join move_thread_han_4397
          $ 4398 "Until (distance)"
          break
        end
        sync()
      end
      $ 4399 "Direction: Base Z-"
      global move_thread_flag_4399=0
      thread move_thread_4399():
        enter_critical
        move_thread_flag_4399 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4399 = 2
        exit_critical
      end
      move_thread_flag_4399 = 0
      move_thread_han_4399 = run move_thread_4399()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4399
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4400 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4401 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4402 "Direction: Base Z+"
      global move_thread_flag_4402=0
      thread move_thread_4402():
        enter_critical
        move_thread_flag_4402 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4402 = 2
        exit_critical
      end
      move_thread_flag_4402 = 0
      move_thread_han_4402 = run move_thread_4402()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4402 > 1):
          join move_thread_han_4402
          $ 4403 "Until (distance)"
          break
        end
        sync()
      end
      $ 4404 "Wait: 0.3"
      sleep(0.3)
      $ 4405 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4406 "Wait: 0.3"
      sleep(0.3)
      $ 4407 "Loop 1 times"
      Loop_88 = 0
      while (Loop_88 < 1):
        $ 4408 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4409 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4410 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4411 "Direction: Base Z+"
        global move_thread_flag_4411=0
        thread move_thread_4411():
          enter_critical
          move_thread_flag_4411 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4411 = 2
          exit_critical
        end
        move_thread_flag_4411 = 0
        move_thread_han_4411 = run move_thread_4411()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4411 > 1):
            join move_thread_han_4411
            $ 4412 "Until (distance)"
            break
          end
          sync()
        end
        $ 4413 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4414 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4415 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_88 = Loop_88 + 1
      end
      $ 4416 "Direction: Base Z+"
      global move_thread_flag_4416=0
      thread move_thread_4416():
        enter_critical
        move_thread_flag_4416 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4416 = 2
        exit_critical
      end
      move_thread_flag_4416 = 0
      move_thread_han_4416 = run move_thread_4416()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4416 > 1):
          join move_thread_han_4416
          $ 4417 "Until (distance)"
          break
        end
        sync()
      end
      $ 4418 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4419 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4422 "Popup: Linea23 con chica Terminada!"
    popup("Linea23 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4423 "Linea24"
    $ 4424 "Marcar_puntos"
    $ 4425 "MoveL"
    $ 4426 "Linea24_A" "breakAfter"
    movel(Linea24_A_p, a=0.5, v=0.1)
    $ 4427 "bajada_comprobacion"
    $ 4428 "Direction: Base Z-"
    global move_thread_flag_4428=0
    thread move_thread_4428():
      enter_critical
      move_thread_flag_4428 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4428 = 2
      exit_critical
    end
    move_thread_flag_4428 = 0
    move_thread_han_4428 = run move_thread_4428()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4428 > 1):
        join move_thread_han_4428
        $ 4429 "Until (distance)"
        break
      end
      sync()
    end
    $ 4430 "Direction: Base Z-"
    global move_thread_flag_4430=0
    thread move_thread_4430():
      enter_critical
      move_thread_flag_4430 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4430 = 2
      exit_critical
    end
    move_thread_flag_4430 = 0
    move_thread_han_4430 = run move_thread_4430()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4430
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4431 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4432 "Direction: Base Z+"
    global move_thread_flag_4432=0
    thread move_thread_4432():
      enter_critical
      move_thread_flag_4432 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4432 = 2
      exit_critical
    end
    move_thread_flag_4432 = 0
    move_thread_han_4432 = run move_thread_4432()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4432 > 1):
        join move_thread_han_4432
        $ 4433 "Until (distance)"
        break
      end
      sync()
    end
    $ 4434 "Linea24_B" "breakAfter"
    movel(Linea24_B_p, a=0.5, v=0.1)
    $ 4435 "bajada_comprobacion"
    $ 4436 "Direction: Base Z-"
    global move_thread_flag_4436=0
    thread move_thread_4436():
      enter_critical
      move_thread_flag_4436 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4436 = 2
      exit_critical
    end
    move_thread_flag_4436 = 0
    move_thread_han_4436 = run move_thread_4436()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4436 > 1):
        join move_thread_han_4436
        $ 4437 "Until (distance)"
        break
      end
      sync()
    end
    $ 4438 "Direction: Base Z-"
    global move_thread_flag_4438=0
    thread move_thread_4438():
      enter_critical
      move_thread_flag_4438 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4438 = 2
      exit_critical
    end
    move_thread_flag_4438 = 0
    move_thread_han_4438 = run move_thread_4438()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4438
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4439 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4440 "Direction: Base Z+"
    global move_thread_flag_4440=0
    thread move_thread_4440():
      enter_critical
      move_thread_flag_4440 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4440 = 2
      exit_critical
    end
    move_thread_flag_4440 = 0
    move_thread_han_4440 = run move_thread_4440()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4440 > 1):
        join move_thread_han_4440
        $ 4441 "Until (distance)"
        break
      end
      sync()
    end
    $ 4442 "AB"
    $ 4443 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4444 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4445 "barrenos_menos1≔4"
    global barrenos_menos1=4
    $ 4446 "barreno_actual≔0"
    global barreno_actual=0
    $ 4447 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4448 "Perforacion"
      $ 4449 "MoveL"
      $ 4450 "If barreno_actual≟2"
      if (barreno_actual == 2):
        $ 4451 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 4452 "internos≔interpolate_pose(Linea24_A, Linea24_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea24_A_p, Linea24_B_p, barreno_actual/barrenos_menos1)
      $ 4453 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4454 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4455 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4456 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4457 "Direction: Base Z-"
      global move_thread_flag_4457=0
      thread move_thread_4457():
        enter_critical
        move_thread_flag_4457 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4457 = 2
        exit_critical
      end
      move_thread_flag_4457 = 0
      move_thread_han_4457 = run move_thread_4457()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4457 > 1):
          join move_thread_han_4457
          $ 4458 "Until (distance)"
          break
        end
        sync()
      end
      $ 4459 "Direction: Base Z-"
      global move_thread_flag_4459=0
      thread move_thread_4459():
        enter_critical
        move_thread_flag_4459 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4459 = 2
        exit_critical
      end
      move_thread_flag_4459 = 0
      move_thread_han_4459 = run move_thread_4459()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4459
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4460 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4461 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4462 "Direction: Base Z+"
      global move_thread_flag_4462=0
      thread move_thread_4462():
        enter_critical
        move_thread_flag_4462 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4462 = 2
        exit_critical
      end
      move_thread_flag_4462 = 0
      move_thread_han_4462 = run move_thread_4462()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4462 > 1):
          join move_thread_han_4462
          $ 4463 "Until (distance)"
          break
        end
        sync()
      end
      $ 4464 "Wait: 0.3"
      sleep(0.3)
      $ 4465 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4466 "Wait: 0.3"
      sleep(0.3)
      $ 4467 "Loop 1 times"
      Loop_102 = 0
      while (Loop_102 < 1):
        $ 4468 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4469 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4470 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4471 "Direction: Base Z+"
        global move_thread_flag_4471=0
        thread move_thread_4471():
          enter_critical
          move_thread_flag_4471 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4471 = 2
          exit_critical
        end
        move_thread_flag_4471 = 0
        move_thread_han_4471 = run move_thread_4471()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4471 > 1):
            join move_thread_han_4471
            $ 4472 "Until (distance)"
            break
          end
          sync()
        end
        $ 4473 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4474 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4475 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_102 = Loop_102 + 1
      end
      $ 4476 "Direction: Base Z+"
      global move_thread_flag_4476=0
      thread move_thread_4476():
        enter_critical
        move_thread_flag_4476 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4476 = 2
        exit_critical
      end
      move_thread_flag_4476 = 0
      move_thread_han_4476 = run move_thread_4476()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4476 > 1):
          join move_thread_han_4476
          $ 4477 "Until (distance)"
          break
        end
        sync()
      end
      $ 4478 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4479 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4482 "Popup: Linea24 con chica Terminada!"
    popup("Linea24 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4483 "Linea25"
    $ 4484 "Marcar_puntos"
    $ 4485 "MoveL"
    $ 4486 "Linea25_A" "breakAfter"
    movel(Linea25_A_p, a=0.5, v=0.1)
    $ 4487 "bajada_comprobacion"
    $ 4488 "Direction: Base Z-"
    global move_thread_flag_4488=0
    thread move_thread_4488():
      enter_critical
      move_thread_flag_4488 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4488 = 2
      exit_critical
    end
    move_thread_flag_4488 = 0
    move_thread_han_4488 = run move_thread_4488()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4488 > 1):
        join move_thread_han_4488
        $ 4489 "Until (distance)"
        break
      end
      sync()
    end
    $ 4490 "Direction: Base Z-"
    global move_thread_flag_4490=0
    thread move_thread_4490():
      enter_critical
      move_thread_flag_4490 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4490 = 2
      exit_critical
    end
    move_thread_flag_4490 = 0
    move_thread_han_4490 = run move_thread_4490()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4490
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4491 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4492 "Direction: Base Z+"
    global move_thread_flag_4492=0
    thread move_thread_4492():
      enter_critical
      move_thread_flag_4492 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4492 = 2
      exit_critical
    end
    move_thread_flag_4492 = 0
    move_thread_han_4492 = run move_thread_4492()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4492 > 1):
        join move_thread_han_4492
        $ 4493 "Until (distance)"
        break
      end
      sync()
    end
    $ 4494 "Linea25_B" "breakAfter"
    movel(Linea25_B_p, a=0.5, v=0.1)
    $ 4495 "bajada_comprobacion"
    $ 4496 "Direction: Base Z-"
    global move_thread_flag_4496=0
    thread move_thread_4496():
      enter_critical
      move_thread_flag_4496 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4496 = 2
      exit_critical
    end
    move_thread_flag_4496 = 0
    move_thread_han_4496 = run move_thread_4496()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4496 > 1):
        join move_thread_han_4496
        $ 4497 "Until (distance)"
        break
      end
      sync()
    end
    $ 4498 "Direction: Base Z-"
    global move_thread_flag_4498=0
    thread move_thread_4498():
      enter_critical
      move_thread_flag_4498 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4498 = 2
      exit_critical
    end
    move_thread_flag_4498 = 0
    move_thread_han_4498 = run move_thread_4498()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4498
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4499 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4500 "Direction: Base Z+"
    global move_thread_flag_4500=0
    thread move_thread_4500():
      enter_critical
      move_thread_flag_4500 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4500 = 2
      exit_critical
    end
    move_thread_flag_4500 = 0
    move_thread_han_4500 = run move_thread_4500()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4500 > 1):
        join move_thread_han_4500
        $ 4501 "Until (distance)"
        break
      end
      sync()
    end
    $ 4502 "AB"
    $ 4503 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4504 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4505 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 4506 "barreno_actual≔0"
    global barreno_actual=0
    $ 4507 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4508 "Perforacion"
      $ 4509 "MoveL"
      $ 4512 "internos≔interpolate_pose(Linea25_A, Linea25_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea25_A_p, Linea25_B_p, barreno_actual/barrenos_menos1)
      $ 4513 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4514 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4515 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4516 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4517 "Direction: Base Z-"
      global move_thread_flag_4517=0
      thread move_thread_4517():
        enter_critical
        move_thread_flag_4517 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4517 = 2
        exit_critical
      end
      move_thread_flag_4517 = 0
      move_thread_han_4517 = run move_thread_4517()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4517 > 1):
          join move_thread_han_4517
          $ 4518 "Until (distance)"
          break
        end
        sync()
      end
      $ 4519 "Direction: Base Z-"
      global move_thread_flag_4519=0
      thread move_thread_4519():
        enter_critical
        move_thread_flag_4519 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4519 = 2
        exit_critical
      end
      move_thread_flag_4519 = 0
      move_thread_han_4519 = run move_thread_4519()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4519
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4520 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4521 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4522 "Direction: Base Z+"
      global move_thread_flag_4522=0
      thread move_thread_4522():
        enter_critical
        move_thread_flag_4522 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4522 = 2
        exit_critical
      end
      move_thread_flag_4522 = 0
      move_thread_han_4522 = run move_thread_4522()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4522 > 1):
          join move_thread_han_4522
          $ 4523 "Until (distance)"
          break
        end
        sync()
      end
      $ 4524 "Wait: 0.3"
      sleep(0.3)
      $ 4525 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4526 "Wait: 0.3"
      sleep(0.3)
      $ 4527 "Loop 1 times"
      Loop_135 = 0
      while (Loop_135 < 1):
        $ 4528 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4529 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4530 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4531 "Direction: Base Z+"
        global move_thread_flag_4531=0
        thread move_thread_4531():
          enter_critical
          move_thread_flag_4531 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4531 = 2
          exit_critical
        end
        move_thread_flag_4531 = 0
        move_thread_han_4531 = run move_thread_4531()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4531 > 1):
            join move_thread_han_4531
            $ 4532 "Until (distance)"
            break
          end
          sync()
        end
        $ 4533 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4534 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4535 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_135 = Loop_135 + 1
      end
      $ 4536 "Direction: Base Z+"
      global move_thread_flag_4536=0
      thread move_thread_4536():
        enter_critical
        move_thread_flag_4536 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4536 = 2
        exit_critical
      end
      move_thread_flag_4536 = 0
      move_thread_han_4536 = run move_thread_4536()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4536 > 1):
          join move_thread_han_4536
          $ 4537 "Until (distance)"
          break
        end
        sync()
      end
      $ 4538 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4539 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4542 "Popup: Linea25 con chica Terminada!"
    popup("Linea25 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4543 "Linea26"
    $ 4544 "Marcar_puntos"
    $ 4545 "MoveL"
    $ 4546 "Linea26_A" "breakAfter"
    movel(Linea26_A_p, a=0.5, v=0.1)
    $ 4547 "bajada_comprobacion"
    $ 4548 "Direction: Base Z-"
    global move_thread_flag_4548=0
    thread move_thread_4548():
      enter_critical
      move_thread_flag_4548 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4548 = 2
      exit_critical
    end
    move_thread_flag_4548 = 0
    move_thread_han_4548 = run move_thread_4548()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4548 > 1):
        join move_thread_han_4548
        $ 4549 "Until (distance)"
        break
      end
      sync()
    end
    $ 4550 "Direction: Base Z-"
    global move_thread_flag_4550=0
    thread move_thread_4550():
      enter_critical
      move_thread_flag_4550 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4550 = 2
      exit_critical
    end
    move_thread_flag_4550 = 0
    move_thread_han_4550 = run move_thread_4550()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4550
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4551 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4552 "Direction: Base Z+"
    global move_thread_flag_4552=0
    thread move_thread_4552():
      enter_critical
      move_thread_flag_4552 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4552 = 2
      exit_critical
    end
    move_thread_flag_4552 = 0
    move_thread_han_4552 = run move_thread_4552()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4552 > 1):
        join move_thread_han_4552
        $ 4553 "Until (distance)"
        break
      end
      sync()
    end
    $ 4554 "Linea26_B" "breakAfter"
    movel(Linea26_B_p, a=0.5, v=0.1)
    $ 4555 "bajada_comprobacion"
    $ 4556 "Direction: Base Z-"
    global move_thread_flag_4556=0
    thread move_thread_4556():
      enter_critical
      move_thread_flag_4556 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4556 = 2
      exit_critical
    end
    move_thread_flag_4556 = 0
    move_thread_han_4556 = run move_thread_4556()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4556 > 1):
        join move_thread_han_4556
        $ 4557 "Until (distance)"
        break
      end
      sync()
    end
    $ 4558 "Direction: Base Z-"
    global move_thread_flag_4558=0
    thread move_thread_4558():
      enter_critical
      move_thread_flag_4558 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4558 = 2
      exit_critical
    end
    move_thread_flag_4558 = 0
    move_thread_han_4558 = run move_thread_4558()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4558
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4559 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4560 "Direction: Base Z+"
    global move_thread_flag_4560=0
    thread move_thread_4560():
      enter_critical
      move_thread_flag_4560 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4560 = 2
      exit_critical
    end
    move_thread_flag_4560 = 0
    move_thread_han_4560 = run move_thread_4560()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4560 > 1):
        join move_thread_han_4560
        $ 4561 "Until (distance)"
        break
      end
      sync()
    end
    $ 4562 "AB"
    $ 4563 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4564 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4565 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 4566 "barreno_actual≔0"
    global barreno_actual=0
    $ 4567 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4568 "Perforacion"
      $ 4569 "MoveL"
      $ 4572 "internos≔interpolate_pose(Linea26_A, Linea26_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea26_A_p, Linea26_B_p, barreno_actual/barrenos_menos1)
      $ 4573 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4574 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4575 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4576 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4577 "Direction: Base Z-"
      global move_thread_flag_4577=0
      thread move_thread_4577():
        enter_critical
        move_thread_flag_4577 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4577 = 2
        exit_critical
      end
      move_thread_flag_4577 = 0
      move_thread_han_4577 = run move_thread_4577()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4577 > 1):
          join move_thread_han_4577
          $ 4578 "Until (distance)"
          break
        end
        sync()
      end
      $ 4579 "Direction: Base Z-"
      global move_thread_flag_4579=0
      thread move_thread_4579():
        enter_critical
        move_thread_flag_4579 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4579 = 2
        exit_critical
      end
      move_thread_flag_4579 = 0
      move_thread_han_4579 = run move_thread_4579()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4579
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4580 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4581 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4582 "Direction: Base Z+"
      global move_thread_flag_4582=0
      thread move_thread_4582():
        enter_critical
        move_thread_flag_4582 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4582 = 2
        exit_critical
      end
      move_thread_flag_4582 = 0
      move_thread_han_4582 = run move_thread_4582()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4582 > 1):
          join move_thread_han_4582
          $ 4583 "Until (distance)"
          break
        end
        sync()
      end
      $ 4584 "Wait: 0.3"
      sleep(0.3)
      $ 4585 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4586 "Wait: 0.3"
      sleep(0.3)
      $ 4587 "Loop 1 times"
      Loop_138 = 0
      while (Loop_138 < 1):
        $ 4588 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4589 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4590 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4591 "Direction: Base Z+"
        global move_thread_flag_4591=0
        thread move_thread_4591():
          enter_critical
          move_thread_flag_4591 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4591 = 2
          exit_critical
        end
        move_thread_flag_4591 = 0
        move_thread_han_4591 = run move_thread_4591()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4591 > 1):
            join move_thread_han_4591
            $ 4592 "Until (distance)"
            break
          end
          sync()
        end
        $ 4593 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4594 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4595 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_138 = Loop_138 + 1
      end
      $ 4596 "Direction: Base Z+"
      global move_thread_flag_4596=0
      thread move_thread_4596():
        enter_critical
        move_thread_flag_4596 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4596 = 2
        exit_critical
      end
      move_thread_flag_4596 = 0
      move_thread_han_4596 = run move_thread_4596()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4596 > 1):
          join move_thread_han_4596
          $ 4597 "Until (distance)"
          break
        end
        sync()
      end
      $ 4598 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4599 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4602 "Popup: Linea26 con chica Terminada!"
    popup("Linea26 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4603 "Linea27"
    $ 4604 "Marcar_puntos"
    $ 4605 "MoveL"
    $ 4606 "Linea27_A" "breakAfter"
    movel(Linea27_A_p, a=0.5, v=0.1)
    $ 4607 "bajada_comprobacion"
    $ 4608 "Direction: Base Z-"
    global move_thread_flag_4608=0
    thread move_thread_4608():
      enter_critical
      move_thread_flag_4608 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4608 = 2
      exit_critical
    end
    move_thread_flag_4608 = 0
    move_thread_han_4608 = run move_thread_4608()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4608 > 1):
        join move_thread_han_4608
        $ 4609 "Until (distance)"
        break
      end
      sync()
    end
    $ 4610 "Direction: Base Z-"
    global move_thread_flag_4610=0
    thread move_thread_4610():
      enter_critical
      move_thread_flag_4610 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4610 = 2
      exit_critical
    end
    move_thread_flag_4610 = 0
    move_thread_han_4610 = run move_thread_4610()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4610
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4611 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4612 "Direction: Base Z+"
    global move_thread_flag_4612=0
    thread move_thread_4612():
      enter_critical
      move_thread_flag_4612 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4612 = 2
      exit_critical
    end
    move_thread_flag_4612 = 0
    move_thread_han_4612 = run move_thread_4612()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4612 > 1):
        join move_thread_han_4612
        $ 4613 "Until (distance)"
        break
      end
      sync()
    end
    $ 4614 "Linea27_B" "breakAfter"
    movel(Linea27_B_p, a=0.5, v=0.1)
    $ 4615 "bajada_comprobacion"
    $ 4616 "Direction: Base Z-"
    global move_thread_flag_4616=0
    thread move_thread_4616():
      enter_critical
      move_thread_flag_4616 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4616 = 2
      exit_critical
    end
    move_thread_flag_4616 = 0
    move_thread_han_4616 = run move_thread_4616()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4616 > 1):
        join move_thread_han_4616
        $ 4617 "Until (distance)"
        break
      end
      sync()
    end
    $ 4618 "Direction: Base Z-"
    global move_thread_flag_4618=0
    thread move_thread_4618():
      enter_critical
      move_thread_flag_4618 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4618 = 2
      exit_critical
    end
    move_thread_flag_4618 = 0
    move_thread_han_4618 = run move_thread_4618()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4618
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4619 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4620 "Direction: Base Z+"
    global move_thread_flag_4620=0
    thread move_thread_4620():
      enter_critical
      move_thread_flag_4620 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4620 = 2
      exit_critical
    end
    move_thread_flag_4620 = 0
    move_thread_han_4620 = run move_thread_4620()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4620 > 1):
        join move_thread_han_4620
        $ 4621 "Until (distance)"
        break
      end
      sync()
    end
    $ 4622 "AB"
    $ 4623 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4624 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4625 "barrenos_menos1≔6"
    global barrenos_menos1=6
    $ 4626 "barreno_actual≔0"
    global barreno_actual=0
    $ 4627 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4628 "Perforacion"
      $ 4629 "MoveL"
      $ 4630 "If barreno_actual≟3"
      if (barreno_actual == 3):
        $ 4631 "barreno_actual≔barreno_actual+2"
        global barreno_actual=barreno_actual+2
      end
      $ 4632 "internos≔interpolate_pose(Linea27_A, Linea27_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea27_A_p, Linea27_B_p, barreno_actual/barrenos_menos1)
      $ 4633 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4634 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4635 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4636 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4637 "Direction: Base Z-"
      global move_thread_flag_4637=0
      thread move_thread_4637():
        enter_critical
        move_thread_flag_4637 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4637 = 2
        exit_critical
      end
      move_thread_flag_4637 = 0
      move_thread_han_4637 = run move_thread_4637()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4637 > 1):
          join move_thread_han_4637
          $ 4638 "Until (distance)"
          break
        end
        sync()
      end
      $ 4639 "Direction: Base Z-"
      global move_thread_flag_4639=0
      thread move_thread_4639():
        enter_critical
        move_thread_flag_4639 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4639 = 2
        exit_critical
      end
      move_thread_flag_4639 = 0
      move_thread_han_4639 = run move_thread_4639()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4639
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4640 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4641 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4642 "Direction: Base Z+"
      global move_thread_flag_4642=0
      thread move_thread_4642():
        enter_critical
        move_thread_flag_4642 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4642 = 2
        exit_critical
      end
      move_thread_flag_4642 = 0
      move_thread_han_4642 = run move_thread_4642()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4642 > 1):
          join move_thread_han_4642
          $ 4643 "Until (distance)"
          break
        end
        sync()
      end
      $ 4644 "Wait: 0.3"
      sleep(0.3)
      $ 4645 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4646 "Wait: 0.3"
      sleep(0.3)
      $ 4647 "Loop 1 times"
      Loop_142 = 0
      while (Loop_142 < 1):
        $ 4648 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4649 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4650 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4651 "Direction: Base Z+"
        global move_thread_flag_4651=0
        thread move_thread_4651():
          enter_critical
          move_thread_flag_4651 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4651 = 2
          exit_critical
        end
        move_thread_flag_4651 = 0
        move_thread_han_4651 = run move_thread_4651()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4651 > 1):
            join move_thread_han_4651
            $ 4652 "Until (distance)"
            break
          end
          sync()
        end
        $ 4653 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4654 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4655 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_142 = Loop_142 + 1
      end
      $ 4656 "Direction: Base Z+"
      global move_thread_flag_4656=0
      thread move_thread_4656():
        enter_critical
        move_thread_flag_4656 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4656 = 2
        exit_critical
      end
      move_thread_flag_4656 = 0
      move_thread_han_4656 = run move_thread_4656()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4656 > 1):
          join move_thread_han_4656
          $ 4657 "Until (distance)"
          break
        end
        sync()
      end
      $ 4658 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4659 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4662 "Popup: Linea27 con chica Terminada!"
    popup("Linea27 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4663 "Linea28"
    $ 4664 "Marcar_puntos"
    $ 4665 "MoveL"
    $ 4666 "Linea28_B" "breakAfter"
    movel(Linea28_B_p, a=0.5, v=0.1)
    $ 4667 "bajada_comprobacion"
    $ 4668 "Direction: Base Z-"
    global move_thread_flag_4668=0
    thread move_thread_4668():
      enter_critical
      move_thread_flag_4668 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4668 = 2
      exit_critical
    end
    move_thread_flag_4668 = 0
    move_thread_han_4668 = run move_thread_4668()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4668 > 1):
        join move_thread_han_4668
        $ 4669 "Until (distance)"
        break
      end
      sync()
    end
    $ 4670 "Direction: Base Z-"
    global move_thread_flag_4670=0
    thread move_thread_4670():
      enter_critical
      move_thread_flag_4670 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4670 = 2
      exit_critical
    end
    move_thread_flag_4670 = 0
    move_thread_han_4670 = run move_thread_4670()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4670
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4671 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4672 "Direction: Base Z+"
    global move_thread_flag_4672=0
    thread move_thread_4672():
      enter_critical
      move_thread_flag_4672 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4672 = 2
      exit_critical
    end
    move_thread_flag_4672 = 0
    move_thread_han_4672 = run move_thread_4672()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4672 > 1):
        join move_thread_han_4672
        $ 4673 "Until (distance)"
        break
      end
      sync()
    end
    $ 4674 "AB"
    $ 4675 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4676 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4677 "barrenos_menos1≔0"
    global barrenos_menos1=0
    $ 4678 "barreno_actual≔0"
    global barreno_actual=0
    $ 4679 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4680 "Perforacion"
      $ 4681 "MoveL"
      $ 4686 "Linea28_B" "breakAfter"
      movel(Linea28_B_p, a=0.5, v=0.1)
      $ 4687 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4688 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4689 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4690 "Direction: Base Z-"
      global move_thread_flag_4690=0
      thread move_thread_4690():
        enter_critical
        move_thread_flag_4690 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4690 = 2
        exit_critical
      end
      move_thread_flag_4690 = 0
      move_thread_han_4690 = run move_thread_4690()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4690 > 1):
          join move_thread_han_4690
          $ 4691 "Until (distance)"
          break
        end
        sync()
      end
      $ 4692 "Direction: Base Z-"
      global move_thread_flag_4692=0
      thread move_thread_4692():
        enter_critical
        move_thread_flag_4692 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4692 = 2
        exit_critical
      end
      move_thread_flag_4692 = 0
      move_thread_han_4692 = run move_thread_4692()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4692
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4693 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4694 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4695 "Direction: Base Z+"
      global move_thread_flag_4695=0
      thread move_thread_4695():
        enter_critical
        move_thread_flag_4695 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.01)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4695 = 2
        exit_critical
      end
      move_thread_flag_4695 = 0
      move_thread_han_4695 = run move_thread_4695()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4695 > 1):
          join move_thread_han_4695
          $ 4696 "Until (distance)"
          break
        end
        sync()
      end
      $ 4697 "Wait: 0.3"
      sleep(0.3)
      $ 4698 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4699 "Wait: 0.3"
      sleep(0.3)
      $ 4700 "Loop 1 times"
      Loop_146 = 0
      while (Loop_146 < 1):
        $ 4701 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4702 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4703 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4704 "Direction: Base Z+"
        global move_thread_flag_4704=0
        thread move_thread_4704():
          enter_critical
          move_thread_flag_4704 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4704 = 2
          exit_critical
        end
        move_thread_flag_4704 = 0
        move_thread_han_4704 = run move_thread_4704()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4704 > 1):
            join move_thread_han_4704
            $ 4705 "Until (distance)"
            break
          end
          sync()
        end
        $ 4706 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4707 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4708 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_146 = Loop_146 + 1
      end
      $ 4709 "Direction: Base Z+"
      global move_thread_flag_4709=0
      thread move_thread_4709():
        enter_critical
        move_thread_flag_4709 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4709 = 2
        exit_critical
      end
      move_thread_flag_4709 = 0
      move_thread_han_4709 = run move_thread_4709()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4709 > 1):
          join move_thread_han_4709
          $ 4710 "Until (distance)"
          break
        end
        sync()
      end
      $ 4711 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4712 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4715 "Popup: Linea28 con chica Terminada!"
    popup("Linea28 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4780 "Popup: Linea29 con chica Terminada!"
    popup("Linea29 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4845 "Popup: Linea29B con chica Terminada!"
    popup("Linea29B con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 5333 "'Subprogramas:'"
    # 'Subprogramas:'
  end
end
