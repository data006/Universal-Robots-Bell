def DAS428_958_02_MAR_21_DAS_lado_derecho_jig2():
  set_gravity([0.0, 0.0, 9.82])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_runstate_standard_digital_outputs([2])
  set_runstate_configurable_digital_outputs([1])
  set_runstate_standard_digital_output_to_value(2, 1)
  set_runstate_configurable_digital_output_to_value(1, 1)
  modbus_add_signal("192.168.10.45", 255, 187, 1, "postrnas_m187", False)
  modbus_set_signal_update_frequency("postrnas_m187", 10)
  modbus_add_signal("192.168.10.45", 255, 289, 1, "ini_cambro_m289", False)
  modbus_set_signal_update_frequency("ini_cambro_m289", 10)
  modbus_add_signal("192.168.10.45", 255, 290, 0, "fin_cambro_m290", False)
  modbus_set_signal_update_frequency("fin_cambro_m290", 10)
  modbus_add_signal("192.168.10.45", 255, 291, 1, "outputbroc_m291", False)
  modbus_set_signal_update_frequency("outputbroc_m291", 10)
  modbus_add_signal("192.168.10.45", 255, 292, 0, "fciclocarr_m292", False)
  modbus_set_signal_update_frequency("fciclocarr_m292", 10)
  modbus_add_signal("192.168.10.45", 255, 7, 1, "avancarrusel_m7", False)
  modbus_set_signal_update_frequency("avancarrusel_m7", 10)
  modbus_add_signal("192.168.10.45", 255, 252, 1, "pose2_m252", False)
  modbus_set_signal_update_frequency("pose2_m252", 10)
  modbus_add_signal("192.168.10.45", 255, 253, 1, "pose3_m253", False)
  modbus_set_signal_update_frequency("pose3_m253", 10)
  modbus_add_signal("192.168.10.45", 255, 254, 1, "pose4_m254", False)
  modbus_set_signal_update_frequency("pose4_m254", 10)
  modbus_add_signal("192.168.10.45", 255, 441, 1, "finciclo_m441", False)
  modbus_set_signal_update_frequency("finciclo_m441", 10)
  modbus_add_signal("192.168.10.45", 255, 442, 1, "finciclo_m442", False)
  modbus_set_signal_update_frequency("finciclo_m442", 10)
  modbus_add_signal("192.168.10.45", 255, 443, 1, "finciclo_m443", False)
  modbus_set_signal_update_frequency("finciclo_m443", 10)
  modbus_add_signal("192.168.10.45", 255, 503, 0, "homecobot_m503", False)
  modbus_set_signal_update_frequency("homecobot_m503", 10)
  modbus_add_signal("192.168.10.45", 255, 288, 1, "cargar_run_m288", False)
  modbus_set_signal_update_frequency("cargar_run_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 287, 0, "desactiver_m288", False)
  modbus_set_signal_update_frequency("desactiver_m288", 10)
  modbus_add_signal("192.168.10.45", 255, 183, 0, "eje7home_m183", False)
  modbus_set_signal_update_frequency("eje7home_m183", 10)
  modbus_add_signal("192.168.10.45", 255, 444, 1, "finciclo_m444", False)
  modbus_set_signal_update_frequency("finciclo_m444", 10)
  modbus_add_signal("192.168.10.45", 255, 381, 0, "pat1_m381", False)
  modbus_set_signal_update_frequency("pat1_m381", 10)
  modbus_add_signal("192.168.10.45", 255, 382, 0, "pat2_m382", False)
  modbus_set_signal_update_frequency("pat2_m382", 10)
  modbus_add_signal("192.168.10.45", 255, 383, 0, "pat3_m383", False)
  modbus_set_signal_update_frequency("pat3_m383", 10)
  modbus_add_signal("192.168.10.45", 255, 384, 0, "pat4_m384", False)
  modbus_set_signal_update_frequency("pat4_m384", 10)
  modbus_add_signal("192.168.10.45", 255, 385, 0, "pat5_m385", False)
  modbus_set_signal_update_frequency("pat5_m385", 10)
  modbus_add_signal("192.168.10.45", 255, 386, 0, "pat6_m386", False)
  modbus_set_signal_update_frequency("pat6_m386", 10)
  modbus_add_signal("192.168.10.45", 255, 387, 0, "pat7_m387", False)
  modbus_set_signal_update_frequency("pat7_m387", 10)
  modbus_add_signal("192.168.10.45", 255, 388, 0, "pat8_m388", False)
  modbus_set_signal_update_frequency("pat8_m388", 10)
  modbus_add_signal("192.168.10.45", 255, 389, 0, "pat9_m389", False)
  modbus_set_signal_update_frequency("pat9_m389", 10)
  modbus_add_signal("192.168.10.45", 255, 390, 0, "pat10_m390", False)
  modbus_set_signal_update_frequency("pat10_m390", 10)
  modbus_add_signal("192.168.10.45", 255, 391, 0, "pat11_m391", False)
  modbus_set_signal_update_frequency("pat11_m391", 10)
  modbus_add_signal("192.168.10.45", 255, 392, 0, "pat12_m392", False)
  modbus_set_signal_update_frequency("pat12_m392", 10)
  modbus_add_signal("192.168.10.45", 255, 401, 0, "inipat1_m401", False)
  modbus_set_signal_update_frequency("inipat1_m401", 10)
  modbus_add_signal("192.168.10.45", 255, 402, 0, "inipat2_m402", False)
  modbus_set_signal_update_frequency("inipat2_m402", 10)
  modbus_add_signal("192.168.10.45", 255, 403, 0, "inipat3_m403", False)
  modbus_set_signal_update_frequency("inipat3_m403", 10)
  modbus_add_signal("192.168.10.45", 255, 404, 0, "inipat4_m404", False)
  modbus_set_signal_update_frequency("inipat4_m404", 10)
  modbus_add_signal("192.168.10.45", 255, 405, 0, "inipat5_m405", False)
  modbus_set_signal_update_frequency("inipat5_m405", 10)
  modbus_add_signal("192.168.10.45", 255, 406, 0, "inipat6_m406", False)
  modbus_set_signal_update_frequency("inipat6_m406", 10)
  modbus_add_signal("192.168.10.45", 255, 407, 0, "inipat7_m407", False)
  modbus_set_signal_update_frequency("inipat7_m407", 10)
  modbus_add_signal("192.168.10.45", 255, 408, 0, "inipat8_m408", False)
  modbus_set_signal_update_frequency("inipat8_m408", 10)
  modbus_add_signal("192.168.10.45", 255, 409, 0, "inipat9_m409", False)
  modbus_set_signal_update_frequency("inipat9_m409", 10)
  modbus_add_signal("192.168.10.45", 255, 410, 0, "inipat10_m410", False)
  modbus_set_signal_update_frequency("inipat10_m410", 10)
  modbus_add_signal("192.168.10.45", 255, 411, 0, "inipat11_m411", False)
  modbus_set_signal_update_frequency("inipat11_m411", 10)
  modbus_add_signal("192.168.10.45", 255, 412, 0, "inipat12_m412", False)
  modbus_set_signal_update_frequency("inipat12_m412", 10)
  modbus_add_signal("192.168.10.45", 255, 430, 0, "modeloDer_m430", False)
  modbus_set_signal_update_frequency("modeloDer_m430", 10)
  modbus_add_signal("192.168.10.45", 255, 380, 1, "mensaje_m380", False)
  modbus_set_signal_update_frequency("mensaje_m380", 10)
  modbus_add_signal("192.168.10.45", 255, 379, 0, "respues_m379", False)
  modbus_set_signal_update_frequency("respues_m379", 10)
  modbus_add_signal("192.168.10.45", 255, 251, 1, "pose1_m251", False)
  modbus_set_signal_update_frequency("pose1_m251", 10)
  modbus_set_runstate_dependent_choice("postrnas_m187",0)
  modbus_set_runstate_dependent_choice("ini_cambro_m289",0)
  modbus_set_runstate_dependent_choice("outputbroc_m291",0)
  modbus_set_runstate_dependent_choice("avancarrusel_m7",0)
  modbus_set_runstate_dependent_choice("pose2_m252",0)
  modbus_set_runstate_dependent_choice("pose3_m253",0)
  modbus_set_runstate_dependent_choice("pose4_m254",0)
  modbus_set_runstate_dependent_choice("finciclo_m441",0)
  modbus_set_runstate_dependent_choice("finciclo_m442",0)
  modbus_set_runstate_dependent_choice("finciclo_m443",0)
  modbus_set_runstate_dependent_choice("cargar_run_m288",0)
  modbus_set_runstate_dependent_choice("finciclo_m444",0)
  modbus_set_runstate_dependent_choice("mensaje_m380",0)
  modbus_set_runstate_dependent_choice("pose1_m251",0)
  set_safety_mode_transition_hardness(1)
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_tcp(p[4.109330471764039E-4,-0.21829828276152607,0.037994196120996,1.5580092985761962,-0.12546870791316503,0.12120248426608284])
  set_payload(1.5)
  step_count_e0f46a76_adf3_4eac_87f0_1f0dabebea5e = 0
  thread Step_Counter_Thread_08bb6925_5529_4cdb_99f9_8a05e79ee4da():
    while (True):
      step_count_e0f46a76_adf3_4eac_87f0_1f0dabebea5e = step_count_e0f46a76_adf3_4eac_87f0_1f0dabebea5e + 1
      sync()
    end
  end
  run Step_Counter_Thread_08bb6925_5529_4cdb_99f9_8a05e79ee4da()
  global contador=0
  global i_var_1=0
  global Pallet_1_cnt_1=1
  global Pallet_1_cnt=1
  global Line_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_2=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Line_4=p[-0.2932874787951964,0.3932288129452105,0.013749459185886714,0.019478391032120013,-0.0350876085014595,1.5300278925331599]
  global Line_5=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Plane_1=p[-0.4357649673792705,0.3571224276764373,-0.011331751409534768,-0.03455953496512708,-0.012487423981114925,3.103751116092306]
  global Plane_2=p[-0.4823864034329737,0.3302516442079689,0.014283714098506706,0.017125077458443067,0.05770060098903715,-2.9134709732588786]
  global Plane_3=p[0.003678615545088639,0.4082921331082374,0.10477407557236007,-2.072177303174012E-4,7.379081343290108E-4,-6.424400645467977E-4]
  global Plane_4=p[-0.4500206307677429,-0.2823718146925442,-0.4767416657426552,0.013278190059218174,0.013334473770785706,1.8479691991032237]
  global Plano_patron1=p[-0.7699005610122596,0.304894434078545,0.0420369514744936,-0.0031270356010209216,1.7180543614697593E-4,-3.508888786211572E-5]
  global Point_13=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_3=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Point_8=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_prot_1=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global Punto_seg_der=p[0.23741638234469645,0.3587772222537799,0.42419077585740217,0.818517054876345,1.4216436941132238,1.005041187710707]
  global pisp_958=p[-0.41395442210486977,-0.2082168853247176,0.041553466664982,0.014014788518713659,0.01101911827984854,1.569193423241601]
  rtde_set_watchdog("speed_slider_mask", 10.0, "ignore")
  global Traslacion_p=p[-.641047005341, -.250866212824, .699550653028, 2.557164228531, -1.705634893075, -.146977311260]
  global Traslacion_q=[-0.008123397867477067, -1.6493627997444174, 1.2335318981093104, 0.31142302236535, -5.2726714898139235, -0.002836317283104961]
  global Home2_p=p[-.476229469061, .000000001191, .568736718299, 2.026271312133, -2.392905827360, -.020822003949]
  global Home2_q=[-0.5681294612478887, -2.032770910737735, 1.7176337322759885, 0.3114230223653604, -5.272671489814012, -0.002836317283105849]
  global Home3_p=p[-.850182153427, -.000000001054, .211319941039, -2.029706048810, 2.396843749609, .006593444086]
  global Home3_q=[-0.2508712563283524, -1.32118636682587, 1.7236419957383333, -0.39530717300436535, -4.957384713543316, -0.003346356527782035]
  global Home4_p=p[-.850182153426, -.000000001054, .211319941039, -2.029706048810, 2.396843749609, .006593444086]
  global Home4_q=[-0.25087125632834173, -1.32118636682587, 1.7236419957383335, -0.39530717300436535, -4.957384713543306, -0.003346356527782035]
  global PosicionApagado_p=p[.162342971637, -.004968702407, .063230450635, -1.839175988951, .225343983922, .171657948894]
  global PosicionApagado_q=[1.570738988136085, -1.5704867605983486, 2.609644234392225, 0.2613772922410976, -4.625127484032603, 1.7781079770353217E-5]
  global Precambio_broca_p=p[.000830370305, .461517540512, .287521124194, -.221784750204, -3.131955254916, .000429460883]
  global Precambio_broca_q=[-2.1838225298159477, -2.0964618902985066, 2.243453456263678, -0.13436505871461257, -5.342774534909408, -0.004043449473680738]
  global yendo1_p=p[-.246136658478, .407690142824, .568736718299, -.589365823667, 3.084367220712, .022757599334]
  global yendo1_q=[-1.5957647560042467, -2.0327709107377157, 1.7176337322759783, 0.31142302236534997, -5.272671489813924, -0.002836317283104961]
  global Precam_bro1_p=p[-.795770836809, .128511169110, .757632075886, 1.553391881516, -2.198703969583, -.808866164734]
  global Precam_bro1_q=[-0.42509351308843435, -1.7320527113687803, 1.4689329310980348, -0.39530717300436535, -4.957384713543306, -0.003346356527782035]
  global Precam_bro2_p=p[-.204472177612, .779716277811, .757632075886, -.111446445846, 2.933975892584, 1.018360754732]
  global Precam_bro2_q=[-1.5793151587200072, -1.7320527113687803, 1.4689329310980348, -0.39530717300436535, -4.957384713543306, -0.003346356527782035]
  global Linea1_A_p=p[-.480065223067, -.215566781041, .110154596536, 2.026283817979, -2.392895080548, -.020829635760]
  global Linea1_A_q=[0.12579830563919536, -1.756524695513292, 2.3832893788943412, -0.6314317143827912, -4.58099271090342, -0.0047002730467511356]
  global Linea1_B_p=p[-.683259997836, -.215006380581, .110473377935, 2.026330825697, -2.392937749126, -.020814905630]
  global Linea1_B_q=[0.07860269075896831, -1.433097350639013, 2.069317086211182, -0.6407207629147003, -4.628316962573399, -0.00423059265382264]
  global Linea1_C_p=p[-.708659998696, -.214985847345, .110510820529, 2.026397919151, -2.392909525922, -.020800557194]
  global Linea1_C_q=[0.07508702140477563, -1.3964952588668957, 2.0250632394702635, -0.6330397547175677, -4.631871660537247, -0.004203657105243508]
  global Linea1_D_p=p[-.911541589269, -.214532502479, .110305804030, 2.026334474712, -2.392925442770, -.020895674247]
  global Linea1_D_q=[0.054901387986126586, -1.113040084501037, 1.6299948744075297, -0.5214573164063481, -4.651846197735423, -0.004103335395922336]
  global Linea1_E_p=p[-.936517713267, -.214589312402, .110514758557, 2.026299167222, -2.392914652900, -.020910067647]
  global Linea1_E_q=[0.053256694947611545, -1.0779791152787563, 1.5748557207640133, -0.5014068860788594, -4.65343899925324, -0.0040886755584823575]
  global Linea1_F_p=p[-1.139513888655, -.213880830394, .110127483913, 2.026321929742, -2.392901637414, -.020934114652]
  global Linea1_F_q=[0.04170148606385503, -0.7616832269463547, 1.037979133577118, -0.2808209912067561, -4.664495303417296, -0.0041165609944391335]
  def calculate_point_to_move_towards(feature, direction, position_distance):
    local posDir=[direction[0], direction[1], direction[2]]
    if (norm(posDir) < 1e-6):
      return get_target_waypoint()
    end
    local direction_vector_normalized=normalize(posDir)
    local displacement_pose=p[direction_vector_normalized[0] * position_distance,direction_vector_normalized[1] * position_distance,direction_vector_normalized[2] * position_distance,0,0,0]
    local wanted_displacement_in_base_frame=pose_sub(pose_trans(feature, displacement_pose), feature)
    return pose_add(get_target_waypoint(), wanted_displacement_in_base_frame)
  end
  global Linea2_A_p=p[-.478569784260, .191006236121, .110522539661, 2.026309184484, -2.392844209472, -.020866358396]
  global Linea2_A_q=[-1.0119726055803717, -1.7923449463408154, 2.4087968238915316, -0.622613470734211, -5.718752417482761, 0.0017055247889921077]
  global Linea2_B_p=p[-.681936431684, .191001701528, .110452389888, 2.026254746254, -2.392870981141, -.020856049736]
  global Linea2_B_q=[-0.660932087342812, -1.45042632220569, 2.089702129115615, -0.644100890415773, -5.3678371124098305, -6.551765912714558E-4]
  global Linea2_C_p=p[-.707213860547, .190994877950, .110602621396, 2.026215373389, -2.392855024802, -.020833229234]
  global Linea2_C_q=[-0.6329633221322801, -1.4131450476618888, 2.0452127395946604, -0.63685969915739, -5.339852460491649, -7.508873236439229E-4]
  global Linea2_D_p=p[-.910191818076, .191478760022, .110348317855, 2.026197382673, -2.392838381909, -.020850455695]
  global Linea2_D_q=[-0.47159299446006386, -1.1248659495364315, 1.6481441269090888, -0.5278387233410813, -5.17831767767195, -0.0015522613841945088]
  global Linea2_E_p=p[-.935619999730, .191518537756, .110453838050, 2.026145948950, -2.392831929254, -.020993754227]
  global Linea2_E_q=[-0.45687914266405194, -1.088905585645314, 1.5922022218243828, -0.5079352095297214, -5.1635430614079825, -0.0016331567764398258]
  global Linea2_F_p=p[-1.138394848852, .191499459928, .110212234352, 2.026158962848, -2.392763937758, -.020990642855]
  global Linea2_F_q=[-0.36535169690146674, -0.7732464559921581, 1.0587228640233546, -0.29003791508182974, -5.071546930507635, -0.0021173024104594873]
  global Linea7_A_p=p[-.749560809058, -.351839418109, .110842549516, 3.108416959288, -.375864319326, -.017387250007]
  global Linea7_A_q=[0.03345458497850107, -1.1510417746331125, 1.685959359828983, -0.5377045142036341, -6.168946681556185, -0.005399210077573713]
  global Linea7_B_p=p[-.795370452792, -.351638127396, .110748062148, 3.108426240568, -.375794652077, -.017394126552]
  global Linea7_B_q=[0.031278459806111415, -1.0863508926378662, 1.5866056594622966, -0.5030470097495243, -6.17110138542474, -0.0053959734286266325]
  global Linea8_A_p=p[-.897664645372, -.351420839665, .110405519513, 3.108418537152, -.375848167267, -.017413606898]
  global Linea8_A_q=[0.0274697684633054, -0.9358640938182816, 1.3416002369808222, -0.4084067160106146, -6.174672123664049, -0.005526846744682956]
  global Linea8_B_p=p[-1.021742815617, -.350913421148, .110769725780, 3.108429042178, -.375802310169, -.017313462884]
  global Linea8_B_q=[0.023588010639285104, -0.727028660928073, 0.9730136327156043, -0.24827020482455175, -6.178185664503821, -0.005846159791357053]
  global Linea9_A_p=p[-1.101640143677, -.350630386336, .110828130197, 3.108414048814, -.375882576694, -.017444590769]
  global Linea9_A_q=[0.021544403730552553, -0.5492801598617163, 0.6399908213108159, -0.09279065312938162, -6.179741333586448, -0.006134404310005337]
  global Linea9_B_p=p[-1.151201662491, -.350816300328, .110404811963, 3.108409734650, -.375889963226, -.017367079724]
  global Linea9_B_q=[0.020666902118270467, -0.3678660308533921, 0.2849675943410323, 0.08068312139155243, -6.180088831683512, -0.005949069824949582]
  global Linea10_A_p=p[-.633308011674, -.317691120510, .110994505067, 3.108412257751, -.375924840358, -.017335462218]
  global Linea10_A_q=[-0.015400976327146765, -1.3286836616185038, 1.936773774913373, -0.6125541680104964, -6.2178811871620026, -0.0036320224430834713]
  global Linea10_B_p=p[-.636723959746, -.266696422603, .110313777239, 2.020474030001, -2.393914578871, -.020559556678]
  global Linea10_B_q=[0.1863095606962153, -1.4646980412767157, 2.1071523959293508, -0.6494023099187478, -4.517372761756647, -0.0030763184180990777]
  global Linea11_A_p=p[-.635968117082, -.137768266518, .110291503345, 2.022156502066, -2.396023902726, -.017001304800]
  global Linea11_A_q=[-0.07354604755883543, -1.5471079384277004, 2.1956073198093513, -0.6515202395877564, -4.777150906045714, -0.0016328727799539422]
  global Linea11_B_p=p[-.635823762501, -.083112159886, .110947967545, 2.020383801711, -2.393902625595, -.020556219708]
  global Linea11_B_q=[-0.1908380759122572, -1.5708643495776826, 2.219519946363693, -0.6552069469693311, -4.894453843584338, -5.759924145127826E-4]
  global Linea12_A_p=p[-.635349004319, -.059560123377, .110675436750, 2.020448494290, -2.393915459802, -.020549325419]
  global Linea12_A_q=[-0.2417163087330083, -1.5775265863609773, 2.226737904634896, -0.6557292375944215, -4.945355909075068, -2.7983922817842455E-4]
  global Linea12_B_p=p[-.634712541835, .114180549607, .110553374724, 2.020445364866, -2.393872518012, -.020639369641]
  global Linea12_B_q=[-0.5920002980493377, -1.5626330075993593, 2.212116743928059, -0.656716518252761, -5.2956538993562265, 0.0023497530147947032]
  global Linea13_A_p=p[-.634623456483, .269837596517, .110201600077, 2.020453398687, -2.393912519416, -.020625959570]
  global Linea13_A_q=[-0.8324062816272679, -1.467834151680524, 2.1109901381841176, -0.6517507900808974, -5.53605704845582, 0.004880071949341591]
  global Linea13_B_p=p[-.634042726961, .326314422350, .110496359725, 2.020453146279, -2.393880944182, -.020556436265]
  global Linea13_B_q=[-0.9013131509490719, -1.4220878936638712, 2.0569245075861637, -0.6440785774915501, -5.604971402017175, 0.005892023416525838]
  global Linea14_A_p=p[-.633962563051, .349886895745, .111384319105, 2.020461054934, -2.393837815408, -.020488388436]
  global Linea14_A_q=[-0.9271552684385451, -1.4021744596762797, 2.030901915913411, -0.638246246484969, -5.630828387156736, 0.006335596407090804]
  global Linea14_B_p=p[-.633710645144, .491847819742, .110684020249, 2.020465968208, -2.393853523670, -.020498328553]
  global Linea14_B_q=[-1.0540906694923677, -1.2626852057640106, 1.849914655177884, -0.5986568379003074, -5.757703248039979, 0.008776098960622295]
  global Linea15_A_p=p[-.633318381480, .515440368134, .110157981608, 2.020364155203, -2.393955709596, -.020508500424]
  global Linea15_A_q=[-1.0716567160130523, -1.2377525992845975, 1.8159966720140375, -0.590008690959742, -5.775162769690162, 0.009175048989259693]
  global Linea15_B_p=p[-.632970544234, .593971386241, .110611257026, 2.020441893491, -2.393867996682, -.020560033230]
  global Linea15_B_q=[-1.122474592013197, -1.1525133394351883, 1.6903287270969671, -0.5508046641787523, -5.825981972795807, 0.0105832391144433]
  global Linea16_A_p=p[-.469658501632, .618240146447, .110222995954, -.214451812264, -3.127782132936, -.004019473137]
  global Linea16_A_q=[-1.0558229732465527, -1.3016284898486745, 1.9002200310933528, -0.5927846748758361, -4.220581777772279, 0.011476321502457587]
  global Linea16_B_p=p[-.493719050069, .618586170158, .110182854162, -.214521728939, -3.127775191063, -.003963807283]
  global Linea16_B_q=[-1.0238267857309111, -1.275874279860929, 1.8652664634035965, -0.5834704347683779, -4.1885285819385825, 0.011722546182054927]
  global Linea17_A_p=p[-.523228961738, .618283097935, .110575467666, -.214471054905, -3.127807816993, -.003922935561]
  global Linea17_A_q=[-0.986020922475106, -1.2448369572559947, 1.8212231475782765, -0.570331686133752, -4.150737151059812, 0.011980907174432787]
  global Linea17_B_p=p[-.574504951156, .618780338898, .110128214767, -.214469703842, -3.127802767109, -.003936726452]
  global Linea17_B_q=[-0.9261028235589457, -1.187335623873139, 1.739319222569904, -0.5457499909581429, -4.090780405906422, 0.012429946919677803]
  global Linea18_A_p=p[-.658632612166, .625710002031, .110712740654, -.214452471617, -3.127789736506, -.003965415657]
  global Linea18_A_q=[-0.845178287049178, -1.0844314603972958, 1.5815647493127447, -0.49060909462111013, -4.009765233293088, 0.013074519407750586]
  global Linea18_AB_p=p[-.890202921445, .626113814922, .110875277310, -.214452404345, -3.127789769971, -.003965502225]
  global Linea18_AB_q=[-0.666410313611312, -0.7691628241018513, 1.0473212163579504, -0.27060302401380376, -3.8304915682302414, 0.014782791955626706]
  global Linea18_BA_p=p[-.915681226687, .626148241580, .110663930708, -.214452382992, -3.127789782522, -.003965540155]
  global Linea18_BA_q=[-0.6508504262668842, -0.7263239276067006, 0.9700203563697315, -0.2360215468567155, -3.814840986504011, 0.014958594137021445]
  global Linea18_B_p=p[-1.149588289356, .625184723765, .110393131864, 1.164105535838, -2.905778629907, .010490328627]
  global Linea18_B_q=[-0.6326303647503142, -0.3275146210078148, 0.20111537186222211, 0.13508347000242882, -4.694571332776312, 0.015612052511970474]
  global Linea3_A_p=p[-.486113587685, -.381654790172, .110209853748, -2.029718171558, 2.396836025242, .006539356697]
  global Linea3_A_q=[0.5023501146744431, -1.5361328198955349, 2.1811298091833677, -0.6380602103615596, -4.2045801543318735, 0.0021335806977313965]
  global Linea3_B_p=p[-.689309999510, -.380790560286, .110221298638, -2.029741328186, 2.396866665706, .006544867438]
  global Linea3_B_q=[0.3500483409555937, -1.2996119924085647, 1.897164714326017, -0.5909098707750893, -4.3568479224424745, 0.0011255087267496577]
  global Linea3_C_p=p[-.714729999690, -.381227126176, .110547071161, -2.029776929873, 2.396879295064, .006534577602]
  global Linea3_C_q=[0.33744999495907063, -1.2688250546952826, 1.8544576378801096, -0.5790270771094068, -4.369441028028362, 0.0010604390539933767]
  global Linea3_D_p=p[-.917837219491, -.380541767460, .110221865782, -2.029755394743, 2.396894821329, .006515015900]
  global Linea3_D_q=[0.2571038234470917, -1.0113929982879881, 1.4652198238047056, -0.44729400411425146, -4.449521148440042, 5.150299017975257E-4]
  global Linea3_E_p=p[-.943229998544, -.380750053929, .110259990709, -2.029745434063, 2.396926573302, .006499247846]
  global Linea3_E_q=[0.2498513013118595, -0.9766011167360098, 1.4078530008671004, -0.42473280670143687, -4.4567064172282045, 4.774193732002274E-4]
  global Linea3_F_p=p[-1.146085092422, -.380439604703, .110221400844, -2.029733453251, 2.396965844598, .006565203868]
  global Linea3_F_q=[0.2019713672814234, -0.646294758886178, 0.8226722249789473, -0.16994117112115248, -4.503916586459291, 6.524146887532112E-5]
  global Linea4_A_p=p[-.486108757094, .025046304243, .110758143818, -2.029716299014, 2.396836938000, .006515392677]
  global Linea4_A_q=[-0.6198243103301522, -1.8882999158352325, 2.4675810378541345, -0.5700854657560619, -5.326458533546596, -0.006784361427073726]
  global Linea4_B_p=p[-.689317790597, .025343044299, .110270277143, -2.029778955477, 2.396879909406, .006610652550]
  global Linea4_B_q=[-0.3753982057274481, -1.4863250332384972, 2.127234561670928, -0.6334691626908935, -5.0823254476145046, -0.003953878004303135]
  global Linea4_C_p=p[-.714720878933, .025085639180, .110564947322, -2.029759600612, 2.396870390258, .006543964992]
  global Linea4_C_q=[-0.3574732421871216, -1.4458978723273388, 2.0805072777503337, -0.62720153470989, -5.064395308840017, -0.0037851685217935582]
  global Linea4_D_p=p[-.918062834429, .025352519761, .110171259010, -2.029799128046, 2.396930392653, .006486194650]
  global Linea4_D_q=[-0.2611086455128149, -1.1428166917109337, 1.6724418329476345, -0.5225904730037927, -4.9678804000226116, -0.0028991485058149635]
  global Linea4_E_p=p[-.942590633843, .025362358338, .110649521713, -2.029804551742, 2.396899081770, .006457624074]
  global Linea4_E_q=[-0.25289441014648517, -1.1074268163516194, 1.6172408610903544, -0.5027734532907475, -4.9596442412571164, -0.002849666115224636]
  global Linea4_F_p=p[-1.145809999790, .025560776894, .110408083890, -2.029813008116, 2.396940383966, .006563150563]
  global Linea4_F_q=[-0.20084306122313045, -0.7863624812136436, 1.078794535602439, -0.2855892759874594, -4.907083004154831, -0.00254582608889109]
  global Linea19_A_p=p[-.476993752079, -.517247348420, .110482180983, 3.111546112853, -.391923915264, .008397312856]
  global Linea19_A_q=[0.3663200128941275, -1.4014222930595945, 2.0287178354256366, -0.6180541023023682, -5.826341631139508, -1.5291289902208405E-4]
  global Linea19_B_p=p[-.500828906079, -.517140718168, .110478451867, 3.111546096446, -.391923927944, .008397321867]
  global Linea19_B_q=[0.35160318977889826, -1.372483224500158, 1.9927968502195714, -0.6107942241264501, -5.841051456629851, -4.441148050489119E-4]
  global Linea20_A_p=p[-.530365704390, -.517559293263, .110808466240, 3.111546095803, -.391923919730, .008397321765]
  global Linea20_A_q=[0.33563033058992797, -1.3363269605580115, 1.94574379450221, -0.5995698399171738, -5.857010959106091, -7.866311909552337E-4]
  global Linea20_B_p=p[-.581158312152, -.517498500963, .110403002315, 3.111546108155, -.391923880414, .008397313958]
  global Linea20_B_q=[0.3100718063294732, -1.2734435128638637, 1.862269700997377, -0.5783990031154378, -5.8825402788566326, -0.0013910864741042417]
  global Linea21_A_p=p[-.665124494580, -.504210865882, .110600214775, 3.111546096026, -.391923862954, .008397317428]
  global Linea21_A_q=[0.2573690543360489, -1.1776890584644226, 1.7249145049026704, -0.5352634869878585, -5.935170767510868, -0.002981287852510839]
  global Linea21_AB_p=p[-.974251236041, -.504210865628, .110800066306, 3.111546114034, -.391923818122, .008397307719]
  global Linea21_AB_q=[0.1799298970176908, -0.7275076895770098, 0.9726424894081029, -0.22955136462346193, -6.011907604967895, -0.006694782410928468]
  global Linea21_BA_p=p[-1.025948854959, -.504193334254, .110365518030, 3.111461951708, -.391950297460, .007971986720]
  global Linea21_BA_q=[0.1711561465100031, -0.6245380104555593, 0.7826065934061077, -0.14219863176293934, -6.020415742618897, -0.00727529467707555]
  global Linea21_B_p=p[-1.156707649875, -.503072794545, .110552345697, -2.509967435901, 1.875250959640, .002018781675]
  global Linea21_B_q=[0.24820218748779244, -0.5254029363972528, 0.5900463054518754, -0.04848122613311023, -4.910307707512297, -0.005929498886956708]
  global Linea22_A_p=p[-.637632433174, -.487982976479, .110979882815, 3.111546090028, -.391923816497, .008397315714]
  global Linea22_A_q=[0.24472934312467132, -1.2243225409022536, 1.7920552918632602, -0.5553129495014248, -5.947844161109764, -0.0034535219061346822]
  global Linea22_B_p=p[-.637632431354, -.461705375702, .110442752941, 3.111546036492, -.391923771717, .008397328631]
  global Linea22_B_q=[0.20717345223233252, -1.241126788140571, 1.8170870077379373, -0.5619896731518628, -5.985409130317459, -0.0050445535333150104]
  global Linea23_A_p=p[-.637534615339, -.308489261992, .110677052130, 3.111545937941, -.391923740021, .008397338509]
  global Linea23_A_q=[-0.028811057420131903, -1.3103407381530268, 1.9122910134814681, -0.5347248377646263, -6.221285712923422, -0.05854924353866764]
  global Linea23_B_p=p[-.640733962739, -.257360958137, .110320484628, -1.919417494801, 2.483289836721, .006037999405]
  global Linea23_B_q=[0.1905486224517663, -1.450436264205365, 2.0857635636442016, -0.6270384051172089, -4.427102446372631, -1.2154783732398755E-4]
  global Linea24_A_p=p[-.640733961490, -.233284408478, .110638871698, -1.919417552760, 2.483289783731, .006038056909]
  global Linea24_A_q=[0.14545722065475164, -1.4688531178545041, 2.1062141334115556, -0.629125928981761, -4.472191088464225, -5.194241954580292E-4]
  global Linea24_B_p=p[-.640733960275, -.122850233085, .110748525345, -1.919417597211, 2.483289752526, .006038102658]
  global Linea24_B_q=[-0.07605491895077954, -1.5353858090675878, 2.1786254928410287, -0.6349982171419359, -4.693686238133267, -0.0024004120313705357]
  global Linea25_A_p=p[-.640733959025, -.099756217052, .110149053398, -1.919417622933, 2.483289733447, .006038127253]
  global Linea25_A_q=[-0.1244406410731358, -1.544441361062633, 2.189369992241023, -0.6366292245286829, -4.742070057375175, -0.0028048012168682135]
  global Linea25_B_p=p[-.640733958354, -.050488778220, .110217684856, -1.919417690989, 2.483289674763, .006038178959]
  global Linea25_B_q=[-0.2283127239691316, -1.5597473241762696, 2.204914426396905, -0.6366747472205034, -4.845933707721189, -0.003691692902822119]
  global Linea26_A_p=p[-.640547506113, .101329564039, .110865193067, -1.919417715349, 2.483289689335, .006038198474]
  global Linea26_A_q=[-0.5332933914937019, -1.5549547991705772, 2.1986195220763918, -0.6339933161425408, -5.150899742746004, -0.006567092346116965]
  global Linea26_B_p=p[-.640680925269, .126812188772, .110399195482, -1.919417776128, 2.483289636172, .006038228077]
  global Linea26_B_q=[-0.5793189919827881, -1.5454213815793807, 2.1898401188412677, -0.6344739078467976, -5.196927100374702, -0.007060981198389271]
  global Linea27_A_p=p[-.640020451439, .150733100880, .110213160527, -1.919417813264, 2.483289585399, .006038241789]
  global Linea27_A_q=[-0.6217233925628083, -1.536230558235598, 2.180685216451952, -0.6342282470711922, -5.2393319968885415, -0.007541218547958195]
  global Linea27_B_p=p[-.638705853179, .318073094658, .110644167614, .116299088145, 3.121658150077, .005213984395]
  global Linea27_B_q=[-0.5302181957807237, -1.311893423219579, 1.9124676839697672, -0.5889762150838447, -3.75724236079801, -0.005733470438864963]
  global Linea28_B_p=p[-.638705854413, .351254438579, .110847636331, .116299139192, 3.121658163812, .005213903305]
  global Linea28_B_q=[-0.5749160295300664, -1.298447915414732, 1.8940103653434506, -0.5845949761528715, -3.801930405986168, -0.006576175916428895]
  global Linea29_A_p=p[-.697641532877, -.428593360272, .109990008742, -2.801724319039, 1.417160453684, .007198341972]
  global Linea29_A_q=[0.23527656453246326, -1.2789397769027335, 1.8687632760476625, -0.5784646150523693, -5.271258681648637, -0.008392583459158942]
  global Linea29_AB_p=p[-.904922459205, -.428636744368, .110456720257, -2.801724313385, 1.417160441963, .007198353879]
  global Linea29_AB_q=[0.17841388372429012, -1.0033716864184807, 1.4509125680551742, -0.43568055422700613, -5.327850178749621, -0.009190677590165564]
  global Linea29_BA_p=p[-.927926651083, -.428699716140, .110396892952, -2.803374774073, 1.417906295507, .010979680109]
  global Linea29_BA_q=[0.1737614027292249, -0.9719074952973319, 1.3997777298545344, -0.41899622204942855, -5.332520268083923, -0.0092330916124439]
  global Linea29_B_p=p[-1.160230525221, -.428650841833, .110797243179, -2.801724280945, 1.417160425039, .007198392254]
  global Linea29_B_q=[0.1368429869194676, -0.5546997699196048, 0.6476482713797873, -0.08061893151237864, -5.368496825996519, -0.009905759515234536]
  global Dejar_broca_p=p[.000823895285, .461515686418, .010824983886, -.221812507768, -3.131977618886, .000372128741]
  global Dejar_broca_q=[-2.183487269545523, -1.7626289818446779, 2.619089631151862, -0.8448915610823917, -5.34389996121201, -0.0023222697552238714]
  def Quitar_broca():
    $ 5362 "Quitar_broca" "noBreak"
    $ 5363 "Quitar_broca"
    $ 5364 "barrenos_hechos≔barrenos_hechos+1"
    global barrenos_hechos=barrenos_hechos+1
    $ 5371 "If barrenos_hechos≟14 or cambiar_broca≟ True "
    if (barrenos_hechos == 14  or  cambiar_broca ==   True  ):
      $ 5372 "'Codigo de quitar broca'"
      # 'Codigo de quitar broca'
      $ 5373 "MoveL"
      $ 5374 "Direction: Base Z+"
      global move_thread_flag_5374=0
      thread move_thread_5374():
        enter_critical
        move_thread_flag_5374 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.05)
        movel(towardsPos, a=1.2, v=0.25)
        move_thread_flag_5374 = 2
        exit_critical
      end
      move_thread_flag_5374 = 0
      move_thread_han_5374 = run move_thread_5374()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_5374 > 1):
          join move_thread_han_5374
          $ 5375 "Until (distance)"
          break
        end
        sync()
      end
      $ 5376 "If eje7≟2"
      if (eje7 == 2):
        $ 5377 "Home2" "breakAfter"
        movel(Home2_p, a=1.2, v=0.25)
        $ 5378 "yendo1" "breakAfter"
        movel(yendo1_p, a=1.2, v=0.25)
      end
      $ 5379 "If eje7≟3"
      if (eje7 == 3):
        $ 5380 "Home3" "breakAfter"
        movel(Home3_p, a=1.2, v=0.25)
        $ 5381 "Precam_bro1" "breakAfter"
        movel(Precam_bro1_p, a=1.2, v=0.25)
        $ 5382 "Precam_bro2" "breakAfter"
        movel(Precam_bro2_p, a=1.2, v=0.25)
      end
      $ 5383 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=1.2, v=0.25)
      $ 5384 "Dejar_broca" "breakAfter"
      movel(Dejar_broca_p, a=0.1, v=0.09)
      $ 5385 "Set outputbroc_m291=Encender"
      modbus_set_output_signal("outputbroc_m291", True)
      $ 5386 "Wait: 2.0"
      sleep(2.0)
      $ 5388 "Wait: 2.0"
      sleep(2.0)
      $ 5389 "Set outputbroc_m291=Apagar"
      modbus_set_output_signal("outputbroc_m291", False)
      $ 5390 "Wait: 0.5"
      sleep(0.5)
      $ 5391 "Wait fciclocarr_m292=LO"
      while (modbus_get_signal_status("fciclocarr_m292") == True):
        sync()
      end
      $ 5392 "Wait: 0.5"
      sleep(0.5)
      $ 5394 "MoveL"
      $ 5395 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=0.1, v=0.09)
      $ 5396 "Set avancarrusel_m7=Encender"
      modbus_set_output_signal("avancarrusel_m7", True)
      $ 5397 "Wait: 2.0"
      sleep(2.0)
      $ 5398 "Set avancarrusel_m7=Apagar"
      modbus_set_output_signal("avancarrusel_m7", False)
      $ 5399 "Wait: 0.1"
      sleep(0.1)
    end
  end
  def Poner_broca():
    $ 5400 "Poner_broca" "noBreak"
    $ 5401 "Poner_broca"
    $ 5402 "If cambiar_broca≟ True  or iniciando_prog≟ True "
    if (cambiar_broca ==   True    or  iniciando_prog ==   True  ):
      $ 5403 "'Codigo de poner broca'"
      # 'Codigo de poner broca'
      $ 5404 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 5405 "MoveL"
      $ 5406 "If eje7≟2 and iniciando_prog≟ True "
      if (eje7 == 2  and  iniciando_prog ==   True  ):
        $ 5407 "Home2" "breakAfter"
        movel(Home2_p, a=1.2, v=0.25)
        $ 5408 "yendo1" "breakAfter"
        movel(yendo1_p, a=1.2, v=0.25)
      end
      $ 5409 "If eje7≟3 and iniciando_prog≟ True "
      if (eje7 == 3  and  iniciando_prog ==   True  ):
        $ 5410 "Home3" "breakAfter"
        movel(Home3_p, a=1.2, v=0.25)
        $ 5411 "Precam_bro1" "breakAfter"
        movel(Precam_bro1_p, a=1.2, v=0.25)
        $ 5412 "Precam_bro2" "breakAfter"
        movel(Precam_bro2_p, a=1.2, v=0.25)
      end
      $ 5413 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=1.2, v=0.25)
      $ 5414 "Popup: Cambia a las siguientes brocas"
      popup("Cambia a las siguientes brocas", "Advertencia", True, False, blocking=True)
      $ 5415 "Dejar_broca" "breakAfter"
      movel(Dejar_broca_p, a=0.1, v=0.09)
      $ 5416 "Set ini_cambro_m289=Encender"
      modbus_set_output_signal("ini_cambro_m289", True)
      $ 5417 "Wait: 2.0"
      sleep(2.0)
      $ 5419 "Wait: 2.0"
      sleep(2.0)
      $ 5420 "Set ini_cambro_m289=Apagar"
      modbus_set_output_signal("ini_cambro_m289", False)
      $ 5421 "Wait: 0.5"
      sleep(0.5)
      $ 5422 "Wait fciclocarr_m292=LO"
      while (modbus_get_signal_status("fciclocarr_m292") == True):
        sync()
      end
      $ 5423 "Wait: 0.5"
      sleep(0.5)
      $ 5425 "MoveL"
      $ 5426 "Precambio_broca" "breakAfter"
      movel(Precambio_broca_p, a=0.1, v=0.09)
      $ 5427 "If eje7≟2"
      if (eje7 == 2):
        $ 5428 "yendo1" "breakAfter"
        movel(yendo1_p, a=1.2, v=0.25)
        $ 5429 "Home2" "breakAfter"
        movel(Home2_p, a=1.2, v=0.25)
      end
      $ 5430 "If eje7≟3"
      if (eje7 == 3):
        $ 5431 "Precam_bro2" "breakAfter"
        movel(Precam_bro2_p, a=1.2, v=0.25)
        $ 5432 "Precam_bro1" "breakAfter"
        movel(Precam_bro1_p, a=1.2, v=0.25)
        $ 5433 "Home3" "breakAfter"
        movel(Home3_p, a=1.2, v=0.25)
      end
      $ 5434 "barrenos_hechos≔0"
      global barrenos_hechos=0
      $ 5435 "iniciando_prog≔ False "
      global iniciando_prog=  False  
      $ 5436 "cambiar_broca≔ False "
      global cambiar_broca=  False  
    end
    $ 5437 "If barrenos_hechos≟14"
    if (barrenos_hechos == 14):
      $ 5438 "If cambiar_broca≟ False "
      if (cambiar_broca ==   False  ):
        $ 5439 "'Codigo de poner broca'"
        # 'Codigo de poner broca'
        $ 5440 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5441 "MoveL"
        $ 5442 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=1.2, v=0.25)
        $ 5443 "Dejar_broca" "breakAfter"
        movel(Dejar_broca_p, a=0.1, v=0.09)
        $ 5444 "Set ini_cambro_m289=Encender"
        modbus_set_output_signal("ini_cambro_m289", True)
        $ 5445 "Wait: 2.0"
        sleep(2.0)
        $ 5447 "Wait: 2.0"
        sleep(2.0)
        $ 5448 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5449 "Wait: 0.5"
        sleep(0.5)
        $ 5450 "Wait fciclocarr_m292=LO"
        while (modbus_get_signal_status("fciclocarr_m292") == True):
          sync()
        end
        $ 5451 "Wait: 0.5"
        sleep(0.5)
        $ 5453 "MoveL"
        $ 5454 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=0.1, v=0.09)
        $ 5455 "If eje7≟2"
        if (eje7 == 2):
          $ 5456 "yendo1" "breakAfter"
          movel(yendo1_p, a=1.2, v=0.25)
          $ 5457 "Home2" "breakAfter"
          movel(Home2_p, a=1.2, v=0.25)
        end
        $ 5458 "If eje7≟3"
        if (eje7 == 3):
          $ 5459 "Precam_bro2" "breakAfter"
          movel(Precam_bro2_p, a=1.2, v=0.25)
          $ 5460 "Precam_bro1" "breakAfter"
          movel(Precam_bro1_p, a=1.2, v=0.25)
          $ 5461 "Home3" "breakAfter"
          movel(Home3_p, a=1.2, v=0.25)
        end
        $ 5462 "barrenos_hechos≔0"
        global barrenos_hechos=0
        $ 5463 "iniciando_prog≔ False "
        global iniciando_prog=  False  
        $ 5464 "cambiar_broca≔ False "
        global cambiar_broca=  False  
      else:
        $ 5465 "Else" "noBreak"
        $ 5466 "'Codigo de poner broca'"
        # 'Codigo de poner broca'
        $ 5467 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5468 "MoveL"
        $ 5469 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=1.2, v=0.25)
        $ 5470 "Popup: Cambia a las siguientes brocas"
        popup("Cambia a las siguientes brocas", "Advertencia", True, False, blocking=True)
        $ 5471 "Dejar_broca" "breakAfter"
        movel(Dejar_broca_p, a=0.1, v=0.09)
        $ 5472 "Set ini_cambro_m289=Encender"
        modbus_set_output_signal("ini_cambro_m289", True)
        $ 5473 "Wait: 2.0"
        sleep(2.0)
        $ 5475 "Wait: 2.0"
        sleep(2.0)
        $ 5476 "Set ini_cambro_m289=Apagar"
        modbus_set_output_signal("ini_cambro_m289", False)
        $ 5477 "Wait: 0.5"
        sleep(0.5)
        $ 5478 "Wait fciclocarr_m292=LO"
        while (modbus_get_signal_status("fciclocarr_m292") == True):
          sync()
        end
        $ 5479 "Wait: 0.5"
        sleep(0.5)
        $ 5481 "MoveL"
        $ 5482 "Precambio_broca" "breakAfter"
        movel(Precambio_broca_p, a=0.1, v=0.09)
        $ 5483 "If eje7≟2"
        if (eje7 == 2):
          $ 5484 "yendo1" "breakAfter"
          movel(yendo1_p, a=1.2, v=0.25)
          $ 5485 "Home2" "breakAfter"
          movel(Home2_p, a=1.2, v=0.25)
        end
        $ 5486 "If eje7≟3"
        if (eje7 == 3):
          $ 5487 "Precam_bro2" "breakAfter"
          movel(Precam_bro2_p, a=1.2, v=0.25)
          $ 5488 "Precam_bro1" "breakAfter"
          movel(Precam_bro1_p, a=1.2, v=0.25)
          $ 5489 "Home3" "breakAfter"
          movel(Home3_p, a=1.2, v=0.25)
        end
        $ 5490 "barrenos_hechos≔0"
        global barrenos_hechos=0
        $ 5491 "iniciando_prog≔ False "
        global iniciando_prog=  False  
        $ 5492 "cambiar_broca≔ False "
        global cambiar_broca=  False  
      end
    end
  end
  while (True):
    $ 1 "Robot Program"
    $ 2 "Variables"
    $ 3 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4 "barrenos_menos1≔0"
    global barrenos_menos1=0
    $ 5 "barreno_actual≔0"
    global barreno_actual=0
    $ 6 "posicion≔p[0,0,300,0,0,0]"
    global posicion=p[0,0,300,0,0,0]
    $ 7 "cambiar_broca≔ False "
    global cambiar_broca=  False  
    $ 8 "barrenos_hechos≔0"
    global barrenos_hechos=0
    $ 9 "eje7≔0"
    global eje7=0
    $ 10 "Wait: 0.5"
    sleep(0.5)
    $ 11 "Home"
    $ 12 "Wait: 0.3"
    sleep(0.3)
    $ 13 "MoveL"
    $ 14 "Traslacion" "breakAfter"
    movel(Traslacion_p, a=1.2, v=0.25)
    $ 15 "Home2" "breakAfter"
    movel(Home2_p, a=1.2, v=0.25)
    $ 16 "Home3" "breakAfter"
    movel(Home3_p, a=1.2, v=0.25)
    $ 17 "Home4" "breakAfter"
    movel(Home4_p, a=1.2, v=0.25)
    $ 18 "PosicionApagado" "breakAfter"
    movel(PosicionApagado_p, a=1.2, v=0.25)
    $ 19 "Precambio_broca" "breakAfter"
    movel(Precambio_broca_p, a=1.2, v=0.25)
    $ 20 "yendo1" "breakAfter"
    movel(yendo1_p, a=1.2, v=0.25)
    $ 21 "Precam_bro1" "breakAfter"
    movel(Precam_bro1_p, a=1.2, v=0.25)
    $ 22 "Precam_bro2" "breakAfter"
    movel(Precam_bro2_p, a=1.2, v=0.25)
    $ 23 "Home"
    movej([1.5707389881360854, -1.5704867605983486, 2.609644234392224, 0.2613772922410976, -4.625127484032603, 1.7781079770351482E-5], a=1.3962634015954636, v=1.0471975511965976)
    $ 31 "Wait: 0.3"
    sleep(0.3)
    $ 32 "iniciando_prog≔ True "
    global iniciando_prog=  True  
    $ 33 "Call Poner_broca"
    Poner_broca()
    $ 34 "Posicion2"
    $ 35 "Inicio"
    $ 36 "eje7≔2"
    global eje7=2
    $ 37 "MoveL"
    $ 38 "Home2" "breakAfter"
    movel(Home2_p, a=1.2, v=0.25)
    $ 39 "SeatTracks"
    $ 40 "Broca_1"
    $ 41 "Linea1"
    $ 42 "Marcar_puntos"
    $ 43 "MoveL"
    $ 44 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 52 "Linea1_A" "breakAfter"
    movel(Linea1_A_p, a=0.5, v=0.1)
    $ 53 "Linea1_B" "breakAfter"
    movel(Linea1_B_p, a=0.5, v=0.1)
    $ 54 "Linea1_C" "breakAfter"
    movel(Linea1_C_p, a=0.5, v=0.1)
    $ 55 "Linea1_D" "breakAfter"
    movel(Linea1_D_p, a=0.5, v=0.1)
    $ 56 "Linea1_E" "breakAfter"
    movel(Linea1_E_p, a=0.5, v=0.1)
    $ 57 "Linea1_F" "breakAfter"
    movel(Linea1_F_p, a=0.5, v=0.1)
    $ 58 "AB"
    $ 59 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 60 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 61 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 62 "barreno_actual≔0"
    global barreno_actual=0
    $ 63 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 64 "Perforacion"
      $ 65 "MoveL"
      $ 66 "internos≔interpolate_pose(Linea1_A, Linea1_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_A_p, Linea1_B_p, barreno_actual/barrenos_menos1)
      $ 67 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 68 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 69 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 70 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 71 "Direction: Base Z-"
      global move_thread_flag_71=0
      thread move_thread_71():
        enter_critical
        move_thread_flag_71 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_71 = 2
        exit_critical
      end
      move_thread_flag_71 = 0
      move_thread_han_71 = run move_thread_71()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_71 > 1):
          join move_thread_han_71
          $ 72 "Until (distance)"
          break
        end
        sync()
      end
      $ 73 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 74 "Direction: Base Z+"
      global move_thread_flag_74=0
      thread move_thread_74():
        enter_critical
        move_thread_flag_74 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_74 = 2
        exit_critical
      end
      move_thread_flag_74 = 0
      move_thread_han_74 = run move_thread_74()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_74 > 1):
          join move_thread_han_74
          $ 75 "Until (distance)"
          break
        end
        sync()
      end
      $ 76 "Wait: 0.3"
      sleep(0.3)
      $ 77 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 78 "Wait: 0.3"
      sleep(0.3)
      $ 79 "Loop 3 times"
      Loop_39 = 0
      while (Loop_39 < 3):
        $ 80 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 81 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 82 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 83 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 84 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_39 = Loop_39 + 1
      end
      $ 85 "Direction: Base Z+"
      global move_thread_flag_85=0
      thread move_thread_85():
        enter_critical
        move_thread_flag_85 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_85 = 2
        exit_critical
      end
      move_thread_flag_85 = 0
      move_thread_han_85 = run move_thread_85()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_85 > 1):
          join move_thread_han_85
          $ 86 "Until (distance)"
          break
        end
        sync()
      end
      $ 87 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 88 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 89 "Call Quitar_broca"
      Quitar_broca()
      $ 90 "Call Poner_broca"
      Poner_broca()
    end
    $ 91 "CD"
    $ 92 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 93 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 94 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 95 "barreno_actual≔0"
    global barreno_actual=0
    $ 96 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 97 "Perforacion"
      $ 98 "MoveL"
      $ 99 "internos≔interpolate_pose(Linea1_C, Linea1_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_C_p, Linea1_D_p, barreno_actual/barrenos_menos1)
      $ 100 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 101 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 102 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 103 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 104 "Direction: Base Z-"
      global move_thread_flag_104=0
      thread move_thread_104():
        enter_critical
        move_thread_flag_104 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_104 = 2
        exit_critical
      end
      move_thread_flag_104 = 0
      move_thread_han_104 = run move_thread_104()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_104 > 1):
          join move_thread_han_104
          $ 105 "Until (distance)"
          break
        end
        sync()
      end
      $ 106 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 107 "Direction: Base Z+"
      global move_thread_flag_107=0
      thread move_thread_107():
        enter_critical
        move_thread_flag_107 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_107 = 2
        exit_critical
      end
      move_thread_flag_107 = 0
      move_thread_han_107 = run move_thread_107()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_107 > 1):
          join move_thread_han_107
          $ 108 "Until (distance)"
          break
        end
        sync()
      end
      $ 109 "Wait: 0.3"
      sleep(0.3)
      $ 110 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 111 "Wait: 0.3"
      sleep(0.3)
      $ 112 "Loop 3 times"
      Loop_56 = 0
      while (Loop_56 < 3):
        $ 113 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 114 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 115 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 116 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 117 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_56 = Loop_56 + 1
      end
      $ 118 "Direction: Base Z+"
      global move_thread_flag_118=0
      thread move_thread_118():
        enter_critical
        move_thread_flag_118 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_118 = 2
        exit_critical
      end
      move_thread_flag_118 = 0
      move_thread_han_118 = run move_thread_118()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_118 > 1):
          join move_thread_han_118
          $ 119 "Until (distance)"
          break
        end
        sync()
      end
      $ 120 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 121 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 122 "Call Quitar_broca"
      Quitar_broca()
      $ 123 "Call Poner_broca"
      Poner_broca()
    end
    $ 124 "EF"
    $ 125 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 126 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 127 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 128 "barreno_actual≔0"
    global barreno_actual=0
    $ 129 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 130 "Perforacion"
      $ 131 "MoveL"
      $ 132 "internos≔interpolate_pose(Linea1_E, Linea1_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_E_p, Linea1_F_p, barreno_actual/barrenos_menos1)
      $ 133 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 134 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 135 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 136 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 137 "Direction: Base Z-"
      global move_thread_flag_137=0
      thread move_thread_137():
        enter_critical
        move_thread_flag_137 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.067)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_137 = 2
        exit_critical
      end
      move_thread_flag_137 = 0
      move_thread_han_137 = run move_thread_137()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_137 > 1):
          join move_thread_han_137
          $ 138 "Until (distance)"
          break
        end
        sync()
      end
      $ 139 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 140 "Direction: Base Z+"
      global move_thread_flag_140=0
      thread move_thread_140():
        enter_critical
        move_thread_flag_140 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_140 = 2
        exit_critical
      end
      move_thread_flag_140 = 0
      move_thread_han_140 = run move_thread_140()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_140 > 1):
          join move_thread_han_140
          $ 141 "Until (distance)"
          break
        end
        sync()
      end
      $ 142 "Wait: 0.3"
      sleep(0.3)
      $ 143 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 144 "Wait: 0.3"
      sleep(0.3)
      $ 145 "Loop 3 times"
      Loop_61 = 0
      while (Loop_61 < 3):
        $ 146 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 147 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 148 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 149 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 150 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_61 = Loop_61 + 1
      end
      $ 151 "Direction: Base Z+"
      global move_thread_flag_151=0
      thread move_thread_151():
        enter_critical
        move_thread_flag_151 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_151 = 2
        exit_critical
      end
      move_thread_flag_151 = 0
      move_thread_han_151 = run move_thread_151()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_151 > 1):
          join move_thread_han_151
          $ 152 "Until (distance)"
          break
        end
        sync()
      end
      $ 153 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 154 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 155 "Call Quitar_broca"
      Quitar_broca()
      $ 156 "Call Poner_broca"
      Poner_broca()
    end
    $ 157 "Popup: Linea1 con chica Terminada!"
    popup("Linea1 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 158 "Linea2"
    $ 159 "Marcar_puntos"
    $ 160 "MoveL"
    $ 161 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 162 "Linea2_A" "breakAfter"
    movel(Linea2_A_p, a=0.5, v=0.1)
    $ 163 "Linea2_B" "breakAfter"
    movel(Linea2_B_p, a=0.5, v=0.1)
    $ 164 "Linea2_C" "breakAfter"
    movel(Linea2_C_p, a=0.5, v=0.1)
    $ 165 "Linea2_D" "breakAfter"
    movel(Linea2_D_p, a=0.5, v=0.1)
    $ 166 "Linea2_E" "breakAfter"
    movel(Linea2_E_p, a=0.5, v=0.1)
    $ 167 "Linea2_F" "breakAfter"
    movel(Linea2_F_p, a=0.5, v=0.1)
    $ 168 "AB"
    $ 169 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 170 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 171 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 172 "barreno_actual≔0"
    global barreno_actual=0
    $ 173 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 174 "Perforacion"
      $ 175 "MoveL"
      $ 176 "internos≔interpolate_pose(Linea2_A, Linea2_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_A_p, Linea2_B_p, barreno_actual/barrenos_menos1)
      $ 177 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 178 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 179 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 180 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 181 "Direction: Base Z-"
      global move_thread_flag_181=0
      thread move_thread_181():
        enter_critical
        move_thread_flag_181 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_181 = 2
        exit_critical
      end
      move_thread_flag_181 = 0
      move_thread_han_181 = run move_thread_181()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_181 > 1):
          join move_thread_han_181
          $ 182 "Until (distance)"
          break
        end
        sync()
      end
      $ 183 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 184 "Direction: Base Z+"
      global move_thread_flag_184=0
      thread move_thread_184():
        enter_critical
        move_thread_flag_184 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_184 = 2
        exit_critical
      end
      move_thread_flag_184 = 0
      move_thread_han_184 = run move_thread_184()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_184 > 1):
          join move_thread_han_184
          $ 185 "Until (distance)"
          break
        end
        sync()
      end
      $ 186 "Wait: 0.3"
      sleep(0.3)
      $ 187 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 188 "Wait: 0.3"
      sleep(0.3)
      $ 189 "Loop 3 times"
      Loop_63 = 0
      while (Loop_63 < 3):
        $ 190 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 191 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 192 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 193 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 194 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_63 = Loop_63 + 1
      end
      $ 195 "Direction: Base Z+"
      global move_thread_flag_195=0
      thread move_thread_195():
        enter_critical
        move_thread_flag_195 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_195 = 2
        exit_critical
      end
      move_thread_flag_195 = 0
      move_thread_han_195 = run move_thread_195()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_195 > 1):
          join move_thread_han_195
          $ 196 "Until (distance)"
          break
        end
        sync()
      end
      $ 197 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 198 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 199 "Call Quitar_broca"
      Quitar_broca()
      $ 200 "Call Poner_broca"
      Poner_broca()
    end
    $ 201 "CD"
    $ 202 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 203 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 204 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 205 "barreno_actual≔0"
    global barreno_actual=0
    $ 206 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 207 "Perforacion"
      $ 208 "MoveL"
      $ 209 "internos≔interpolate_pose(Linea2_C, Linea2_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_C_p, Linea2_D_p, barreno_actual/barrenos_menos1)
      $ 210 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 211 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 212 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 213 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 214 "Direction: Base Z-"
      global move_thread_flag_214=0
      thread move_thread_214():
        enter_critical
        move_thread_flag_214 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_214 = 2
        exit_critical
      end
      move_thread_flag_214 = 0
      move_thread_han_214 = run move_thread_214()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_214 > 1):
          join move_thread_han_214
          $ 215 "Until (distance)"
          break
        end
        sync()
      end
      $ 216 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 217 "Direction: Base Z+"
      global move_thread_flag_217=0
      thread move_thread_217():
        enter_critical
        move_thread_flag_217 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_217 = 2
        exit_critical
      end
      move_thread_flag_217 = 0
      move_thread_han_217 = run move_thread_217()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_217 > 1):
          join move_thread_han_217
          $ 218 "Until (distance)"
          break
        end
        sync()
      end
      $ 219 "Wait: 0.3"
      sleep(0.3)
      $ 220 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 221 "Wait: 0.3"
      sleep(0.3)
      $ 222 "Loop 3 times"
      Loop_65 = 0
      while (Loop_65 < 3):
        $ 223 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 224 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 225 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 226 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 227 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_65 = Loop_65 + 1
      end
      $ 228 "Direction: Base Z+"
      global move_thread_flag_228=0
      thread move_thread_228():
        enter_critical
        move_thread_flag_228 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_228 = 2
        exit_critical
      end
      move_thread_flag_228 = 0
      move_thread_han_228 = run move_thread_228()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_228 > 1):
          join move_thread_han_228
          $ 229 "Until (distance)"
          break
        end
        sync()
      end
      $ 230 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 231 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 232 "Call Quitar_broca"
      Quitar_broca()
      $ 233 "Call Poner_broca"
      Poner_broca()
    end
    $ 234 "EF"
    $ 235 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 236 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 237 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 238 "barreno_actual≔0"
    global barreno_actual=0
    $ 239 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 240 "Perforacion"
      $ 241 "MoveL"
      $ 242 "internos≔interpolate_pose(Linea2_E, Linea2_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_E_p, Linea2_F_p, barreno_actual/barrenos_menos1)
      $ 243 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 244 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 245 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 246 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 247 "Direction: Base Z-"
      global move_thread_flag_247=0
      thread move_thread_247():
        enter_critical
        move_thread_flag_247 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_247 = 2
        exit_critical
      end
      move_thread_flag_247 = 0
      move_thread_han_247 = run move_thread_247()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_247 > 1):
          join move_thread_han_247
          $ 248 "Until (distance)"
          break
        end
        sync()
      end
      $ 249 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 250 "Direction: Base Z+"
      global move_thread_flag_250=0
      thread move_thread_250():
        enter_critical
        move_thread_flag_250 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_250 = 2
        exit_critical
      end
      move_thread_flag_250 = 0
      move_thread_han_250 = run move_thread_250()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_250 > 1):
          join move_thread_han_250
          $ 251 "Until (distance)"
          break
        end
        sync()
      end
      $ 252 "Wait: 0.3"
      sleep(0.3)
      $ 253 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 254 "Wait: 0.3"
      sleep(0.3)
      $ 255 "Loop 3 times"
      Loop_67 = 0
      while (Loop_67 < 3):
        $ 256 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 257 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 258 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 259 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 260 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_67 = Loop_67 + 1
      end
      $ 261 "Direction: Base Z+"
      global move_thread_flag_261=0
      thread move_thread_261():
        enter_critical
        move_thread_flag_261 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_261 = 2
        exit_critical
      end
      move_thread_flag_261 = 0
      move_thread_han_261 = run move_thread_261()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_261 > 1):
          join move_thread_han_261
          $ 262 "Until (distance)"
          break
        end
        sync()
      end
      $ 263 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 264 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 265 "If barreno_actual>barrenos_menos1"
      if (barreno_actual>barrenos_menos1):
        $ 266 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 267 "Call Quitar_broca"
      Quitar_broca()
      $ 268 "Call Poner_broca"
      Poner_broca()
    end
    $ 269 "Popup: Linea2 con chica Terminada!"
    popup("Linea2 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 270 "Broca_2"
    $ 271 "Linea1"
    $ 272 "Marcar_puntos"
    $ 273 "MoveL"
    $ 274 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 282 "Linea1_A" "breakAfter"
    movel(Linea1_A_p, a=0.5, v=0.1)
    $ 283 "Linea1_B" "breakAfter"
    movel(Linea1_B_p, a=0.5, v=0.1)
    $ 284 "Linea1_C" "breakAfter"
    movel(Linea1_C_p, a=0.5, v=0.1)
    $ 285 "Linea1_D" "breakAfter"
    movel(Linea1_D_p, a=0.5, v=0.1)
    $ 286 "Linea1_E" "breakAfter"
    movel(Linea1_E_p, a=0.5, v=0.1)
    $ 287 "Linea1_F" "breakAfter"
    movel(Linea1_F_p, a=0.5, v=0.1)
    $ 288 "AB"
    $ 289 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 290 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 291 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 292 "barreno_actual≔0"
    global barreno_actual=0
    $ 293 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 294 "Perforacion"
      $ 295 "MoveL"
      $ 296 "internos≔interpolate_pose(Linea1_A, Linea1_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_A_p, Linea1_B_p, barreno_actual/barrenos_menos1)
      $ 297 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 298 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 299 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 300 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 301 "Direction: Base Z-"
      global move_thread_flag_301=0
      thread move_thread_301():
        enter_critical
        move_thread_flag_301 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.072)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_301 = 2
        exit_critical
      end
      move_thread_flag_301 = 0
      move_thread_han_301 = run move_thread_301()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_301 > 1):
          join move_thread_han_301
          $ 302 "Until (distance)"
          break
        end
        sync()
      end
      $ 303 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 304 "Direction: Base Z+"
      global move_thread_flag_304=0
      thread move_thread_304():
        enter_critical
        move_thread_flag_304 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_304 = 2
        exit_critical
      end
      move_thread_flag_304 = 0
      move_thread_han_304 = run move_thread_304()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_304 > 1):
          join move_thread_han_304
          $ 305 "Until (distance)"
          break
        end
        sync()
      end
      $ 306 "Wait: 0.3"
      sleep(0.3)
      $ 307 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 308 "Wait: 0.3"
      sleep(0.3)
      $ 309 "Loop 2 times"
      Loop_69 = 0
      while (Loop_69 < 2):
        $ 310 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 311 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 312 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 313 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 314 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_69 = Loop_69 + 1
      end
      $ 315 "Direction: Base Z+"
      global move_thread_flag_315=0
      thread move_thread_315():
        enter_critical
        move_thread_flag_315 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_315 = 2
        exit_critical
      end
      move_thread_flag_315 = 0
      move_thread_han_315 = run move_thread_315()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_315 > 1):
          join move_thread_han_315
          $ 316 "Until (distance)"
          break
        end
        sync()
      end
      $ 317 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 318 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 319 "Call Quitar_broca"
      Quitar_broca()
      $ 320 "Call Poner_broca"
      Poner_broca()
    end
    $ 321 "CD"
    $ 322 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 323 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 324 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 325 "barreno_actual≔0"
    global barreno_actual=0
    $ 326 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 327 "Perforacion"
      $ 328 "MoveL"
      $ 329 "internos≔interpolate_pose(Linea1_C, Linea1_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_C_p, Linea1_D_p, barreno_actual/barrenos_menos1)
      $ 330 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 331 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 332 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 333 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 334 "Direction: Base Z-"
      global move_thread_flag_334=0
      thread move_thread_334():
        enter_critical
        move_thread_flag_334 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.072)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_334 = 2
        exit_critical
      end
      move_thread_flag_334 = 0
      move_thread_han_334 = run move_thread_334()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_334 > 1):
          join move_thread_han_334
          $ 335 "Until (distance)"
          break
        end
        sync()
      end
      $ 336 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 337 "Direction: Base Z+"
      global move_thread_flag_337=0
      thread move_thread_337():
        enter_critical
        move_thread_flag_337 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_337 = 2
        exit_critical
      end
      move_thread_flag_337 = 0
      move_thread_han_337 = run move_thread_337()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_337 > 1):
          join move_thread_han_337
          $ 338 "Until (distance)"
          break
        end
        sync()
      end
      $ 339 "Wait: 0.3"
      sleep(0.3)
      $ 340 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 341 "Wait: 0.3"
      sleep(0.3)
      $ 342 "Loop 2 times"
      Loop_71 = 0
      while (Loop_71 < 2):
        $ 343 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 344 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 345 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 346 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 347 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_71 = Loop_71 + 1
      end
      $ 348 "Direction: Base Z+"
      global move_thread_flag_348=0
      thread move_thread_348():
        enter_critical
        move_thread_flag_348 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_348 = 2
        exit_critical
      end
      move_thread_flag_348 = 0
      move_thread_han_348 = run move_thread_348()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_348 > 1):
          join move_thread_han_348
          $ 349 "Until (distance)"
          break
        end
        sync()
      end
      $ 350 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 351 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 352 "Call Quitar_broca"
      Quitar_broca()
      $ 353 "Call Poner_broca"
      Poner_broca()
    end
    $ 354 "EF"
    $ 355 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 356 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 357 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 358 "barreno_actual≔0"
    global barreno_actual=0
    $ 359 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 360 "Perforacion"
      $ 361 "MoveL"
      $ 362 "internos≔interpolate_pose(Linea1_E, Linea1_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_E_p, Linea1_F_p, barreno_actual/barrenos_menos1)
      $ 363 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 364 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 365 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 366 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 367 "Direction: Base Z-"
      global move_thread_flag_367=0
      thread move_thread_367():
        enter_critical
        move_thread_flag_367 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.072)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_367 = 2
        exit_critical
      end
      move_thread_flag_367 = 0
      move_thread_han_367 = run move_thread_367()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_367 > 1):
          join move_thread_han_367
          $ 368 "Until (distance)"
          break
        end
        sync()
      end
      $ 369 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 370 "Direction: Base Z+"
      global move_thread_flag_370=0
      thread move_thread_370():
        enter_critical
        move_thread_flag_370 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_370 = 2
        exit_critical
      end
      move_thread_flag_370 = 0
      move_thread_han_370 = run move_thread_370()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_370 > 1):
          join move_thread_han_370
          $ 371 "Until (distance)"
          break
        end
        sync()
      end
      $ 372 "Wait: 0.3"
      sleep(0.3)
      $ 373 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 374 "Wait: 0.3"
      sleep(0.3)
      $ 375 "Loop 2 times"
      Loop_73 = 0
      while (Loop_73 < 2):
        $ 376 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 377 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 378 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 379 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 380 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_73 = Loop_73 + 1
      end
      $ 381 "Direction: Base Z+"
      global move_thread_flag_381=0
      thread move_thread_381():
        enter_critical
        move_thread_flag_381 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_381 = 2
        exit_critical
      end
      move_thread_flag_381 = 0
      move_thread_han_381 = run move_thread_381()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_381 > 1):
          join move_thread_han_381
          $ 382 "Until (distance)"
          break
        end
        sync()
      end
      $ 383 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 384 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 385 "Call Quitar_broca"
      Quitar_broca()
      $ 386 "Call Poner_broca"
      Poner_broca()
    end
    $ 387 "Popup: Linea1 con media Terminada!"
    popup("Linea1 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 388 "Linea2"
    $ 389 "Marcar_puntos"
    $ 390 "MoveL"
    $ 391 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 392 "Linea2_A" "breakAfter"
    movel(Linea2_A_p, a=0.5, v=0.1)
    $ 393 "Linea2_B" "breakAfter"
    movel(Linea2_B_p, a=0.5, v=0.1)
    $ 394 "Linea2_C" "breakAfter"
    movel(Linea2_C_p, a=0.5, v=0.1)
    $ 395 "Linea2_D" "breakAfter"
    movel(Linea2_D_p, a=0.5, v=0.1)
    $ 396 "Linea2_E" "breakAfter"
    movel(Linea2_E_p, a=0.5, v=0.1)
    $ 397 "Linea2_F" "breakAfter"
    movel(Linea2_F_p, a=0.5, v=0.1)
    $ 398 "AB"
    $ 399 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 400 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 401 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 402 "barreno_actual≔0"
    global barreno_actual=0
    $ 403 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 404 "Perforacion"
      $ 405 "MoveL"
      $ 406 "internos≔interpolate_pose(Linea2_A, Linea2_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_A_p, Linea2_B_p, barreno_actual/barrenos_menos1)
      $ 407 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 408 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 409 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 410 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 411 "Direction: Base Z-"
      global move_thread_flag_411=0
      thread move_thread_411():
        enter_critical
        move_thread_flag_411 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_411 = 2
        exit_critical
      end
      move_thread_flag_411 = 0
      move_thread_han_411 = run move_thread_411()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_411 > 1):
          join move_thread_han_411
          $ 412 "Until (distance)"
          break
        end
        sync()
      end
      $ 413 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 414 "Direction: Base Z+"
      global move_thread_flag_414=0
      thread move_thread_414():
        enter_critical
        move_thread_flag_414 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_414 = 2
        exit_critical
      end
      move_thread_flag_414 = 0
      move_thread_han_414 = run move_thread_414()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_414 > 1):
          join move_thread_han_414
          $ 415 "Until (distance)"
          break
        end
        sync()
      end
      $ 416 "Wait: 0.3"
      sleep(0.3)
      $ 417 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 418 "Wait: 0.3"
      sleep(0.3)
      $ 419 "Loop 2 times"
      Loop_75 = 0
      while (Loop_75 < 2):
        $ 420 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 421 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 422 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 423 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 424 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_75 = Loop_75 + 1
      end
      $ 425 "Direction: Base Z+"
      global move_thread_flag_425=0
      thread move_thread_425():
        enter_critical
        move_thread_flag_425 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_425 = 2
        exit_critical
      end
      move_thread_flag_425 = 0
      move_thread_han_425 = run move_thread_425()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_425 > 1):
          join move_thread_han_425
          $ 426 "Until (distance)"
          break
        end
        sync()
      end
      $ 427 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 428 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 429 "Call Quitar_broca"
      Quitar_broca()
      $ 430 "Call Poner_broca"
      Poner_broca()
    end
    $ 431 "CD"
    $ 432 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 433 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 434 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 435 "barreno_actual≔0"
    global barreno_actual=0
    $ 436 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 437 "Perforacion"
      $ 438 "MoveL"
      $ 439 "internos≔interpolate_pose(Linea2_C, Linea2_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_C_p, Linea2_D_p, barreno_actual/barrenos_menos1)
      $ 440 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 441 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 442 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 443 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 444 "Direction: Base Z-"
      global move_thread_flag_444=0
      thread move_thread_444():
        enter_critical
        move_thread_flag_444 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_444 = 2
        exit_critical
      end
      move_thread_flag_444 = 0
      move_thread_han_444 = run move_thread_444()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_444 > 1):
          join move_thread_han_444
          $ 445 "Until (distance)"
          break
        end
        sync()
      end
      $ 446 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 447 "Direction: Base Z+"
      global move_thread_flag_447=0
      thread move_thread_447():
        enter_critical
        move_thread_flag_447 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_447 = 2
        exit_critical
      end
      move_thread_flag_447 = 0
      move_thread_han_447 = run move_thread_447()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_447 > 1):
          join move_thread_han_447
          $ 448 "Until (distance)"
          break
        end
        sync()
      end
      $ 449 "Wait: 0.3"
      sleep(0.3)
      $ 450 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 451 "Wait: 0.3"
      sleep(0.3)
      $ 452 "Loop 2 times"
      Loop_78 = 0
      while (Loop_78 < 2):
        $ 453 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 454 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 455 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 456 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 457 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_78 = Loop_78 + 1
      end
      $ 458 "Direction: Base Z+"
      global move_thread_flag_458=0
      thread move_thread_458():
        enter_critical
        move_thread_flag_458 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_458 = 2
        exit_critical
      end
      move_thread_flag_458 = 0
      move_thread_han_458 = run move_thread_458()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_458 > 1):
          join move_thread_han_458
          $ 459 "Until (distance)"
          break
        end
        sync()
      end
      $ 460 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 461 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 462 "Call Quitar_broca"
      Quitar_broca()
      $ 463 "Call Poner_broca"
      Poner_broca()
    end
    $ 464 "EF"
    $ 465 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 466 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 467 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 468 "barreno_actual≔0"
    global barreno_actual=0
    $ 469 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 470 "Perforacion"
      $ 471 "MoveL"
      $ 472 "internos≔interpolate_pose(Linea2_E, Linea2_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_E_p, Linea2_F_p, barreno_actual/barrenos_menos1)
      $ 473 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 474 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 475 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 476 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 477 "Direction: Base Z-"
      global move_thread_flag_477=0
      thread move_thread_477():
        enter_critical
        move_thread_flag_477 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_477 = 2
        exit_critical
      end
      move_thread_flag_477 = 0
      move_thread_han_477 = run move_thread_477()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_477 > 1):
          join move_thread_han_477
          $ 478 "Until (distance)"
          break
        end
        sync()
      end
      $ 479 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 480 "Direction: Base Z+"
      global move_thread_flag_480=0
      thread move_thread_480():
        enter_critical
        move_thread_flag_480 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_480 = 2
        exit_critical
      end
      move_thread_flag_480 = 0
      move_thread_han_480 = run move_thread_480()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_480 > 1):
          join move_thread_han_480
          $ 481 "Until (distance)"
          break
        end
        sync()
      end
      $ 482 "Wait: 0.3"
      sleep(0.3)
      $ 483 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 484 "Wait: 0.3"
      sleep(0.3)
      $ 485 "Loop 2 times"
      Loop_80 = 0
      while (Loop_80 < 2):
        $ 486 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 487 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 488 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 489 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 490 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_80 = Loop_80 + 1
      end
      $ 491 "Direction: Base Z+"
      global move_thread_flag_491=0
      thread move_thread_491():
        enter_critical
        move_thread_flag_491 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_491 = 2
        exit_critical
      end
      move_thread_flag_491 = 0
      move_thread_han_491 = run move_thread_491()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_491 > 1):
          join move_thread_han_491
          $ 492 "Until (distance)"
          break
        end
        sync()
      end
      $ 493 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 494 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 495 "If barreno_actual>barrenos_menos1"
      if (barreno_actual>barrenos_menos1):
        $ 496 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 497 "Call Quitar_broca"
      Quitar_broca()
      $ 498 "Call Poner_broca"
      Poner_broca()
    end
    $ 499 "Popup: Linea2 con media Terminada!"
    popup("Linea2 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 500 "Broca_3"
    $ 501 "Linea1"
    $ 502 "Marcar_puntos"
    $ 503 "MoveL"
    $ 504 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 505 "Linea1_A" "breakAfter"
    movel(Linea1_A_p, a=0.5, v=0.1)
    $ 506 "Linea1_B" "breakAfter"
    movel(Linea1_B_p, a=0.5, v=0.1)
    $ 507 "Linea1_C" "breakAfter"
    movel(Linea1_C_p, a=0.5, v=0.1)
    $ 508 "Linea1_D" "breakAfter"
    movel(Linea1_D_p, a=0.5, v=0.1)
    $ 509 "Linea1_E" "breakAfter"
    movel(Linea1_E_p, a=0.5, v=0.1)
    $ 510 "Linea1_F" "breakAfter"
    movel(Linea1_F_p, a=0.5, v=0.1)
    $ 511 "AB"
    $ 512 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 513 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 514 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 515 "barreno_actual≔0"
    global barreno_actual=0
    $ 516 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 517 "Perforacion"
      $ 518 "MoveL"
      $ 519 "internos≔interpolate_pose(Linea1_A, Linea1_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_A_p, Linea1_B_p, barreno_actual/barrenos_menos1)
      $ 520 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 521 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 522 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 523 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 524 "Direction: Base Z-"
      global move_thread_flag_524=0
      thread move_thread_524():
        enter_critical
        move_thread_flag_524 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.072)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_524 = 2
        exit_critical
      end
      move_thread_flag_524 = 0
      move_thread_han_524 = run move_thread_524()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_524 > 1):
          join move_thread_han_524
          $ 525 "Until (distance)"
          break
        end
        sync()
      end
      $ 526 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 527 "Direction: Base Z+"
      global move_thread_flag_527=0
      thread move_thread_527():
        enter_critical
        move_thread_flag_527 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_527 = 2
        exit_critical
      end
      move_thread_flag_527 = 0
      move_thread_han_527 = run move_thread_527()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_527 > 1):
          join move_thread_han_527
          $ 528 "Until (distance)"
          break
        end
        sync()
      end
      $ 529 "Wait: 0.3"
      sleep(0.3)
      $ 530 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 531 "Wait: 0.3"
      sleep(0.3)
      $ 532 "Loop 1 times"
      Loop_82 = 0
      while (Loop_82 < 1):
        $ 533 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 534 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 535 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 536 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 537 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_82 = Loop_82 + 1
      end
      $ 538 "Direction: Base Z+"
      global move_thread_flag_538=0
      thread move_thread_538():
        enter_critical
        move_thread_flag_538 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_538 = 2
        exit_critical
      end
      move_thread_flag_538 = 0
      move_thread_han_538 = run move_thread_538()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_538 > 1):
          join move_thread_han_538
          $ 539 "Until (distance)"
          break
        end
        sync()
      end
      $ 540 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 541 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 542 "Call Quitar_broca"
      Quitar_broca()
      $ 543 "Call Poner_broca"
      Poner_broca()
    end
    $ 544 "CD"
    $ 545 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 546 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 547 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 548 "barreno_actual≔0"
    global barreno_actual=0
    $ 549 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 550 "Perforacion"
      $ 551 "MoveL"
      $ 552 "internos≔interpolate_pose(Linea1_C, Linea1_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_C_p, Linea1_D_p, barreno_actual/barrenos_menos1)
      $ 553 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 554 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 555 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 556 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 557 "Direction: Base Z-"
      global move_thread_flag_557=0
      thread move_thread_557():
        enter_critical
        move_thread_flag_557 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.072)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_557 = 2
        exit_critical
      end
      move_thread_flag_557 = 0
      move_thread_han_557 = run move_thread_557()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_557 > 1):
          join move_thread_han_557
          $ 558 "Until (distance)"
          break
        end
        sync()
      end
      $ 559 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 560 "Direction: Base Z+"
      global move_thread_flag_560=0
      thread move_thread_560():
        enter_critical
        move_thread_flag_560 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_560 = 2
        exit_critical
      end
      move_thread_flag_560 = 0
      move_thread_han_560 = run move_thread_560()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_560 > 1):
          join move_thread_han_560
          $ 561 "Until (distance)"
          break
        end
        sync()
      end
      $ 562 "Wait: 0.3"
      sleep(0.3)
      $ 563 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 564 "Wait: 0.3"
      sleep(0.3)
      $ 565 "Loop 1 times"
      Loop_85 = 0
      while (Loop_85 < 1):
        $ 566 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 567 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 568 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 569 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 570 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_85 = Loop_85 + 1
      end
      $ 571 "Direction: Base Z+"
      global move_thread_flag_571=0
      thread move_thread_571():
        enter_critical
        move_thread_flag_571 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_571 = 2
        exit_critical
      end
      move_thread_flag_571 = 0
      move_thread_han_571 = run move_thread_571()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_571 > 1):
          join move_thread_han_571
          $ 572 "Until (distance)"
          break
        end
        sync()
      end
      $ 573 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 574 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 575 "Call Quitar_broca"
      Quitar_broca()
      $ 576 "Call Poner_broca"
      Poner_broca()
    end
    $ 577 "EF"
    $ 578 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 579 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 580 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 581 "barreno_actual≔0"
    global barreno_actual=0
    $ 582 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 583 "Perforacion"
      $ 584 "MoveL"
      $ 585 "internos≔interpolate_pose(Linea1_E, Linea1_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea1_E_p, Linea1_F_p, barreno_actual/barrenos_menos1)
      $ 586 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 587 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 588 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 589 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 590 "Direction: Base Z-"
      global move_thread_flag_590=0
      thread move_thread_590():
        enter_critical
        move_thread_flag_590 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.072)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_590 = 2
        exit_critical
      end
      move_thread_flag_590 = 0
      move_thread_han_590 = run move_thread_590()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_590 > 1):
          join move_thread_han_590
          $ 591 "Until (distance)"
          break
        end
        sync()
      end
      $ 592 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 593 "Direction: Base Z+"
      global move_thread_flag_593=0
      thread move_thread_593():
        enter_critical
        move_thread_flag_593 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_593 = 2
        exit_critical
      end
      move_thread_flag_593 = 0
      move_thread_han_593 = run move_thread_593()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_593 > 1):
          join move_thread_han_593
          $ 594 "Until (distance)"
          break
        end
        sync()
      end
      $ 595 "Wait: 0.3"
      sleep(0.3)
      $ 596 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 597 "Wait: 0.3"
      sleep(0.3)
      $ 598 "Loop 1 times"
      Loop_87 = 0
      while (Loop_87 < 1):
        $ 599 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 600 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 601 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 602 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 603 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_87 = Loop_87 + 1
      end
      $ 604 "Direction: Base Z+"
      global move_thread_flag_604=0
      thread move_thread_604():
        enter_critical
        move_thread_flag_604 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_604 = 2
        exit_critical
      end
      move_thread_flag_604 = 0
      move_thread_han_604 = run move_thread_604()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_604 > 1):
          join move_thread_han_604
          $ 605 "Until (distance)"
          break
        end
        sync()
      end
      $ 606 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 607 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 608 "Call Quitar_broca"
      Quitar_broca()
      $ 609 "Call Poner_broca"
      Poner_broca()
    end
    $ 610 "Popup: Linea1 con full Terminada!"
    popup("Linea1 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 611 "Linea2"
    $ 612 "Marcar_puntos"
    $ 613 "MoveL"
    $ 614 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 623 "Linea2_A" "breakAfter"
    movel(Linea2_A_p, a=0.5, v=0.1)
    $ 624 "Linea2_B" "breakAfter"
    movel(Linea2_B_p, a=0.5, v=0.1)
    $ 625 "Linea2_C" "breakAfter"
    movel(Linea2_C_p, a=0.5, v=0.1)
    $ 626 "Linea2_D" "breakAfter"
    movel(Linea2_D_p, a=0.5, v=0.1)
    $ 627 "Linea2_E" "breakAfter"
    movel(Linea2_E_p, a=0.5, v=0.1)
    $ 628 "Linea2_F" "breakAfter"
    movel(Linea2_F_p, a=0.5, v=0.1)
    $ 629 "AB"
    $ 630 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 631 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 632 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 633 "barreno_actual≔1"
    global barreno_actual=1
    $ 634 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 635 "Perforacion"
      $ 636 "MoveL"
      $ 637 "internos≔interpolate_pose(Linea2_A, Linea2_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_A_p, Linea2_B_p, barreno_actual/barrenos_menos1)
      $ 638 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 639 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 640 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 641 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 642 "Direction: Base Z-"
      global move_thread_flag_642=0
      thread move_thread_642():
        enter_critical
        move_thread_flag_642 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_642 = 2
        exit_critical
      end
      move_thread_flag_642 = 0
      move_thread_han_642 = run move_thread_642()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_642 > 1):
          join move_thread_han_642
          $ 643 "Until (distance)"
          break
        end
        sync()
      end
      $ 644 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 645 "Direction: Base Z+"
      global move_thread_flag_645=0
      thread move_thread_645():
        enter_critical
        move_thread_flag_645 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_645 = 2
        exit_critical
      end
      move_thread_flag_645 = 0
      move_thread_han_645 = run move_thread_645()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_645 > 1):
          join move_thread_han_645
          $ 646 "Until (distance)"
          break
        end
        sync()
      end
      $ 647 "Wait: 0.3"
      sleep(0.3)
      $ 648 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 649 "Wait: 0.3"
      sleep(0.3)
      $ 650 "Loop 1 times"
      Loop_90 = 0
      while (Loop_90 < 1):
        $ 651 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 652 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 653 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 654 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 655 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_90 = Loop_90 + 1
      end
      $ 656 "Direction: Base Z+"
      global move_thread_flag_656=0
      thread move_thread_656():
        enter_critical
        move_thread_flag_656 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_656 = 2
        exit_critical
      end
      move_thread_flag_656 = 0
      move_thread_han_656 = run move_thread_656()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_656 > 1):
          join move_thread_han_656
          $ 657 "Until (distance)"
          break
        end
        sync()
      end
      $ 658 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 659 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 660 "Call Quitar_broca"
      Quitar_broca()
      $ 661 "Call Poner_broca"
      Poner_broca()
    end
    $ 662 "CD"
    $ 663 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 664 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 665 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 666 "barreno_actual≔0"
    global barreno_actual=0
    $ 667 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 668 "Perforacion"
      $ 669 "MoveL"
      $ 670 "internos≔interpolate_pose(Linea2_C, Linea2_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_C_p, Linea2_D_p, barreno_actual/barrenos_menos1)
      $ 671 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 672 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 673 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 674 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 675 "Direction: Base Z-"
      global move_thread_flag_675=0
      thread move_thread_675():
        enter_critical
        move_thread_flag_675 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_675 = 2
        exit_critical
      end
      move_thread_flag_675 = 0
      move_thread_han_675 = run move_thread_675()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_675 > 1):
          join move_thread_han_675
          $ 676 "Until (distance)"
          break
        end
        sync()
      end
      $ 677 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 678 "Direction: Base Z+"
      global move_thread_flag_678=0
      thread move_thread_678():
        enter_critical
        move_thread_flag_678 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_678 = 2
        exit_critical
      end
      move_thread_flag_678 = 0
      move_thread_han_678 = run move_thread_678()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_678 > 1):
          join move_thread_han_678
          $ 679 "Until (distance)"
          break
        end
        sync()
      end
      $ 680 "Wait: 0.3"
      sleep(0.3)
      $ 681 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 682 "Wait: 0.3"
      sleep(0.3)
      $ 683 "Loop 1 times"
      Loop_92 = 0
      while (Loop_92 < 1):
        $ 684 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 685 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 686 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 687 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 688 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_92 = Loop_92 + 1
      end
      $ 689 "Direction: Base Z+"
      global move_thread_flag_689=0
      thread move_thread_689():
        enter_critical
        move_thread_flag_689 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_689 = 2
        exit_critical
      end
      move_thread_flag_689 = 0
      move_thread_han_689 = run move_thread_689()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_689 > 1):
          join move_thread_han_689
          $ 690 "Until (distance)"
          break
        end
        sync()
      end
      $ 691 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 692 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 693 "Call Quitar_broca"
      Quitar_broca()
      $ 694 "Call Poner_broca"
      Poner_broca()
    end
    $ 695 "EF"
    $ 696 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 697 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 698 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 699 "barreno_actual≔0"
    global barreno_actual=0
    $ 700 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 701 "Perforacion"
      $ 702 "MoveL"
      $ 703 "internos≔interpolate_pose(Linea2_E, Linea2_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea2_E_p, Linea2_F_p, barreno_actual/barrenos_menos1)
      $ 704 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 705 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 706 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 707 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 708 "Direction: Base Z-"
      global move_thread_flag_708=0
      thread move_thread_708():
        enter_critical
        move_thread_flag_708 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.076)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_708 = 2
        exit_critical
      end
      move_thread_flag_708 = 0
      move_thread_han_708 = run move_thread_708()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_708 > 1):
          join move_thread_han_708
          $ 709 "Until (distance)"
          break
        end
        sync()
      end
      $ 710 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 711 "Direction: Base Z+"
      global move_thread_flag_711=0
      thread move_thread_711():
        enter_critical
        move_thread_flag_711 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_711 = 2
        exit_critical
      end
      move_thread_flag_711 = 0
      move_thread_han_711 = run move_thread_711()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_711 > 1):
          join move_thread_han_711
          $ 712 "Until (distance)"
          break
        end
        sync()
      end
      $ 713 "Wait: 0.3"
      sleep(0.3)
      $ 714 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 715 "Wait: 0.3"
      sleep(0.3)
      $ 716 "Loop 1 times"
      Loop_94 = 0
      while (Loop_94 < 1):
        $ 717 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 718 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 719 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 720 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 721 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_94 = Loop_94 + 1
      end
      $ 722 "Direction: Base Z+"
      global move_thread_flag_722=0
      thread move_thread_722():
        enter_critical
        move_thread_flag_722 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_722 = 2
        exit_critical
      end
      move_thread_flag_722 = 0
      move_thread_han_722 = run move_thread_722()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_722 > 1):
          join move_thread_han_722
          $ 723 "Until (distance)"
          break
        end
        sync()
      end
      $ 724 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 725 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 726 "If barreno_actual>barrenos_menos1"
      if (barreno_actual>barrenos_menos1):
        $ 727 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 728 "Call Quitar_broca"
      Quitar_broca()
      $ 729 "Call Poner_broca"
      Poner_broca()
    end
    $ 730 "Popup: Linea2 con full Terminada!"
    popup("Linea2 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 731 "600"
    $ 1243 "Broca_1"
    $ 1244 "Linea7"
    $ 1245 "Marcar_puntos"
    $ 1246 "MoveL"
    $ 1247 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 1248 "Linea7_A" "breakAfter"
    movel(Linea7_A_p, a=0.5, v=0.1)
    $ 1249 "bajada_comprobacion"
    $ 1250 "Direction: Base Z-"
    global move_thread_flag_1250=0
    thread move_thread_1250():
      enter_critical
      move_thread_flag_1250 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1250 = 2
      exit_critical
    end
    move_thread_flag_1250 = 0
    move_thread_han_1250 = run move_thread_1250()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1250 > 1):
        join move_thread_han_1250
        $ 1251 "Until (distance)"
        break
      end
      sync()
    end
    $ 1252 "Direction: Base Z-"
    global move_thread_flag_1252=0
    thread move_thread_1252():
      enter_critical
      move_thread_flag_1252 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1252 = 2
      exit_critical
    end
    move_thread_flag_1252 = 0
    move_thread_han_1252 = run move_thread_1252()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1252
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1253 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1254 "Direction: Base Z+"
    global move_thread_flag_1254=0
    thread move_thread_1254():
      enter_critical
      move_thread_flag_1254 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1254 = 2
      exit_critical
    end
    move_thread_flag_1254 = 0
    move_thread_han_1254 = run move_thread_1254()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1254 > 1):
        join move_thread_han_1254
        $ 1255 "Until (distance)"
        break
      end
      sync()
    end
    $ 1256 "Linea7_B" "breakAfter"
    movel(Linea7_B_p, a=0.5, v=0.1)
    $ 1257 "bajada_comprobacion"
    $ 1258 "Direction: Base Z-"
    global move_thread_flag_1258=0
    thread move_thread_1258():
      enter_critical
      move_thread_flag_1258 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1258 = 2
      exit_critical
    end
    move_thread_flag_1258 = 0
    move_thread_han_1258 = run move_thread_1258()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1258 > 1):
        join move_thread_han_1258
        $ 1259 "Until (distance)"
        break
      end
      sync()
    end
    $ 1260 "Direction: Base Z-"
    global move_thread_flag_1260=0
    thread move_thread_1260():
      enter_critical
      move_thread_flag_1260 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1260 = 2
      exit_critical
    end
    move_thread_flag_1260 = 0
    move_thread_han_1260 = run move_thread_1260()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1260
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1261 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1262 "Direction: Base Z+"
    global move_thread_flag_1262=0
    thread move_thread_1262():
      enter_critical
      move_thread_flag_1262 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1262 = 2
      exit_critical
    end
    move_thread_flag_1262 = 0
    move_thread_han_1262 = run move_thread_1262()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1262 > 1):
        join move_thread_han_1262
        $ 1263 "Until (distance)"
        break
      end
      sync()
    end
    $ 1264 "AB"
    $ 1265 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1266 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1267 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1268 "barreno_actual≔0"
    global barreno_actual=0
    $ 1269 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1270 "Perforacion"
      $ 1271 "MoveL"
      $ 1272 "internos≔interpolate_pose(Linea7_A, Linea7_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea7_A_p, Linea7_B_p, barreno_actual/barrenos_menos1)
      $ 1273 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1274 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1275 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1276 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1277 "Direction: Base Z-"
      global move_thread_flag_1277=0
      thread move_thread_1277():
        enter_critical
        move_thread_flag_1277 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1277 = 2
        exit_critical
      end
      move_thread_flag_1277 = 0
      move_thread_han_1277 = run move_thread_1277()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1277 > 1):
          join move_thread_han_1277
          $ 1278 "Until (distance)"
          break
        end
        sync()
      end
      $ 1279 "Direction: Base Z-"
      global move_thread_flag_1279=0
      thread move_thread_1279():
        enter_critical
        move_thread_flag_1279 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1279 = 2
        exit_critical
      end
      move_thread_flag_1279 = 0
      move_thread_han_1279 = run move_thread_1279()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1279
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1280 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1281 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1282 "Direction: Base Z+"
      global move_thread_flag_1282=0
      thread move_thread_1282():
        enter_critical
        move_thread_flag_1282 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1282 = 2
        exit_critical
      end
      move_thread_flag_1282 = 0
      move_thread_han_1282 = run move_thread_1282()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1282 > 1):
          join move_thread_han_1282
          $ 1283 "Until (distance)"
          break
        end
        sync()
      end
      $ 1284 "Wait: 0.3"
      sleep(0.3)
      $ 1285 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1286 "Wait: 0.3"
      sleep(0.3)
      $ 1287 "Loop 1 times"
      Loop_96 = 0
      while (Loop_96 < 1):
        $ 1288 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1289 "bajar" "breakAfter"
        movel(bajar, a=0.01, v=0.01)
        $ 1290 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1291 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1292 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_96 = Loop_96 + 1
      end
      $ 1293 "Direction: Base Z+"
      global move_thread_flag_1293=0
      thread move_thread_1293():
        enter_critical
        move_thread_flag_1293 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1293 = 2
        exit_critical
      end
      move_thread_flag_1293 = 0
      move_thread_han_1293 = run move_thread_1293()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1293 > 1):
          join move_thread_han_1293
          $ 1294 "Until (distance)"
          break
        end
        sync()
      end
      $ 1295 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1296 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1297 "Call Quitar_broca"
      Quitar_broca()
      $ 1298 "Call Poner_broca"
      Poner_broca()
    end
    $ 1299 "Popup: Linea7 con chica Terminada!"
    popup("Linea7 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1300 "Linea8"
    $ 1301 "Marcar_puntos"
    $ 1302 "MoveL"
    $ 1303 "Linea8_A" "breakAfter"
    movel(Linea8_A_p, a=0.5, v=0.1)
    $ 1304 "bajada_comprobacion"
    $ 1305 "Direction: Base Z-"
    global move_thread_flag_1305=0
    thread move_thread_1305():
      enter_critical
      move_thread_flag_1305 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1305 = 2
      exit_critical
    end
    move_thread_flag_1305 = 0
    move_thread_han_1305 = run move_thread_1305()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1305 > 1):
        join move_thread_han_1305
        $ 1306 "Until (distance)"
        break
      end
      sync()
    end
    $ 1307 "Direction: Base Z-"
    global move_thread_flag_1307=0
    thread move_thread_1307():
      enter_critical
      move_thread_flag_1307 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1307 = 2
      exit_critical
    end
    move_thread_flag_1307 = 0
    move_thread_han_1307 = run move_thread_1307()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1307
        stopl(0.007)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.007, v=0.1)
        $ 1308 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1309 "Direction: Base Z+"
    global move_thread_flag_1309=0
    thread move_thread_1309():
      enter_critical
      move_thread_flag_1309 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1309 = 2
      exit_critical
    end
    move_thread_flag_1309 = 0
    move_thread_han_1309 = run move_thread_1309()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1309 > 1):
        join move_thread_han_1309
        $ 1310 "Until (distance)"
        break
      end
      sync()
    end
    $ 1311 "Linea8_B" "breakAfter"
    movel(Linea8_B_p, a=0.5, v=0.1)
    $ 1312 "bajada_comprobacion"
    $ 1313 "Direction: Base Z-"
    global move_thread_flag_1313=0
    thread move_thread_1313():
      enter_critical
      move_thread_flag_1313 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1313 = 2
      exit_critical
    end
    move_thread_flag_1313 = 0
    move_thread_han_1313 = run move_thread_1313()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1313 > 1):
        join move_thread_han_1313
        $ 1314 "Until (distance)"
        break
      end
      sync()
    end
    $ 1315 "Direction: Base Z-"
    global move_thread_flag_1315=0
    thread move_thread_1315():
      enter_critical
      move_thread_flag_1315 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1315 = 2
      exit_critical
    end
    move_thread_flag_1315 = 0
    move_thread_han_1315 = run move_thread_1315()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1315
        stopl(0.007)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.007, v=0.1)
        $ 1316 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1317 "Direction: Base Z+"
    global move_thread_flag_1317=0
    thread move_thread_1317():
      enter_critical
      move_thread_flag_1317 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1317 = 2
      exit_critical
    end
    move_thread_flag_1317 = 0
    move_thread_han_1317 = run move_thread_1317()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1317 > 1):
        join move_thread_han_1317
        $ 1318 "Until (distance)"
        break
      end
      sync()
    end
    $ 1319 "AB"
    $ 1320 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1321 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1322 "barrenos_menos1≔5"
    global barrenos_menos1=5
    $ 1323 "barreno_actual≔0"
    global barreno_actual=0
    $ 1324 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1325 "Perforacion"
      $ 1326 "MoveL"
      $ 1327 "internos≔interpolate_pose(Linea8_A, Linea8_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea8_A_p, Linea8_B_p, barreno_actual/barrenos_menos1)
      $ 1328 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1329 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1330 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1331 "bajada≔p[0,0,0.0024,0,0,0]"
      global bajada=p[0,0,0.0024,0,0,0]
      $ 1332 "Direction: Base Z-"
      global move_thread_flag_1332=0
      thread move_thread_1332():
        enter_critical
        move_thread_flag_1332 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1332 = 2
        exit_critical
      end
      move_thread_flag_1332 = 0
      move_thread_han_1332 = run move_thread_1332()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1332 > 1):
          join move_thread_han_1332
          $ 1333 "Until (distance)"
          break
        end
        sync()
      end
      $ 1334 "Direction: Base Z-"
      global move_thread_flag_1334=0
      thread move_thread_1334():
        enter_critical
        move_thread_flag_1334 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.01, v=0.01)
        move_thread_flag_1334 = 2
        exit_critical
      end
      move_thread_flag_1334 = 0
      move_thread_han_1334 = run move_thread_1334()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1334
          stopl(0.01)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.01, v=0.1)
          $ 1335 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1336 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1337 "Direction: Base Z+"
      global move_thread_flag_1337=0
      thread move_thread_1337():
        enter_critical
        move_thread_flag_1337 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1337 = 2
        exit_critical
      end
      move_thread_flag_1337 = 0
      move_thread_han_1337 = run move_thread_1337()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1337 > 1):
          join move_thread_han_1337
          $ 1338 "Until (distance)"
          break
        end
        sync()
      end
      $ 1339 "Wait: 0.3"
      sleep(0.3)
      $ 1340 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1341 "Wait: 0.3"
      sleep(0.3)
      $ 1342 "Loop 1 times"
      Loop_110 = 0
      while (Loop_110 < 1):
        $ 1343 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1344 "bajar" "breakAfter"
        movel(bajar, a=0.01, v=0.01)
        $ 1345 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1346 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1347 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_110 = Loop_110 + 1
      end
      $ 1348 "Direction: Base Z+"
      global move_thread_flag_1348=0
      thread move_thread_1348():
        enter_critical
        move_thread_flag_1348 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1348 = 2
        exit_critical
      end
      move_thread_flag_1348 = 0
      move_thread_han_1348 = run move_thread_1348()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1348 > 1):
          join move_thread_han_1348
          $ 1349 "Until (distance)"
          break
        end
        sync()
      end
      $ 1350 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1351 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1352 "Call Quitar_broca"
      Quitar_broca()
      $ 1353 "Call Poner_broca"
      Poner_broca()
    end
    $ 1354 "Popup: Linea8 con chica Terminada!"
    popup("Linea8 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1355 "Linea9"
    $ 1356 "Marcar_puntos"
    $ 1357 "MoveL"
    $ 1358 "Linea9_A" "breakAfter"
    movel(Linea9_A_p, a=0.5, v=0.1)
    $ 1359 "bajada_comprobacion"
    $ 1360 "Direction: Base Z-"
    global move_thread_flag_1360=0
    thread move_thread_1360():
      enter_critical
      move_thread_flag_1360 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1360 = 2
      exit_critical
    end
    move_thread_flag_1360 = 0
    move_thread_han_1360 = run move_thread_1360()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1360 > 1):
        join move_thread_han_1360
        $ 1361 "Until (distance)"
        break
      end
      sync()
    end
    $ 1362 "Direction: Base Z-"
    global move_thread_flag_1362=0
    thread move_thread_1362():
      enter_critical
      move_thread_flag_1362 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1362 = 2
      exit_critical
    end
    move_thread_flag_1362 = 0
    move_thread_han_1362 = run move_thread_1362()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1362
        stopl(0.007)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.007, v=0.1)
        $ 1363 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1364 "Direction: Base Z+"
    global move_thread_flag_1364=0
    thread move_thread_1364():
      enter_critical
      move_thread_flag_1364 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1364 = 2
      exit_critical
    end
    move_thread_flag_1364 = 0
    move_thread_han_1364 = run move_thread_1364()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1364 > 1):
        join move_thread_han_1364
        $ 1365 "Until (distance)"
        break
      end
      sync()
    end
    $ 1366 "Linea9_B" "breakAfter"
    movel(Linea9_B_p, a=0.5, v=0.1)
    $ 1367 "bajada_comprobacion"
    $ 1368 "Direction: Base Z-"
    global move_thread_flag_1368=0
    thread move_thread_1368():
      enter_critical
      move_thread_flag_1368 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1368 = 2
      exit_critical
    end
    move_thread_flag_1368 = 0
    move_thread_han_1368 = run move_thread_1368()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1368 > 1):
        join move_thread_han_1368
        $ 1369 "Until (distance)"
        break
      end
      sync()
    end
    $ 1370 "Direction: Base Z-"
    global move_thread_flag_1370=0
    thread move_thread_1370():
      enter_critical
      move_thread_flag_1370 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1370 = 2
      exit_critical
    end
    move_thread_flag_1370 = 0
    move_thread_han_1370 = run move_thread_1370()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1370
        stopl(0.007)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.007, v=0.1)
        $ 1371 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1372 "Direction: Base Z+"
    global move_thread_flag_1372=0
    thread move_thread_1372():
      enter_critical
      move_thread_flag_1372 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1372 = 2
      exit_critical
    end
    move_thread_flag_1372 = 0
    move_thread_han_1372 = run move_thread_1372()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1372 > 1):
        join move_thread_han_1372
        $ 1373 "Until (distance)"
        break
      end
      sync()
    end
    $ 1374 "AB"
    $ 1375 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1376 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1377 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1378 "barreno_actual≔2"
    global barreno_actual=2
    $ 1379 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1380 "Perforacion"
      $ 1381 "MoveL"
      $ 1382 "internos≔interpolate_pose(Linea9_A, Linea9_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea9_A_p, Linea9_B_p, barreno_actual/barrenos_menos1)
      $ 1383 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1384 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1385 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1386 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1387 "Direction: Base Z-"
      global move_thread_flag_1387=0
      thread move_thread_1387():
        enter_critical
        move_thread_flag_1387 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1387 = 2
        exit_critical
      end
      move_thread_flag_1387 = 0
      move_thread_han_1387 = run move_thread_1387()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1387 > 1):
          join move_thread_han_1387
          $ 1388 "Until (distance)"
          break
        end
        sync()
      end
      $ 1389 "Direction: Base Z-"
      global move_thread_flag_1389=0
      thread move_thread_1389():
        enter_critical
        move_thread_flag_1389 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.01, v=0.01)
        move_thread_flag_1389 = 2
        exit_critical
      end
      move_thread_flag_1389 = 0
      move_thread_han_1389 = run move_thread_1389()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1389
          stopl(0.01)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.01, v=0.1)
          $ 1390 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1391 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1392 "Direction: Base Z+"
      global move_thread_flag_1392=0
      thread move_thread_1392():
        enter_critical
        move_thread_flag_1392 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1392 = 2
        exit_critical
      end
      move_thread_flag_1392 = 0
      move_thread_han_1392 = run move_thread_1392()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1392 > 1):
          join move_thread_han_1392
          $ 1393 "Until (distance)"
          break
        end
        sync()
      end
      $ 1394 "Wait: 0.3"
      sleep(0.3)
      $ 1395 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1396 "Wait: 0.3"
      sleep(0.3)
      $ 1397 "Loop 1 times"
      Loop_114 = 0
      while (Loop_114 < 1):
        $ 1398 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1399 "bajar" "breakAfter"
        movel(bajar, a=0.01, v=0.01)
        $ 1400 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1401 "Direction: Base Z+"
        global move_thread_flag_1401=0
        thread move_thread_1401():
          enter_critical
          move_thread_flag_1401 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.5, v=0.1)
          move_thread_flag_1401 = 2
          exit_critical
        end
        move_thread_flag_1401 = 0
        move_thread_han_1401 = run move_thread_1401()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1401 > 1):
            join move_thread_han_1401
            $ 1402 "Until (distance)"
            break
          end
          sync()
        end
        $ 1403 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1404 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1405 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_114 = Loop_114 + 1
      end
      $ 1406 "Direction: Base Z+"
      global move_thread_flag_1406=0
      thread move_thread_1406():
        enter_critical
        move_thread_flag_1406 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1406 = 2
        exit_critical
      end
      move_thread_flag_1406 = 0
      move_thread_han_1406 = run move_thread_1406()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1406 > 1):
          join move_thread_han_1406
          $ 1407 "Until (distance)"
          break
        end
        sync()
      end
      $ 1408 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1409 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 1410 "Call Quitar_broca"
      Quitar_broca()
      $ 1411 "Call Poner_broca"
      Poner_broca()
    end
    $ 1412 "Popup: Linea9 con chica Terminada!"
    popup("Linea9 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1413 "Linea10"
    $ 1414 "Marcar_puntos"
    $ 1415 "MoveL"
    $ 1416 "Home2" "breakAfter"
    movel(Home2_p, a=0.5, v=0.1)
    $ 1417 "Linea10_A" "breakAfter"
    movel(Linea10_A_p, a=0.5, v=0.1)
    $ 1418 "bajada_comprobacion"
    $ 1419 "Direction: Base Z-"
    global move_thread_flag_1419=0
    thread move_thread_1419():
      enter_critical
      move_thread_flag_1419 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1419 = 2
      exit_critical
    end
    move_thread_flag_1419 = 0
    move_thread_han_1419 = run move_thread_1419()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1419 > 1):
        join move_thread_han_1419
        $ 1420 "Until (distance)"
        break
      end
      sync()
    end
    $ 1421 "Direction: Base Z-"
    global move_thread_flag_1421=0
    thread move_thread_1421():
      enter_critical
      move_thread_flag_1421 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1421 = 2
      exit_critical
    end
    move_thread_flag_1421 = 0
    move_thread_han_1421 = run move_thread_1421()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1421
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1422 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1423 "Direction: Base Z+"
    global move_thread_flag_1423=0
    thread move_thread_1423():
      enter_critical
      move_thread_flag_1423 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1423 = 2
      exit_critical
    end
    move_thread_flag_1423 = 0
    move_thread_han_1423 = run move_thread_1423()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1423 > 1):
        join move_thread_han_1423
        $ 1424 "Until (distance)"
        break
      end
      sync()
    end
    $ 1425 "Linea10_B" "breakAfter"
    movel(Linea10_B_p, a=0.5, v=0.1)
    $ 1426 "bajada_comprobacion"
    $ 1427 "Direction: Base Z-"
    global move_thread_flag_1427=0
    thread move_thread_1427():
      enter_critical
      move_thread_flag_1427 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1427 = 2
      exit_critical
    end
    move_thread_flag_1427 = 0
    move_thread_han_1427 = run move_thread_1427()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1427 > 1):
        join move_thread_han_1427
        $ 1428 "Until (distance)"
        break
      end
      sync()
    end
    $ 1429 "Direction: Base Z-"
    global move_thread_flag_1429=0
    thread move_thread_1429():
      enter_critical
      move_thread_flag_1429 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1429 = 2
      exit_critical
    end
    move_thread_flag_1429 = 0
    move_thread_han_1429 = run move_thread_1429()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1429
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1430 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1431 "Direction: Base Z+"
    global move_thread_flag_1431=0
    thread move_thread_1431():
      enter_critical
      move_thread_flag_1431 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1431 = 2
      exit_critical
    end
    move_thread_flag_1431 = 0
    move_thread_han_1431 = run move_thread_1431()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1431 > 1):
        join move_thread_han_1431
        $ 1432 "Until (distance)"
        break
      end
      sync()
    end
    $ 1433 "AB"
    $ 1434 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1435 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1436 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1437 "barreno_actual≔0"
    global barreno_actual=0
    $ 1438 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1439 "Perforacion"
      $ 1440 "MoveL"
      $ 1441 "internos≔interpolate_pose(Linea10_A, Linea10_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea10_A_p, Linea10_B_p, barreno_actual/barrenos_menos1)
      $ 1442 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1443 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1444 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1445 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1446 "Direction: Base Z-"
      global move_thread_flag_1446=0
      thread move_thread_1446():
        enter_critical
        move_thread_flag_1446 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1446 = 2
        exit_critical
      end
      move_thread_flag_1446 = 0
      move_thread_han_1446 = run move_thread_1446()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1446 > 1):
          join move_thread_han_1446
          $ 1447 "Until (distance)"
          break
        end
        sync()
      end
      $ 1448 "Direction: Base Z-"
      global move_thread_flag_1448=0
      thread move_thread_1448():
        enter_critical
        move_thread_flag_1448 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1448 = 2
        exit_critical
      end
      move_thread_flag_1448 = 0
      move_thread_han_1448 = run move_thread_1448()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1448
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1449 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1450 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1451 "Direction: Base Z+"
      global move_thread_flag_1451=0
      thread move_thread_1451():
        enter_critical
        move_thread_flag_1451 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1451 = 2
        exit_critical
      end
      move_thread_flag_1451 = 0
      move_thread_han_1451 = run move_thread_1451()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1451 > 1):
          join move_thread_han_1451
          $ 1452 "Until (distance)"
          break
        end
        sync()
      end
      $ 1453 "Wait: 0.3"
      sleep(0.3)
      $ 1454 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1455 "Wait: 0.3"
      sleep(0.3)
      $ 1456 "Loop 1 times"
      Loop_118 = 0
      while (Loop_118 < 1):
        $ 1457 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1458 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1459 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1460 "Direction: Base Z+"
        global move_thread_flag_1460=0
        thread move_thread_1460():
          enter_critical
          move_thread_flag_1460 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1460 = 2
          exit_critical
        end
        move_thread_flag_1460 = 0
        move_thread_han_1460 = run move_thread_1460()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1460 > 1):
            join move_thread_han_1460
            $ 1461 "Until (distance)"
            break
          end
          sync()
        end
        $ 1462 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1463 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1464 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_118 = Loop_118 + 1
      end
      $ 1465 "Direction: Base Z+"
      global move_thread_flag_1465=0
      thread move_thread_1465():
        enter_critical
        move_thread_flag_1465 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1465 = 2
        exit_critical
      end
      move_thread_flag_1465 = 0
      move_thread_han_1465 = run move_thread_1465()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1465 > 1):
          join move_thread_han_1465
          $ 1466 "Until (distance)"
          break
        end
        sync()
      end
      $ 1467 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1468 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1471 "Popup: Linea10 con chica Terminada!"
    popup("Linea10 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1472 "Linea11"
    $ 1473 "Marcar_puntos"
    $ 1474 "MoveL"
    $ 1475 "Linea11_A" "breakAfter"
    movel(Linea11_A_p, a=0.5, v=0.1)
    $ 1476 "bajada_comprobacion"
    $ 1477 "Direction: Base Z-"
    global move_thread_flag_1477=0
    thread move_thread_1477():
      enter_critical
      move_thread_flag_1477 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1477 = 2
      exit_critical
    end
    move_thread_flag_1477 = 0
    move_thread_han_1477 = run move_thread_1477()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1477 > 1):
        join move_thread_han_1477
        $ 1478 "Until (distance)"
        break
      end
      sync()
    end
    $ 1479 "Direction: Base Z-"
    global move_thread_flag_1479=0
    thread move_thread_1479():
      enter_critical
      move_thread_flag_1479 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1479 = 2
      exit_critical
    end
    move_thread_flag_1479 = 0
    move_thread_han_1479 = run move_thread_1479()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1479
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1480 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1481 "Direction: Base Z+"
    global move_thread_flag_1481=0
    thread move_thread_1481():
      enter_critical
      move_thread_flag_1481 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1481 = 2
      exit_critical
    end
    move_thread_flag_1481 = 0
    move_thread_han_1481 = run move_thread_1481()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1481 > 1):
        join move_thread_han_1481
        $ 1482 "Until (distance)"
        break
      end
      sync()
    end
    $ 1483 "Linea11_B" "breakAfter"
    movel(Linea11_B_p, a=0.5, v=0.1)
    $ 1484 "bajada_comprobacion"
    $ 1485 "Direction: Base Z-"
    global move_thread_flag_1485=0
    thread move_thread_1485():
      enter_critical
      move_thread_flag_1485 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1485 = 2
      exit_critical
    end
    move_thread_flag_1485 = 0
    move_thread_han_1485 = run move_thread_1485()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1485 > 1):
        join move_thread_han_1485
        $ 1486 "Until (distance)"
        break
      end
      sync()
    end
    $ 1487 "Direction: Base Z-"
    global move_thread_flag_1487=0
    thread move_thread_1487():
      enter_critical
      move_thread_flag_1487 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1487 = 2
      exit_critical
    end
    move_thread_flag_1487 = 0
    move_thread_han_1487 = run move_thread_1487()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1487
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1488 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1489 "Direction: Base Z+"
    global move_thread_flag_1489=0
    thread move_thread_1489():
      enter_critical
      move_thread_flag_1489 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1489 = 2
      exit_critical
    end
    move_thread_flag_1489 = 0
    move_thread_han_1489 = run move_thread_1489()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1489 > 1):
        join move_thread_han_1489
        $ 1490 "Until (distance)"
        break
      end
      sync()
    end
    $ 1491 "AB"
    $ 1492 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1493 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1494 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1495 "barreno_actual≔0"
    global barreno_actual=0
    $ 1496 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1497 "Perforacion"
      $ 1498 "MoveL"
      $ 1501 "internos≔interpolate_pose(Linea11_A, Linea11_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea11_A_p, Linea11_B_p, barreno_actual/barrenos_menos1)
      $ 1502 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1503 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1504 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1505 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1506 "Direction: Base Z-"
      global move_thread_flag_1506=0
      thread move_thread_1506():
        enter_critical
        move_thread_flag_1506 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1506 = 2
        exit_critical
      end
      move_thread_flag_1506 = 0
      move_thread_han_1506 = run move_thread_1506()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1506 > 1):
          join move_thread_han_1506
          $ 1507 "Until (distance)"
          break
        end
        sync()
      end
      $ 1508 "Direction: Base Z-"
      global move_thread_flag_1508=0
      thread move_thread_1508():
        enter_critical
        move_thread_flag_1508 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1508 = 2
        exit_critical
      end
      move_thread_flag_1508 = 0
      move_thread_han_1508 = run move_thread_1508()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1508
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1509 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1510 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1511 "Direction: Base Z+"
      global move_thread_flag_1511=0
      thread move_thread_1511():
        enter_critical
        move_thread_flag_1511 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1511 = 2
        exit_critical
      end
      move_thread_flag_1511 = 0
      move_thread_han_1511 = run move_thread_1511()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1511 > 1):
          join move_thread_han_1511
          $ 1512 "Until (distance)"
          break
        end
        sync()
      end
      $ 1513 "Wait: 0.3"
      sleep(0.3)
      $ 1514 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1515 "Wait: 0.3"
      sleep(0.3)
      $ 1516 "Loop 1 times"
      Loop_122 = 0
      while (Loop_122 < 1):
        $ 1517 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1518 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1519 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1520 "Direction: Base Z+"
        global move_thread_flag_1520=0
        thread move_thread_1520():
          enter_critical
          move_thread_flag_1520 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1520 = 2
          exit_critical
        end
        move_thread_flag_1520 = 0
        move_thread_han_1520 = run move_thread_1520()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1520 > 1):
            join move_thread_han_1520
            $ 1521 "Until (distance)"
            break
          end
          sync()
        end
        $ 1522 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1523 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1524 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_122 = Loop_122 + 1
      end
      $ 1525 "Direction: Base Z+"
      global move_thread_flag_1525=0
      thread move_thread_1525():
        enter_critical
        move_thread_flag_1525 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1525 = 2
        exit_critical
      end
      move_thread_flag_1525 = 0
      move_thread_han_1525 = run move_thread_1525()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1525 > 1):
          join move_thread_han_1525
          $ 1526 "Until (distance)"
          break
        end
        sync()
      end
      $ 1527 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1528 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1531 "Popup: Linea11 con chica Terminada!"
    popup("Linea11 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1532 "Linea12"
    $ 1533 "Marcar_puntos"
    $ 1534 "MoveL"
    $ 1535 "Linea12_A" "breakAfter"
    movel(Linea12_A_p, a=0.5, v=0.1)
    $ 1536 "bajada_comprobacion"
    $ 1537 "Direction: Base Z-"
    global move_thread_flag_1537=0
    thread move_thread_1537():
      enter_critical
      move_thread_flag_1537 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1537 = 2
      exit_critical
    end
    move_thread_flag_1537 = 0
    move_thread_han_1537 = run move_thread_1537()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1537 > 1):
        join move_thread_han_1537
        $ 1538 "Until (distance)"
        break
      end
      sync()
    end
    $ 1539 "Direction: Base Z-"
    global move_thread_flag_1539=0
    thread move_thread_1539():
      enter_critical
      move_thread_flag_1539 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1539 = 2
      exit_critical
    end
    move_thread_flag_1539 = 0
    move_thread_han_1539 = run move_thread_1539()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1539
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1540 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1541 "Direction: Base Z+"
    global move_thread_flag_1541=0
    thread move_thread_1541():
      enter_critical
      move_thread_flag_1541 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1541 = 2
      exit_critical
    end
    move_thread_flag_1541 = 0
    move_thread_han_1541 = run move_thread_1541()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1541 > 1):
        join move_thread_han_1541
        $ 1542 "Until (distance)"
        break
      end
      sync()
    end
    $ 1543 "Linea12_B" "breakAfter"
    movel(Linea12_B_p, a=0.5, v=0.1)
    $ 1544 "bajada_comprobacion"
    $ 1545 "Direction: Base Z-"
    global move_thread_flag_1545=0
    thread move_thread_1545():
      enter_critical
      move_thread_flag_1545 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1545 = 2
      exit_critical
    end
    move_thread_flag_1545 = 0
    move_thread_han_1545 = run move_thread_1545()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1545 > 1):
        join move_thread_han_1545
        $ 1546 "Until (distance)"
        break
      end
      sync()
    end
    $ 1547 "Direction: Base Z-"
    global move_thread_flag_1547=0
    thread move_thread_1547():
      enter_critical
      move_thread_flag_1547 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1547 = 2
      exit_critical
    end
    move_thread_flag_1547 = 0
    move_thread_han_1547 = run move_thread_1547()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1547
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1548 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1549 "Direction: Base Z+"
    global move_thread_flag_1549=0
    thread move_thread_1549():
      enter_critical
      move_thread_flag_1549 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1549 = 2
      exit_critical
    end
    move_thread_flag_1549 = 0
    move_thread_han_1549 = run move_thread_1549()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1549 > 1):
        join move_thread_han_1549
        $ 1550 "Until (distance)"
        break
      end
      sync()
    end
    $ 1551 "AB"
    $ 1552 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1553 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1554 "barrenos_menos1≔7"
    global barrenos_menos1=7
    $ 1555 "barreno_actual≔0"
    global barreno_actual=0
    $ 1556 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1557 "Perforacion"
      $ 1558 "MoveL"
      $ 1559 "If barreno_actual≟2"
      if (barreno_actual == 2):
        $ 1560 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1561 "internos≔interpolate_pose(Linea12_A, Linea12_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea12_A_p, Linea12_B_p, barreno_actual/barrenos_menos1)
      $ 1562 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1563 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1564 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1565 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1566 "Direction: Base Z-"
      global move_thread_flag_1566=0
      thread move_thread_1566():
        enter_critical
        move_thread_flag_1566 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1566 = 2
        exit_critical
      end
      move_thread_flag_1566 = 0
      move_thread_han_1566 = run move_thread_1566()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1566 > 1):
          join move_thread_han_1566
          $ 1567 "Until (distance)"
          break
        end
        sync()
      end
      $ 1568 "Direction: Base Z-"
      global move_thread_flag_1568=0
      thread move_thread_1568():
        enter_critical
        move_thread_flag_1568 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1568 = 2
        exit_critical
      end
      move_thread_flag_1568 = 0
      move_thread_han_1568 = run move_thread_1568()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1568
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1569 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1570 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1571 "Direction: Base Z+"
      global move_thread_flag_1571=0
      thread move_thread_1571():
        enter_critical
        move_thread_flag_1571 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1571 = 2
        exit_critical
      end
      move_thread_flag_1571 = 0
      move_thread_han_1571 = run move_thread_1571()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1571 > 1):
          join move_thread_han_1571
          $ 1572 "Until (distance)"
          break
        end
        sync()
      end
      $ 1573 "Wait: 0.3"
      sleep(0.3)
      $ 1574 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1575 "Wait: 0.3"
      sleep(0.3)
      $ 1576 "Loop 1 times"
      Loop_126 = 0
      while (Loop_126 < 1):
        $ 1577 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1578 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1579 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1580 "Direction: Base Z+"
        global move_thread_flag_1580=0
        thread move_thread_1580():
          enter_critical
          move_thread_flag_1580 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1580 = 2
          exit_critical
        end
        move_thread_flag_1580 = 0
        move_thread_han_1580 = run move_thread_1580()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1580 > 1):
            join move_thread_han_1580
            $ 1581 "Until (distance)"
            break
          end
          sync()
        end
        $ 1582 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1583 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1584 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_126 = Loop_126 + 1
      end
      $ 1585 "Direction: Base Z+"
      global move_thread_flag_1585=0
      thread move_thread_1585():
        enter_critical
        move_thread_flag_1585 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1585 = 2
        exit_critical
      end
      move_thread_flag_1585 = 0
      move_thread_han_1585 = run move_thread_1585()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1585 > 1):
          join move_thread_han_1585
          $ 1586 "Until (distance)"
          break
        end
        sync()
      end
      $ 1587 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1588 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1591 "Popup: Linea12 con chica Terminada!"
    popup("Linea12 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1592 "Linea13"
    $ 1593 "Marcar_puntos"
    $ 1594 "MoveL"
    $ 1595 "Linea13_A" "breakAfter"
    movel(Linea13_A_p, a=0.5, v=0.1)
    $ 1596 "bajada_comprobacion"
    $ 1597 "Direction: Base Z-"
    global move_thread_flag_1597=0
    thread move_thread_1597():
      enter_critical
      move_thread_flag_1597 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1597 = 2
      exit_critical
    end
    move_thread_flag_1597 = 0
    move_thread_han_1597 = run move_thread_1597()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1597 > 1):
        join move_thread_han_1597
        $ 1598 "Until (distance)"
        break
      end
      sync()
    end
    $ 1599 "Direction: Base Z-"
    global move_thread_flag_1599=0
    thread move_thread_1599():
      enter_critical
      move_thread_flag_1599 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1599 = 2
      exit_critical
    end
    move_thread_flag_1599 = 0
    move_thread_han_1599 = run move_thread_1599()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1599
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1600 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1601 "Direction: Base Z+"
    global move_thread_flag_1601=0
    thread move_thread_1601():
      enter_critical
      move_thread_flag_1601 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1601 = 2
      exit_critical
    end
    move_thread_flag_1601 = 0
    move_thread_han_1601 = run move_thread_1601()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1601 > 1):
        join move_thread_han_1601
        $ 1602 "Until (distance)"
        break
      end
      sync()
    end
    $ 1603 "Linea13_B" "breakAfter"
    movel(Linea13_B_p, a=0.5, v=0.1)
    $ 1604 "bajada_comprobacion"
    $ 1605 "Direction: Base Z-"
    global move_thread_flag_1605=0
    thread move_thread_1605():
      enter_critical
      move_thread_flag_1605 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1605 = 2
      exit_critical
    end
    move_thread_flag_1605 = 0
    move_thread_han_1605 = run move_thread_1605()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1605 > 1):
        join move_thread_han_1605
        $ 1606 "Until (distance)"
        break
      end
      sync()
    end
    $ 1607 "Direction: Base Z-"
    global move_thread_flag_1607=0
    thread move_thread_1607():
      enter_critical
      move_thread_flag_1607 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1607 = 2
      exit_critical
    end
    move_thread_flag_1607 = 0
    move_thread_han_1607 = run move_thread_1607()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1607
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1608 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1609 "Direction: Base Z+"
    global move_thread_flag_1609=0
    thread move_thread_1609():
      enter_critical
      move_thread_flag_1609 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1609 = 2
      exit_critical
    end
    move_thread_flag_1609 = 0
    move_thread_han_1609 = run move_thread_1609()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1609 > 1):
        join move_thread_han_1609
        $ 1610 "Until (distance)"
        break
      end
      sync()
    end
    $ 1611 "AB"
    $ 1612 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1613 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1614 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1615 "barreno_actual≔0"
    global barreno_actual=0
    $ 1616 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1617 "Perforacion"
      $ 1618 "MoveL"
      $ 1621 "internos≔interpolate_pose(Linea13_A, Linea13_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea13_A_p, Linea13_B_p, barreno_actual/barrenos_menos1)
      $ 1622 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1623 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1624 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1625 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1626 "Direction: Base Z-"
      global move_thread_flag_1626=0
      thread move_thread_1626():
        enter_critical
        move_thread_flag_1626 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1626 = 2
        exit_critical
      end
      move_thread_flag_1626 = 0
      move_thread_han_1626 = run move_thread_1626()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1626 > 1):
          join move_thread_han_1626
          $ 1627 "Until (distance)"
          break
        end
        sync()
      end
      $ 1628 "Direction: Base Z-"
      global move_thread_flag_1628=0
      thread move_thread_1628():
        enter_critical
        move_thread_flag_1628 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1628 = 2
        exit_critical
      end
      move_thread_flag_1628 = 0
      move_thread_han_1628 = run move_thread_1628()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1628
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1629 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1630 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1631 "Direction: Base Z+"
      global move_thread_flag_1631=0
      thread move_thread_1631():
        enter_critical
        move_thread_flag_1631 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1631 = 2
        exit_critical
      end
      move_thread_flag_1631 = 0
      move_thread_han_1631 = run move_thread_1631()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1631 > 1):
          join move_thread_han_1631
          $ 1632 "Until (distance)"
          break
        end
        sync()
      end
      $ 1633 "Wait: 0.3"
      sleep(0.3)
      $ 1634 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1635 "Wait: 0.3"
      sleep(0.3)
      $ 1636 "Loop 1 times"
      Loop_129 = 0
      while (Loop_129 < 1):
        $ 1637 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1638 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1639 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1640 "Direction: Base Z+"
        global move_thread_flag_1640=0
        thread move_thread_1640():
          enter_critical
          move_thread_flag_1640 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1640 = 2
          exit_critical
        end
        move_thread_flag_1640 = 0
        move_thread_han_1640 = run move_thread_1640()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1640 > 1):
            join move_thread_han_1640
            $ 1641 "Until (distance)"
            break
          end
          sync()
        end
        $ 1642 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1643 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1644 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_129 = Loop_129 + 1
      end
      $ 1645 "Direction: Base Z+"
      global move_thread_flag_1645=0
      thread move_thread_1645():
        enter_critical
        move_thread_flag_1645 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1645 = 2
        exit_critical
      end
      move_thread_flag_1645 = 0
      move_thread_han_1645 = run move_thread_1645()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1645 > 1):
          join move_thread_han_1645
          $ 1646 "Until (distance)"
          break
        end
        sync()
      end
      $ 1647 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1648 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1651 "Popup: Linea13 con chica Terminada!"
    popup("Linea13 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1652 "Linea14"
    $ 1653 "Marcar_puntos"
    $ 1654 "MoveL"
    $ 1655 "Linea14_A" "breakAfter"
    movel(Linea14_A_p, a=0.5, v=0.1)
    $ 1656 "bajada_comprobacion"
    $ 1657 "Direction: Base Z-"
    global move_thread_flag_1657=0
    thread move_thread_1657():
      enter_critical
      move_thread_flag_1657 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1657 = 2
      exit_critical
    end
    move_thread_flag_1657 = 0
    move_thread_han_1657 = run move_thread_1657()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1657 > 1):
        join move_thread_han_1657
        $ 1658 "Until (distance)"
        break
      end
      sync()
    end
    $ 1659 "Direction: Base Z-"
    global move_thread_flag_1659=0
    thread move_thread_1659():
      enter_critical
      move_thread_flag_1659 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1659 = 2
      exit_critical
    end
    move_thread_flag_1659 = 0
    move_thread_han_1659 = run move_thread_1659()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1659
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1660 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1661 "Direction: Base Z+"
    global move_thread_flag_1661=0
    thread move_thread_1661():
      enter_critical
      move_thread_flag_1661 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1661 = 2
      exit_critical
    end
    move_thread_flag_1661 = 0
    move_thread_han_1661 = run move_thread_1661()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1661 > 1):
        join move_thread_han_1661
        $ 1662 "Until (distance)"
        break
      end
      sync()
    end
    $ 1663 "Linea14_B" "breakAfter"
    movel(Linea14_B_p, a=0.5, v=0.1)
    $ 1664 "bajada_comprobacion"
    $ 1665 "Direction: Base Z-"
    global move_thread_flag_1665=0
    thread move_thread_1665():
      enter_critical
      move_thread_flag_1665 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1665 = 2
      exit_critical
    end
    move_thread_flag_1665 = 0
    move_thread_han_1665 = run move_thread_1665()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1665 > 1):
        join move_thread_han_1665
        $ 1666 "Until (distance)"
        break
      end
      sync()
    end
    $ 1667 "Direction: Base Z-"
    global move_thread_flag_1667=0
    thread move_thread_1667():
      enter_critical
      move_thread_flag_1667 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1667 = 2
      exit_critical
    end
    move_thread_flag_1667 = 0
    move_thread_han_1667 = run move_thread_1667()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1667
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1668 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1669 "Direction: Base Z+"
    global move_thread_flag_1669=0
    thread move_thread_1669():
      enter_critical
      move_thread_flag_1669 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1669 = 2
      exit_critical
    end
    move_thread_flag_1669 = 0
    move_thread_han_1669 = run move_thread_1669()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1669 > 1):
        join move_thread_han_1669
        $ 1670 "Until (distance)"
        break
      end
      sync()
    end
    $ 1671 "AB"
    $ 1672 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1673 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1674 "barrenos_menos1≔5"
    global barrenos_menos1=5
    $ 1675 "barreno_actual≔0"
    global barreno_actual=0
    $ 1676 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1677 "Perforacion"
      $ 1678 "MoveL"
      $ 1679 "If barreno_actual≟3"
      if (barreno_actual == 3):
        $ 1680 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1681 "internos≔interpolate_pose(Linea14_A, Linea14_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea14_A_p, Linea14_B_p, barreno_actual/barrenos_menos1)
      $ 1682 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1683 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1684 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1685 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1686 "Direction: Base Z-"
      global move_thread_flag_1686=0
      thread move_thread_1686():
        enter_critical
        move_thread_flag_1686 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1686 = 2
        exit_critical
      end
      move_thread_flag_1686 = 0
      move_thread_han_1686 = run move_thread_1686()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1686 > 1):
          join move_thread_han_1686
          $ 1687 "Until (distance)"
          break
        end
        sync()
      end
      $ 1688 "Direction: Base Z-"
      global move_thread_flag_1688=0
      thread move_thread_1688():
        enter_critical
        move_thread_flag_1688 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1688 = 2
        exit_critical
      end
      move_thread_flag_1688 = 0
      move_thread_han_1688 = run move_thread_1688()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1688
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1689 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1690 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1691 "Direction: Base Z+"
      global move_thread_flag_1691=0
      thread move_thread_1691():
        enter_critical
        move_thread_flag_1691 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1691 = 2
        exit_critical
      end
      move_thread_flag_1691 = 0
      move_thread_han_1691 = run move_thread_1691()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1691 > 1):
          join move_thread_han_1691
          $ 1692 "Until (distance)"
          break
        end
        sync()
      end
      $ 1693 "Wait: 0.3"
      sleep(0.3)
      $ 1694 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1695 "Wait: 0.3"
      sleep(0.3)
      $ 1696 "Loop 1 times"
      Loop_131 = 0
      while (Loop_131 < 1):
        $ 1697 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1698 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1699 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1700 "Direction: Base Z+"
        global move_thread_flag_1700=0
        thread move_thread_1700():
          enter_critical
          move_thread_flag_1700 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1700 = 2
          exit_critical
        end
        move_thread_flag_1700 = 0
        move_thread_han_1700 = run move_thread_1700()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1700 > 1):
            join move_thread_han_1700
            $ 1701 "Until (distance)"
            break
          end
          sync()
        end
        $ 1702 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1703 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1704 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_131 = Loop_131 + 1
      end
      $ 1705 "Direction: Base Z+"
      global move_thread_flag_1705=0
      thread move_thread_1705():
        enter_critical
        move_thread_flag_1705 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1705 = 2
        exit_critical
      end
      move_thread_flag_1705 = 0
      move_thread_han_1705 = run move_thread_1705()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1705 > 1):
          join move_thread_han_1705
          $ 1706 "Until (distance)"
          break
        end
        sync()
      end
      $ 1707 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1708 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1711 "Popup: Linea14 con chica Terminada!"
    popup("Linea14 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1712 "Linea15"
    $ 1713 "Marcar_puntos"
    $ 1714 "MoveL"
    $ 1715 "Linea15_A" "breakAfter"
    movel(Linea15_A_p, a=0.5, v=0.1)
    $ 1716 "bajada_comprobacion"
    $ 1717 "Direction: Base Z-"
    global move_thread_flag_1717=0
    thread move_thread_1717():
      enter_critical
      move_thread_flag_1717 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1717 = 2
      exit_critical
    end
    move_thread_flag_1717 = 0
    move_thread_han_1717 = run move_thread_1717()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1717 > 1):
        join move_thread_han_1717
        $ 1718 "Until (distance)"
        break
      end
      sync()
    end
    $ 1719 "Direction: Base Z-"
    global move_thread_flag_1719=0
    thread move_thread_1719():
      enter_critical
      move_thread_flag_1719 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1719 = 2
      exit_critical
    end
    move_thread_flag_1719 = 0
    move_thread_han_1719 = run move_thread_1719()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1719
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1720 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1721 "Direction: Base Z+"
    global move_thread_flag_1721=0
    thread move_thread_1721():
      enter_critical
      move_thread_flag_1721 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1721 = 2
      exit_critical
    end
    move_thread_flag_1721 = 0
    move_thread_han_1721 = run move_thread_1721()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1721 > 1):
        join move_thread_han_1721
        $ 1722 "Until (distance)"
        break
      end
      sync()
    end
    $ 1723 "Linea15_B" "breakAfter"
    movel(Linea15_B_p, a=0.5, v=0.1)
    $ 1724 "bajada_comprobacion"
    $ 1725 "Direction: Base Z-"
    global move_thread_flag_1725=0
    thread move_thread_1725():
      enter_critical
      move_thread_flag_1725 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1725 = 2
      exit_critical
    end
    move_thread_flag_1725 = 0
    move_thread_han_1725 = run move_thread_1725()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1725 > 1):
        join move_thread_han_1725
        $ 1726 "Until (distance)"
        break
      end
      sync()
    end
    $ 1727 "Direction: Base Z-"
    global move_thread_flag_1727=0
    thread move_thread_1727():
      enter_critical
      move_thread_flag_1727 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1727 = 2
      exit_critical
    end
    move_thread_flag_1727 = 0
    move_thread_han_1727 = run move_thread_1727()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1727
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1728 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1729 "Direction: Base Z+"
    global move_thread_flag_1729=0
    thread move_thread_1729():
      enter_critical
      move_thread_flag_1729 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1729 = 2
      exit_critical
    end
    move_thread_flag_1729 = 0
    move_thread_han_1729 = run move_thread_1729()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1729 > 1):
        join move_thread_han_1729
        $ 1730 "Until (distance)"
        break
      end
      sync()
    end
    $ 1731 "AB"
    $ 1732 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1733 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1734 "barrenos_menos1≔3"
    global barrenos_menos1=3
    $ 1735 "barreno_actual≔0"
    global barreno_actual=0
    $ 1736 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1737 "Perforacion"
      $ 1738 "MoveL"
      $ 1741 "internos≔interpolate_pose(Linea15_A, Linea15_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea15_A_p, Linea15_B_p, barreno_actual/barrenos_menos1)
      $ 1742 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1743 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1744 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1745 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1746 "Direction: Base Z-"
      global move_thread_flag_1746=0
      thread move_thread_1746():
        enter_critical
        move_thread_flag_1746 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1746 = 2
        exit_critical
      end
      move_thread_flag_1746 = 0
      move_thread_han_1746 = run move_thread_1746()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1746 > 1):
          join move_thread_han_1746
          $ 1747 "Until (distance)"
          break
        end
        sync()
      end
      $ 1748 "Direction: Base Z-"
      global move_thread_flag_1748=0
      thread move_thread_1748():
        enter_critical
        move_thread_flag_1748 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1748 = 2
        exit_critical
      end
      move_thread_flag_1748 = 0
      move_thread_han_1748 = run move_thread_1748()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1748
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1749 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1750 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1751 "Direction: Base Z+"
      global move_thread_flag_1751=0
      thread move_thread_1751():
        enter_critical
        move_thread_flag_1751 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1751 = 2
        exit_critical
      end
      move_thread_flag_1751 = 0
      move_thread_han_1751 = run move_thread_1751()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1751 > 1):
          join move_thread_han_1751
          $ 1752 "Until (distance)"
          break
        end
        sync()
      end
      $ 1753 "Wait: 0.3"
      sleep(0.3)
      $ 1754 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1755 "Wait: 0.3"
      sleep(0.3)
      $ 1756 "Loop 1 times"
      Loop_133 = 0
      while (Loop_133 < 1):
        $ 1757 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1758 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1759 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1760 "Direction: Base Z+"
        global move_thread_flag_1760=0
        thread move_thread_1760():
          enter_critical
          move_thread_flag_1760 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1760 = 2
          exit_critical
        end
        move_thread_flag_1760 = 0
        move_thread_han_1760 = run move_thread_1760()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1760 > 1):
            join move_thread_han_1760
            $ 1761 "Until (distance)"
            break
          end
          sync()
        end
        $ 1762 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1763 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1764 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_133 = Loop_133 + 1
      end
      $ 1765 "Direction: Base Z+"
      global move_thread_flag_1765=0
      thread move_thread_1765():
        enter_critical
        move_thread_flag_1765 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1765 = 2
        exit_critical
      end
      move_thread_flag_1765 = 0
      move_thread_han_1765 = run move_thread_1765()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1765 > 1):
          join move_thread_han_1765
          $ 1766 "Until (distance)"
          break
        end
        sync()
      end
      $ 1767 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1768 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1771 "Popup: Linea15 con chica Terminada!"
    popup("Linea15 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1772 "Linea16"
    $ 1773 "Marcar_puntos"
    $ 1774 "MoveL"
    $ 1775 "Linea16_A" "breakAfter"
    movel(Linea16_A_p, a=0.5, v=0.1)
    $ 1776 "bajada_comprobacion"
    $ 1777 "Direction: Base Z-"
    global move_thread_flag_1777=0
    thread move_thread_1777():
      enter_critical
      move_thread_flag_1777 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1777 = 2
      exit_critical
    end
    move_thread_flag_1777 = 0
    move_thread_han_1777 = run move_thread_1777()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1777 > 1):
        join move_thread_han_1777
        $ 1778 "Until (distance)"
        break
      end
      sync()
    end
    $ 1779 "Direction: Base Z-"
    global move_thread_flag_1779=0
    thread move_thread_1779():
      enter_critical
      move_thread_flag_1779 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1779 = 2
      exit_critical
    end
    move_thread_flag_1779 = 0
    move_thread_han_1779 = run move_thread_1779()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1779
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1780 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1781 "Direction: Base Z+"
    global move_thread_flag_1781=0
    thread move_thread_1781():
      enter_critical
      move_thread_flag_1781 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1781 = 2
      exit_critical
    end
    move_thread_flag_1781 = 0
    move_thread_han_1781 = run move_thread_1781()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1781 > 1):
        join move_thread_han_1781
        $ 1782 "Until (distance)"
        break
      end
      sync()
    end
    $ 1783 "Linea16_B" "breakAfter"
    movel(Linea16_B_p, a=0.5, v=0.1)
    $ 1784 "bajada_comprobacion"
    $ 1785 "Direction: Base Z-"
    global move_thread_flag_1785=0
    thread move_thread_1785():
      enter_critical
      move_thread_flag_1785 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1785 = 2
      exit_critical
    end
    move_thread_flag_1785 = 0
    move_thread_han_1785 = run move_thread_1785()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1785 > 1):
        join move_thread_han_1785
        $ 1786 "Until (distance)"
        break
      end
      sync()
    end
    $ 1787 "Direction: Base Z-"
    global move_thread_flag_1787=0
    thread move_thread_1787():
      enter_critical
      move_thread_flag_1787 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1787 = 2
      exit_critical
    end
    move_thread_flag_1787 = 0
    move_thread_han_1787 = run move_thread_1787()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1787
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1788 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1789 "Direction: Base Z+"
    global move_thread_flag_1789=0
    thread move_thread_1789():
      enter_critical
      move_thread_flag_1789 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1789 = 2
      exit_critical
    end
    move_thread_flag_1789 = 0
    move_thread_han_1789 = run move_thread_1789()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1789 > 1):
        join move_thread_han_1789
        $ 1790 "Until (distance)"
        break
      end
      sync()
    end
    $ 1791 "AB"
    $ 1792 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1793 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1794 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 1795 "barreno_actual≔0"
    global barreno_actual=0
    $ 1796 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1797 "Perforacion"
      $ 1798 "MoveL"
      $ 1801 "internos≔interpolate_pose(Linea16_A, Linea16_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea16_A_p, Linea16_B_p, barreno_actual/barrenos_menos1)
      $ 1802 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1803 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1804 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1805 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1806 "Direction: Base Z-"
      global move_thread_flag_1806=0
      thread move_thread_1806():
        enter_critical
        move_thread_flag_1806 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1806 = 2
        exit_critical
      end
      move_thread_flag_1806 = 0
      move_thread_han_1806 = run move_thread_1806()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1806 > 1):
          join move_thread_han_1806
          $ 1807 "Until (distance)"
          break
        end
        sync()
      end
      $ 1808 "Direction: Base Z-"
      global move_thread_flag_1808=0
      thread move_thread_1808():
        enter_critical
        move_thread_flag_1808 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1808 = 2
        exit_critical
      end
      move_thread_flag_1808 = 0
      move_thread_han_1808 = run move_thread_1808()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1808
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1809 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1810 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1811 "Direction: Base Z+"
      global move_thread_flag_1811=0
      thread move_thread_1811():
        enter_critical
        move_thread_flag_1811 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_1811 = 2
        exit_critical
      end
      move_thread_flag_1811 = 0
      move_thread_han_1811 = run move_thread_1811()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1811 > 1):
          join move_thread_han_1811
          $ 1812 "Until (distance)"
          break
        end
        sync()
      end
      $ 1813 "Wait: 0.3"
      sleep(0.3)
      $ 1814 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1815 "Wait: 0.3"
      sleep(0.3)
      $ 1816 "Loop 1 times"
      Loop_135 = 0
      while (Loop_135 < 1):
        $ 1817 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1818 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1819 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1820 "Direction: Base Z+"
        global move_thread_flag_1820=0
        thread move_thread_1820():
          enter_critical
          move_thread_flag_1820 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1820 = 2
          exit_critical
        end
        move_thread_flag_1820 = 0
        move_thread_han_1820 = run move_thread_1820()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1820 > 1):
            join move_thread_han_1820
            $ 1821 "Until (distance)"
            break
          end
          sync()
        end
        $ 1822 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1823 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1824 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_135 = Loop_135 + 1
      end
      $ 1825 "Direction: Base Z+"
      global move_thread_flag_1825=0
      thread move_thread_1825():
        enter_critical
        move_thread_flag_1825 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1825 = 2
        exit_critical
      end
      move_thread_flag_1825 = 0
      move_thread_han_1825 = run move_thread_1825()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1825 > 1):
          join move_thread_han_1825
          $ 1826 "Until (distance)"
          break
        end
        sync()
      end
      $ 1827 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1828 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1831 "Popup: Linea16 con chica Terminada!"
    popup("Linea16 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1832 "Linea17"
    $ 1833 "Marcar_puntos"
    $ 1834 "MoveL"
    $ 1835 "Linea17_A" "breakAfter"
    movel(Linea17_A_p, a=0.5, v=0.1)
    $ 1836 "bajada_comprobacion"
    $ 1837 "Direction: Base Z-"
    global move_thread_flag_1837=0
    thread move_thread_1837():
      enter_critical
      move_thread_flag_1837 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1837 = 2
      exit_critical
    end
    move_thread_flag_1837 = 0
    move_thread_han_1837 = run move_thread_1837()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1837 > 1):
        join move_thread_han_1837
        $ 1838 "Until (distance)"
        break
      end
      sync()
    end
    $ 1839 "Direction: Base Z-"
    global move_thread_flag_1839=0
    thread move_thread_1839():
      enter_critical
      move_thread_flag_1839 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1839 = 2
      exit_critical
    end
    move_thread_flag_1839 = 0
    move_thread_han_1839 = run move_thread_1839()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1839
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1840 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1841 "Direction: Base Z+"
    global move_thread_flag_1841=0
    thread move_thread_1841():
      enter_critical
      move_thread_flag_1841 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1841 = 2
      exit_critical
    end
    move_thread_flag_1841 = 0
    move_thread_han_1841 = run move_thread_1841()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1841 > 1):
        join move_thread_han_1841
        $ 1842 "Until (distance)"
        break
      end
      sync()
    end
    $ 1843 "Linea17_B" "breakAfter"
    movel(Linea17_B_p, a=0.5, v=0.1)
    $ 1844 "bajada_comprobacion"
    $ 1845 "Direction: Base Z-"
    global move_thread_flag_1845=0
    thread move_thread_1845():
      enter_critical
      move_thread_flag_1845 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1845 = 2
      exit_critical
    end
    move_thread_flag_1845 = 0
    move_thread_han_1845 = run move_thread_1845()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1845 > 1):
        join move_thread_han_1845
        $ 1846 "Until (distance)"
        break
      end
      sync()
    end
    $ 1847 "Direction: Base Z-"
    global move_thread_flag_1847=0
    thread move_thread_1847():
      enter_critical
      move_thread_flag_1847 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1847 = 2
      exit_critical
    end
    move_thread_flag_1847 = 0
    move_thread_han_1847 = run move_thread_1847()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1847
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1848 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1849 "Direction: Base Z+"
    global move_thread_flag_1849=0
    thread move_thread_1849():
      enter_critical
      move_thread_flag_1849 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1849 = 2
      exit_critical
    end
    move_thread_flag_1849 = 0
    move_thread_han_1849 = run move_thread_1849()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1849 > 1):
        join move_thread_han_1849
        $ 1850 "Until (distance)"
        break
      end
      sync()
    end
    $ 1851 "AB"
    $ 1852 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1853 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1854 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 1855 "barreno_actual≔0"
    global barreno_actual=0
    $ 1856 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1857 "Perforacion"
      $ 1858 "MoveL"
      $ 1861 "internos≔interpolate_pose(Linea17_A, Linea17_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea17_A_p, Linea17_B_p, barreno_actual/barrenos_menos1)
      $ 1862 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1863 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1864 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1865 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1866 "Direction: Base Z-"
      global move_thread_flag_1866=0
      thread move_thread_1866():
        enter_critical
        move_thread_flag_1866 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1866 = 2
        exit_critical
      end
      move_thread_flag_1866 = 0
      move_thread_han_1866 = run move_thread_1866()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1866 > 1):
          join move_thread_han_1866
          $ 1867 "Until (distance)"
          break
        end
        sync()
      end
      $ 1868 "Direction: Base Z-"
      global move_thread_flag_1868=0
      thread move_thread_1868():
        enter_critical
        move_thread_flag_1868 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1868 = 2
        exit_critical
      end
      move_thread_flag_1868 = 0
      move_thread_han_1868 = run move_thread_1868()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1868
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1869 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1870 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1871 "Direction: Base Z+"
      global move_thread_flag_1871=0
      thread move_thread_1871():
        enter_critical
        move_thread_flag_1871 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1871 = 2
        exit_critical
      end
      move_thread_flag_1871 = 0
      move_thread_han_1871 = run move_thread_1871()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1871 > 1):
          join move_thread_han_1871
          $ 1872 "Until (distance)"
          break
        end
        sync()
      end
      $ 1873 "Wait: 0.3"
      sleep(0.3)
      $ 1874 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1875 "Wait: 0.3"
      sleep(0.3)
      $ 1876 "Loop 1 times"
      Loop_137 = 0
      while (Loop_137 < 1):
        $ 1877 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1878 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1879 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1880 "Direction: Base Z+"
        global move_thread_flag_1880=0
        thread move_thread_1880():
          enter_critical
          move_thread_flag_1880 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1880 = 2
          exit_critical
        end
        move_thread_flag_1880 = 0
        move_thread_han_1880 = run move_thread_1880()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1880 > 1):
            join move_thread_han_1880
            $ 1881 "Until (distance)"
            break
          end
          sync()
        end
        $ 1882 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1883 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1884 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_137 = Loop_137 + 1
      end
      $ 1885 "Direction: Base Z+"
      global move_thread_flag_1885=0
      thread move_thread_1885():
        enter_critical
        move_thread_flag_1885 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_1885 = 2
        exit_critical
      end
      move_thread_flag_1885 = 0
      move_thread_han_1885 = run move_thread_1885()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1885 > 1):
          join move_thread_han_1885
          $ 1886 "Until (distance)"
          break
        end
        sync()
      end
      $ 1887 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1888 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1891 "Popup: Linea17 con chica Terminada!"
    popup("Linea17 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1892 "Linea18"
    $ 1893 "Marcar_puntos"
    $ 1894 "MoveL"
    $ 1895 "Linea18_A" "breakAfter"
    movel(Linea18_A_p, a=0.5, v=0.1)
    $ 1896 "bajada_comprobacion"
    $ 1897 "Direction: Base Z-"
    global move_thread_flag_1897=0
    thread move_thread_1897():
      enter_critical
      move_thread_flag_1897 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1897 = 2
      exit_critical
    end
    move_thread_flag_1897 = 0
    move_thread_han_1897 = run move_thread_1897()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1897 > 1):
        join move_thread_han_1897
        $ 1898 "Until (distance)"
        break
      end
      sync()
    end
    $ 1899 "Direction: Base Z-"
    global move_thread_flag_1899=0
    thread move_thread_1899():
      enter_critical
      move_thread_flag_1899 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1899 = 2
      exit_critical
    end
    move_thread_flag_1899 = 0
    move_thread_han_1899 = run move_thread_1899()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1899
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1900 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1901 "Direction: Base Z+"
    global move_thread_flag_1901=0
    thread move_thread_1901():
      enter_critical
      move_thread_flag_1901 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1901 = 2
      exit_critical
    end
    move_thread_flag_1901 = 0
    move_thread_han_1901 = run move_thread_1901()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1901 > 1):
        join move_thread_han_1901
        $ 1902 "Until (distance)"
        break
      end
      sync()
    end
    $ 1903 "Linea18_AB" "breakAfter"
    movel(Linea18_AB_p, a=0.5, v=0.1)
    $ 1905 "bajada_comprobacion"
    $ 1906 "Direction: Base Z-"
    global move_thread_flag_1906=0
    thread move_thread_1906():
      enter_critical
      move_thread_flag_1906 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1906 = 2
      exit_critical
    end
    move_thread_flag_1906 = 0
    move_thread_han_1906 = run move_thread_1906()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1906 > 1):
        join move_thread_han_1906
        $ 1907 "Until (distance)"
        break
      end
      sync()
    end
    $ 1908 "Direction: Base Z-"
    global move_thread_flag_1908=0
    thread move_thread_1908():
      enter_critical
      move_thread_flag_1908 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1908 = 2
      exit_critical
    end
    move_thread_flag_1908 = 0
    move_thread_han_1908 = run move_thread_1908()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1908
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1909 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1910 "Direction: Base Z+"
    global move_thread_flag_1910=0
    thread move_thread_1910():
      enter_critical
      move_thread_flag_1910 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1910 = 2
      exit_critical
    end
    move_thread_flag_1910 = 0
    move_thread_han_1910 = run move_thread_1910()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1910 > 1):
        join move_thread_han_1910
        $ 1911 "Until (distance)"
        break
      end
      sync()
    end
    $ 1912 "AB"
    $ 1913 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1914 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1915 "barrenos_menos1≔9"
    global barrenos_menos1=9
    $ 1916 "barreno_actual≔0"
    global barreno_actual=0
    $ 1917 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1918 "Perforacion"
      $ 1919 "MoveL"
      $ 1920 "If barreno_actual≟6 "
      if (barreno_actual == 6 ):
        $ 1921 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1922 "internos≔interpolate_pose(Linea18_A, Linea18_AB, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea18_A_p, Linea18_AB_p, barreno_actual/barrenos_menos1)
      $ 1923 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1924 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1925 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1926 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1927 "Direction: Base Z-"
      global move_thread_flag_1927=0
      thread move_thread_1927():
        enter_critical
        move_thread_flag_1927 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1927 = 2
        exit_critical
      end
      move_thread_flag_1927 = 0
      move_thread_han_1927 = run move_thread_1927()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1927 > 1):
          join move_thread_han_1927
          $ 1928 "Until (distance)"
          break
        end
        sync()
      end
      $ 1929 "Direction: Base Z-"
      global move_thread_flag_1929=0
      thread move_thread_1929():
        enter_critical
        move_thread_flag_1929 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1929 = 2
        exit_critical
      end
      move_thread_flag_1929 = 0
      move_thread_han_1929 = run move_thread_1929()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1929
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1930 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1931 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1932 "Direction: Base Z+"
      global move_thread_flag_1932=0
      thread move_thread_1932():
        enter_critical
        move_thread_flag_1932 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1932 = 2
        exit_critical
      end
      move_thread_flag_1932 = 0
      move_thread_han_1932 = run move_thread_1932()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1932 > 1):
          join move_thread_han_1932
          $ 1933 "Until (distance)"
          break
        end
        sync()
      end
      $ 1934 "Wait: 0.3"
      sleep(0.3)
      $ 1935 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1936 "Wait: 0.3"
      sleep(0.3)
      $ 1937 "Loop 1 times"
      Loop_139 = 0
      while (Loop_139 < 1):
        $ 1938 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 1939 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 1940 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 1941 "Direction: Base Z+"
        global move_thread_flag_1941=0
        thread move_thread_1941():
          enter_critical
          move_thread_flag_1941 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_1941 = 2
          exit_critical
        end
        move_thread_flag_1941 = 0
        move_thread_han_1941 = run move_thread_1941()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_1941 > 1):
            join move_thread_han_1941
            $ 1942 "Until (distance)"
            break
          end
          sync()
        end
        $ 1943 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 1944 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 1945 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_139 = Loop_139 + 1
      end
      $ 1946 "Direction: Base Z+"
      global move_thread_flag_1946=0
      thread move_thread_1946():
        enter_critical
        move_thread_flag_1946 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1946 = 2
        exit_critical
      end
      move_thread_flag_1946 = 0
      move_thread_han_1946 = run move_thread_1946()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1946 > 1):
          join move_thread_han_1946
          $ 1947 "Until (distance)"
          break
        end
        sync()
      end
      $ 1948 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 1949 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 1952 "Popup: Linea18 con chica Terminada!"
    popup("Linea18 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 1953 "Linea18B"
    $ 1954 "Marcar_puntos"
    $ 1955 "MoveL"
    $ 1956 "Linea18_BA" "breakAfter"
    movel(Linea18_BA_p, a=0.5, v=0.1)
    $ 1957 "bajada_comprobacion"
    $ 1958 "Direction: Base Z-"
    global move_thread_flag_1958=0
    thread move_thread_1958():
      enter_critical
      move_thread_flag_1958 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1958 = 2
      exit_critical
    end
    move_thread_flag_1958 = 0
    move_thread_han_1958 = run move_thread_1958()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1958 > 1):
        join move_thread_han_1958
        $ 1959 "Until (distance)"
        break
      end
      sync()
    end
    $ 1960 "Direction: Base Z-"
    global move_thread_flag_1960=0
    thread move_thread_1960():
      enter_critical
      move_thread_flag_1960 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1960 = 2
      exit_critical
    end
    move_thread_flag_1960 = 0
    move_thread_han_1960 = run move_thread_1960()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1960
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1961 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1962 "Direction: Base Z+"
    global move_thread_flag_1962=0
    thread move_thread_1962():
      enter_critical
      move_thread_flag_1962 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1962 = 2
      exit_critical
    end
    move_thread_flag_1962 = 0
    move_thread_han_1962 = run move_thread_1962()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1962 > 1):
        join move_thread_han_1962
        $ 1963 "Until (distance)"
        break
      end
      sync()
    end
    $ 1965 "Linea18_B" "breakAfter"
    movel(Linea18_B_p, a=0.5, v=0.1)
    $ 1966 "bajada_comprobacion"
    $ 1967 "Direction: Base Z-"
    global move_thread_flag_1967=0
    thread move_thread_1967():
      enter_critical
      move_thread_flag_1967 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1967 = 2
      exit_critical
    end
    move_thread_flag_1967 = 0
    move_thread_han_1967 = run move_thread_1967()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1967 > 1):
        join move_thread_han_1967
        $ 1968 "Until (distance)"
        break
      end
      sync()
    end
    $ 1969 "Direction: Base Z-"
    global move_thread_flag_1969=0
    thread move_thread_1969():
      enter_critical
      move_thread_flag_1969 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_1969 = 2
      exit_critical
    end
    move_thread_flag_1969 = 0
    move_thread_han_1969 = run move_thread_1969()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_1969
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 1970 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 1971 "Direction: Base Z+"
    global move_thread_flag_1971=0
    thread move_thread_1971():
      enter_critical
      move_thread_flag_1971 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_1971 = 2
      exit_critical
    end
    move_thread_flag_1971 = 0
    move_thread_han_1971 = run move_thread_1971()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_1971 > 1):
        join move_thread_han_1971
        $ 1972 "Until (distance)"
        break
      end
      sync()
    end
    $ 1973 "AB"
    $ 1974 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 1975 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 1976 "barrenos_menos1≔9"
    global barrenos_menos1=9
    $ 1977 "barreno_actual≔0"
    global barreno_actual=0
    $ 1978 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 1979 "Perforacion"
      $ 1980 "MoveL"
      $ 1981 "If barreno_actual≟3"
      if (barreno_actual == 3):
        $ 1982 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 1983 "internos≔interpolate_pose(Linea18_BA, Linea18_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea18_BA_p, Linea18_B_p, barreno_actual/barrenos_menos1)
      $ 1984 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 1985 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 1986 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 1987 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 1988 "Direction: Base Z-"
      global move_thread_flag_1988=0
      thread move_thread_1988():
        enter_critical
        move_thread_flag_1988 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_1988 = 2
        exit_critical
      end
      move_thread_flag_1988 = 0
      move_thread_han_1988 = run move_thread_1988()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1988 > 1):
          join move_thread_han_1988
          $ 1989 "Until (distance)"
          break
        end
        sync()
      end
      $ 1990 "Direction: Base Z-"
      global move_thread_flag_1990=0
      thread move_thread_1990():
        enter_critical
        move_thread_flag_1990 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_1990 = 2
        exit_critical
      end
      move_thread_flag_1990 = 0
      move_thread_han_1990 = run move_thread_1990()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_1990
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 1991 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 1992 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 1993 "Direction: Base Z+"
      global move_thread_flag_1993=0
      thread move_thread_1993():
        enter_critical
        move_thread_flag_1993 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_1993 = 2
        exit_critical
      end
      move_thread_flag_1993 = 0
      move_thread_han_1993 = run move_thread_1993()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_1993 > 1):
          join move_thread_han_1993
          $ 1994 "Until (distance)"
          break
        end
        sync()
      end
      $ 1995 "Wait: 0.3"
      sleep(0.3)
      $ 1996 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 1997 "Wait: 0.3"
      sleep(0.3)
      $ 1998 "Loop 1 times"
      Loop_28 = 0
      while (Loop_28 < 1):
        $ 1999 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 2000 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 2001 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 2002 "Direction: Base Z+"
        global move_thread_flag_2002=0
        thread move_thread_2002():
          enter_critical
          move_thread_flag_2002 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_2002 = 2
          exit_critical
        end
        move_thread_flag_2002 = 0
        move_thread_han_2002 = run move_thread_2002()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_2002 > 1):
            join move_thread_han_2002
            $ 2003 "Until (distance)"
            break
          end
          sync()
        end
        $ 2004 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 2005 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 2006 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_28 = Loop_28 + 1
      end
      $ 2007 "Direction: Base Z+"
      global move_thread_flag_2007=0
      thread move_thread_2007():
        enter_critical
        move_thread_flag_2007 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_2007 = 2
        exit_critical
      end
      move_thread_flag_2007 = 0
      move_thread_han_2007 = run move_thread_2007()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_2007 > 1):
          join move_thread_han_2007
          $ 2008 "Until (distance)"
          break
        end
        sync()
      end
      $ 2009 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 2010 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 2013 "Popup: Linea18B con chica Terminada!"
    popup("Linea18B con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 2014 "cambiar_broca≔ True "
    global cambiar_broca=  True  
    $ 2015 "Call Quitar_broca"
    Quitar_broca()
    $ 2016 "Call Poner_broca"
    Poner_broca()
    $ 3183 "Posicion3"
    $ 3184 "Inicio"
    $ 3185 "eje7≔3"
    global eje7=3
    $ 3186 "MoveL"
    $ 3187 "Home3" "breakAfter"
    movel(Home3_p, a=1.2, v=0.25)
    $ 3188 "SeatTracks"
    $ 3189 "Broca_1"
    $ 3190 "Linea3"
    $ 3191 "Marcar_puntos"
    $ 3192 "MoveL"
    $ 3193 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3200 "Linea3_A" "breakAfter"
    movel(Linea3_A_p, a=0.5, v=0.1)
    $ 3201 "Linea3_B" "breakAfter"
    movel(Linea3_B_p, a=0.5, v=0.1)
    $ 3202 "Linea3_C" "breakAfter"
    movel(Linea3_C_p, a=0.5, v=0.1)
    $ 3203 "Linea3_D" "breakAfter"
    movel(Linea3_D_p, a=0.5, v=0.1)
    $ 3204 "Linea3_E" "breakAfter"
    movel(Linea3_E_p, a=0.5, v=0.1)
    $ 3205 "Linea3_F" "breakAfter"
    movel(Linea3_F_p, a=0.5, v=0.1)
    $ 3206 "AB"
    $ 3207 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3208 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3209 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3210 "barreno_actual≔0"
    global barreno_actual=0
    $ 3211 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3212 "Perforacion"
      $ 3213 "MoveL"
      $ 3214 "internos≔interpolate_pose(Linea3_A, Linea3_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_A_p, Linea3_B_p, barreno_actual/barrenos_menos1)
      $ 3215 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3216 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3217 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3218 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3219 "Direction: Base Z-"
      global move_thread_flag_3219=0
      thread move_thread_3219():
        enter_critical
        move_thread_flag_3219 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3219 = 2
        exit_critical
      end
      move_thread_flag_3219 = 0
      move_thread_han_3219 = run move_thread_3219()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3219 > 1):
          join move_thread_han_3219
          $ 3220 "Until (distance)"
          break
        end
        sync()
      end
      $ 3221 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3222 "Direction: Base Z+"
      global move_thread_flag_3222=0
      thread move_thread_3222():
        enter_critical
        move_thread_flag_3222 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3222 = 2
        exit_critical
      end
      move_thread_flag_3222 = 0
      move_thread_han_3222 = run move_thread_3222()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3222 > 1):
          join move_thread_han_3222
          $ 3223 "Until (distance)"
          break
        end
        sync()
      end
      $ 3224 "Wait: 0.3"
      sleep(0.3)
      $ 3225 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3226 "Wait: 0.3"
      sleep(0.3)
      $ 3227 "Loop 3 times"
      Loop_21 = 0
      while (Loop_21 < 3):
        $ 3228 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3229 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3230 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3231 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3232 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_21 = Loop_21 + 1
      end
      $ 3233 "Direction: Base Z+"
      global move_thread_flag_3233=0
      thread move_thread_3233():
        enter_critical
        move_thread_flag_3233 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3233 = 2
        exit_critical
      end
      move_thread_flag_3233 = 0
      move_thread_han_3233 = run move_thread_3233()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3233 > 1):
          join move_thread_han_3233
          $ 3234 "Until (distance)"
          break
        end
        sync()
      end
      $ 3235 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3236 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3237 "Call Quitar_broca"
      Quitar_broca()
      $ 3238 "Call Poner_broca"
      Poner_broca()
    end
    $ 3239 "CD"
    $ 3240 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3241 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3242 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3243 "barreno_actual≔0"
    global barreno_actual=0
    $ 3244 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3245 "Perforacion"
      $ 3246 "MoveL"
      $ 3247 "internos≔interpolate_pose(Linea3_C, Linea3_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_C_p, Linea3_D_p, barreno_actual/barrenos_menos1)
      $ 3248 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3249 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3250 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3251 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3252 "Direction: Base Z-"
      global move_thread_flag_3252=0
      thread move_thread_3252():
        enter_critical
        move_thread_flag_3252 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3252 = 2
        exit_critical
      end
      move_thread_flag_3252 = 0
      move_thread_han_3252 = run move_thread_3252()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3252 > 1):
          join move_thread_han_3252
          $ 3253 "Until (distance)"
          break
        end
        sync()
      end
      $ 3254 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3255 "Direction: Base Z+"
      global move_thread_flag_3255=0
      thread move_thread_3255():
        enter_critical
        move_thread_flag_3255 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3255 = 2
        exit_critical
      end
      move_thread_flag_3255 = 0
      move_thread_han_3255 = run move_thread_3255()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3255 > 1):
          join move_thread_han_3255
          $ 3256 "Until (distance)"
          break
        end
        sync()
      end
      $ 3257 "Wait: 0.3"
      sleep(0.3)
      $ 3258 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3259 "Wait: 0.3"
      sleep(0.3)
      $ 3260 "Loop 3 times"
      Loop_24 = 0
      while (Loop_24 < 3):
        $ 3261 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3262 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3263 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3264 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3265 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_24 = Loop_24 + 1
      end
      $ 3266 "Direction: Base Z+"
      global move_thread_flag_3266=0
      thread move_thread_3266():
        enter_critical
        move_thread_flag_3266 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3266 = 2
        exit_critical
      end
      move_thread_flag_3266 = 0
      move_thread_han_3266 = run move_thread_3266()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3266 > 1):
          join move_thread_han_3266
          $ 3267 "Until (distance)"
          break
        end
        sync()
      end
      $ 3268 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3269 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3270 "Call Quitar_broca"
      Quitar_broca()
      $ 3271 "Call Poner_broca"
      Poner_broca()
    end
    $ 3272 "EF"
    $ 3273 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3274 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3275 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3276 "barreno_actual≔0"
    global barreno_actual=0
    $ 3277 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3278 "Perforacion"
      $ 3279 "MoveL"
      $ 3280 "internos≔interpolate_pose(Linea3_E, Linea3_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_E_p, Linea3_F_p, barreno_actual/barrenos_menos1)
      $ 3281 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3282 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3283 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3284 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3285 "Direction: Base Z-"
      global move_thread_flag_3285=0
      thread move_thread_3285():
        enter_critical
        move_thread_flag_3285 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3285 = 2
        exit_critical
      end
      move_thread_flag_3285 = 0
      move_thread_han_3285 = run move_thread_3285()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3285 > 1):
          join move_thread_han_3285
          $ 3286 "Until (distance)"
          break
        end
        sync()
      end
      $ 3287 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3288 "Direction: Base Z+"
      global move_thread_flag_3288=0
      thread move_thread_3288():
        enter_critical
        move_thread_flag_3288 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3288 = 2
        exit_critical
      end
      move_thread_flag_3288 = 0
      move_thread_han_3288 = run move_thread_3288()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3288 > 1):
          join move_thread_han_3288
          $ 3289 "Until (distance)"
          break
        end
        sync()
      end
      $ 3290 "Wait: 0.3"
      sleep(0.3)
      $ 3291 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3292 "Wait: 0.3"
      sleep(0.3)
      $ 3293 "Loop 3 times"
      Loop_46 = 0
      while (Loop_46 < 3):
        $ 3294 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3295 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3296 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3297 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3298 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_46 = Loop_46 + 1
      end
      $ 3299 "Direction: Base Z+"
      global move_thread_flag_3299=0
      thread move_thread_3299():
        enter_critical
        move_thread_flag_3299 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3299 = 2
        exit_critical
      end
      move_thread_flag_3299 = 0
      move_thread_han_3299 = run move_thread_3299()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3299 > 1):
          join move_thread_han_3299
          $ 3300 "Until (distance)"
          break
        end
        sync()
      end
      $ 3301 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3302 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3303 "Call Quitar_broca"
      Quitar_broca()
      $ 3304 "Call Poner_broca"
      Poner_broca()
    end
    $ 3305 "Popup: Linea3 con chica Terminada!"
    popup("Linea3 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 3306 "Linea4"
    $ 3307 "Marcar_puntos"
    $ 3308 "MoveL"
    $ 3309 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3310 "Linea4_A" "breakAfter"
    movel(Linea4_A_p, a=0.5, v=0.1)
    $ 3311 "Linea4_B" "breakAfter"
    movel(Linea4_B_p, a=0.5, v=0.1)
    $ 3312 "Linea4_C" "breakAfter"
    movel(Linea4_C_p, a=0.5, v=0.1)
    $ 3313 "Linea4_D" "breakAfter"
    movel(Linea4_D_p, a=0.5, v=0.1)
    $ 3314 "Linea4_E" "breakAfter"
    movel(Linea4_E_p, a=0.5, v=0.1)
    $ 3315 "Linea4_F" "breakAfter"
    movel(Linea4_F_p, a=0.5, v=0.1)
    $ 3316 "AB"
    $ 3317 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3318 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3319 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3320 "barreno_actual≔0"
    global barreno_actual=0
    $ 3321 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3322 "Perforacion"
      $ 3323 "MoveL"
      $ 3324 "internos≔interpolate_pose(Linea4_A, Linea4_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_A_p, Linea4_B_p, barreno_actual/barrenos_menos1)
      $ 3325 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3326 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3327 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3328 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3329 "Direction: Base Z-"
      global move_thread_flag_3329=0
      thread move_thread_3329():
        enter_critical
        move_thread_flag_3329 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3329 = 2
        exit_critical
      end
      move_thread_flag_3329 = 0
      move_thread_han_3329 = run move_thread_3329()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3329 > 1):
          join move_thread_han_3329
          $ 3330 "Until (distance)"
          break
        end
        sync()
      end
      $ 3331 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3332 "Direction: Base Z+"
      global move_thread_flag_3332=0
      thread move_thread_3332():
        enter_critical
        move_thread_flag_3332 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3332 = 2
        exit_critical
      end
      move_thread_flag_3332 = 0
      move_thread_han_3332 = run move_thread_3332()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3332 > 1):
          join move_thread_han_3332
          $ 3333 "Until (distance)"
          break
        end
        sync()
      end
      $ 3334 "Wait: 0.3"
      sleep(0.3)
      $ 3335 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3336 "Wait: 0.3"
      sleep(0.3)
      $ 3337 "Loop 3 times"
      Loop_50 = 0
      while (Loop_50 < 3):
        $ 3338 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3339 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3340 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3341 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3342 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_50 = Loop_50 + 1
      end
      $ 3343 "Direction: Base Z+"
      global move_thread_flag_3343=0
      thread move_thread_3343():
        enter_critical
        move_thread_flag_3343 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3343 = 2
        exit_critical
      end
      move_thread_flag_3343 = 0
      move_thread_han_3343 = run move_thread_3343()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3343 > 1):
          join move_thread_han_3343
          $ 3344 "Until (distance)"
          break
        end
        sync()
      end
      $ 3345 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3346 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3347 "Call Quitar_broca"
      Quitar_broca()
      $ 3348 "Call Poner_broca"
      Poner_broca()
    end
    $ 3349 "CD"
    $ 3350 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3351 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3352 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3353 "barreno_actual≔0"
    global barreno_actual=0
    $ 3354 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3355 "Perforacion"
      $ 3356 "MoveL"
      $ 3357 "internos≔interpolate_pose(Linea4_C, Linea4_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_C_p, Linea4_D_p, barreno_actual/barrenos_menos1)
      $ 3358 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3359 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3360 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3361 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3362 "Direction: Base Z-"
      global move_thread_flag_3362=0
      thread move_thread_3362():
        enter_critical
        move_thread_flag_3362 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3362 = 2
        exit_critical
      end
      move_thread_flag_3362 = 0
      move_thread_han_3362 = run move_thread_3362()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3362 > 1):
          join move_thread_han_3362
          $ 3363 "Until (distance)"
          break
        end
        sync()
      end
      $ 3364 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3365 "Direction: Base Z+"
      global move_thread_flag_3365=0
      thread move_thread_3365():
        enter_critical
        move_thread_flag_3365 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3365 = 2
        exit_critical
      end
      move_thread_flag_3365 = 0
      move_thread_han_3365 = run move_thread_3365()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3365 > 1):
          join move_thread_han_3365
          $ 3366 "Until (distance)"
          break
        end
        sync()
      end
      $ 3367 "Wait: 0.3"
      sleep(0.3)
      $ 3368 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3369 "Wait: 0.3"
      sleep(0.3)
      $ 3370 "Loop 3 times"
      Loop_53 = 0
      while (Loop_53 < 3):
        $ 3371 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3372 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3373 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3374 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3375 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_53 = Loop_53 + 1
      end
      $ 3376 "Direction: Base Z+"
      global move_thread_flag_3376=0
      thread move_thread_3376():
        enter_critical
        move_thread_flag_3376 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3376 = 2
        exit_critical
      end
      move_thread_flag_3376 = 0
      move_thread_han_3376 = run move_thread_3376()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3376 > 1):
          join move_thread_han_3376
          $ 3377 "Until (distance)"
          break
        end
        sync()
      end
      $ 3378 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3379 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3380 "Call Quitar_broca"
      Quitar_broca()
      $ 3381 "Call Poner_broca"
      Poner_broca()
    end
    $ 3382 "EF"
    $ 3383 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3384 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 3385 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3386 "barreno_actual≔0"
    global barreno_actual=0
    $ 3387 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3388 "Perforacion"
      $ 3389 "MoveL"
      $ 3390 "internos≔interpolate_pose(Linea4_E, Linea4_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_E_p, Linea4_F_p, barreno_actual/barrenos_menos1)
      $ 3391 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3392 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3393 "bajada_broca≔p[0,0,-0.008,0,0,0]"
      global bajada_broca=p[0,0,-0.008,0,0,0]
      $ 3394 "bajada≔p[0,0,0.008,0,0,0]"
      global bajada=p[0,0,0.008,0,0,0]
      $ 3395 "Direction: Base Z-"
      global move_thread_flag_3395=0
      thread move_thread_3395():
        enter_critical
        move_thread_flag_3395 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3395 = 2
        exit_critical
      end
      move_thread_flag_3395 = 0
      move_thread_han_3395 = run move_thread_3395()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3395 > 1):
          join move_thread_han_3395
          $ 3396 "Until (distance)"
          break
        end
        sync()
      end
      $ 3397 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3398 "Direction: Base Z+"
      global move_thread_flag_3398=0
      thread move_thread_3398():
        enter_critical
        move_thread_flag_3398 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3398 = 2
        exit_critical
      end
      move_thread_flag_3398 = 0
      move_thread_han_3398 = run move_thread_3398()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3398 > 1):
          join move_thread_han_3398
          $ 3399 "Until (distance)"
          break
        end
        sync()
      end
      $ 3400 "Wait: 0.3"
      sleep(0.3)
      $ 3401 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3402 "Wait: 0.3"
      sleep(0.3)
      $ 3403 "Loop 3 times"
      Loop_58 = 0
      while (Loop_58 < 3):
        $ 3404 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3405 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3406 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3407 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3408 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_58 = Loop_58 + 1
      end
      $ 3409 "Direction: Base Z+"
      global move_thread_flag_3409=0
      thread move_thread_3409():
        enter_critical
        move_thread_flag_3409 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3409 = 2
        exit_critical
      end
      move_thread_flag_3409 = 0
      move_thread_han_3409 = run move_thread_3409()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3409 > 1):
          join move_thread_han_3409
          $ 3410 "Until (distance)"
          break
        end
        sync()
      end
      $ 3411 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3412 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3413 "If barreno_actual>barrenos_menos1"
      if (barreno_actual>barrenos_menos1):
        $ 3414 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 3415 "Call Quitar_broca"
      Quitar_broca()
      $ 3416 "Call Poner_broca"
      Poner_broca()
    end
    $ 3417 "Popup: Linea4 con chica Terminada!"
    popup("Linea4 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 3418 "Broca_2"
    $ 3419 "Linea3"
    $ 3420 "Marcar_puntos"
    $ 3421 "MoveL"
    $ 3422 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3423 "Linea3_A" "breakAfter"
    movel(Linea3_A_p, a=0.5, v=0.1)
    $ 3424 "Linea3_B" "breakAfter"
    movel(Linea3_B_p, a=0.5, v=0.1)
    $ 3425 "Linea3_C" "breakAfter"
    movel(Linea3_C_p, a=0.5, v=0.1)
    $ 3426 "Linea3_D" "breakAfter"
    movel(Linea3_D_p, a=0.5, v=0.1)
    $ 3427 "Linea3_E" "breakAfter"
    movel(Linea3_E_p, a=0.5, v=0.1)
    $ 3428 "Linea3_F" "breakAfter"
    movel(Linea3_F_p, a=0.5, v=0.1)
    $ 3429 "AB"
    $ 3430 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3431 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3432 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3433 "barreno_actual≔0"
    global barreno_actual=0
    $ 3434 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3435 "Perforacion"
      $ 3436 "MoveL"
      $ 3437 "internos≔interpolate_pose(Linea3_A, Linea3_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_A_p, Linea3_B_p, barreno_actual/barrenos_menos1)
      $ 3438 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3439 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3440 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3441 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3442 "Direction: Base Z-"
      global move_thread_flag_3442=0
      thread move_thread_3442():
        enter_critical
        move_thread_flag_3442 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3442 = 2
        exit_critical
      end
      move_thread_flag_3442 = 0
      move_thread_han_3442 = run move_thread_3442()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3442 > 1):
          join move_thread_han_3442
          $ 3443 "Until (distance)"
          break
        end
        sync()
      end
      $ 3444 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3445 "Direction: Base Z+"
      global move_thread_flag_3445=0
      thread move_thread_3445():
        enter_critical
        move_thread_flag_3445 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3445 = 2
        exit_critical
      end
      move_thread_flag_3445 = 0
      move_thread_han_3445 = run move_thread_3445()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3445 > 1):
          join move_thread_han_3445
          $ 3446 "Until (distance)"
          break
        end
        sync()
      end
      $ 3447 "Wait: 0.3"
      sleep(0.3)
      $ 3448 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3449 "Wait: 0.3"
      sleep(0.3)
      $ 3450 "Loop 2 times"
      Loop_60 = 0
      while (Loop_60 < 2):
        $ 3451 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3452 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3453 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3454 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3455 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_60 = Loop_60 + 1
      end
      $ 3456 "Direction: Base Z+"
      global move_thread_flag_3456=0
      thread move_thread_3456():
        enter_critical
        move_thread_flag_3456 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3456 = 2
        exit_critical
      end
      move_thread_flag_3456 = 0
      move_thread_han_3456 = run move_thread_3456()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3456 > 1):
          join move_thread_han_3456
          $ 3457 "Until (distance)"
          break
        end
        sync()
      end
      $ 3458 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3459 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3460 "Call Quitar_broca"
      Quitar_broca()
      $ 3461 "Call Poner_broca"
      Poner_broca()
    end
    $ 3462 "CD"
    $ 3463 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3464 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3465 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3466 "barreno_actual≔0"
    global barreno_actual=0
    $ 3467 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3468 "Perforacion"
      $ 3469 "MoveL"
      $ 3470 "internos≔interpolate_pose(Linea3_C, Linea3_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_C_p, Linea3_D_p, barreno_actual/barrenos_menos1)
      $ 3471 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3472 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3473 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3474 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3475 "Direction: Base Z-"
      global move_thread_flag_3475=0
      thread move_thread_3475():
        enter_critical
        move_thread_flag_3475 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3475 = 2
        exit_critical
      end
      move_thread_flag_3475 = 0
      move_thread_han_3475 = run move_thread_3475()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3475 > 1):
          join move_thread_han_3475
          $ 3476 "Until (distance)"
          break
        end
        sync()
      end
      $ 3477 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3478 "Direction: Base Z+"
      global move_thread_flag_3478=0
      thread move_thread_3478():
        enter_critical
        move_thread_flag_3478 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3478 = 2
        exit_critical
      end
      move_thread_flag_3478 = 0
      move_thread_han_3478 = run move_thread_3478()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3478 > 1):
          join move_thread_han_3478
          $ 3479 "Until (distance)"
          break
        end
        sync()
      end
      $ 3480 "Wait: 0.3"
      sleep(0.3)
      $ 3481 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3482 "Wait: 0.3"
      sleep(0.3)
      $ 3483 "Loop 2 times"
      Loop_64 = 0
      while (Loop_64 < 2):
        $ 3484 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3485 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3486 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3487 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3488 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_64 = Loop_64 + 1
      end
      $ 3489 "Direction: Base Z+"
      global move_thread_flag_3489=0
      thread move_thread_3489():
        enter_critical
        move_thread_flag_3489 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3489 = 2
        exit_critical
      end
      move_thread_flag_3489 = 0
      move_thread_han_3489 = run move_thread_3489()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3489 > 1):
          join move_thread_han_3489
          $ 3490 "Until (distance)"
          break
        end
        sync()
      end
      $ 3491 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3492 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3493 "Call Quitar_broca"
      Quitar_broca()
      $ 3494 "Call Poner_broca"
      Poner_broca()
    end
    $ 3495 "EF"
    $ 3496 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3497 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3498 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3499 "barreno_actual≔0"
    global barreno_actual=0
    $ 3500 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3501 "Perforacion"
      $ 3502 "MoveL"
      $ 3503 "internos≔interpolate_pose(Linea3_E, Linea3_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_E_p, Linea3_F_p, barreno_actual/barrenos_menos1)
      $ 3504 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3505 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3506 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3507 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3508 "Direction: Base Z-"
      global move_thread_flag_3508=0
      thread move_thread_3508():
        enter_critical
        move_thread_flag_3508 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3508 = 2
        exit_critical
      end
      move_thread_flag_3508 = 0
      move_thread_han_3508 = run move_thread_3508()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3508 > 1):
          join move_thread_han_3508
          $ 3509 "Until (distance)"
          break
        end
        sync()
      end
      $ 3510 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3511 "Direction: Base Z+"
      global move_thread_flag_3511=0
      thread move_thread_3511():
        enter_critical
        move_thread_flag_3511 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3511 = 2
        exit_critical
      end
      move_thread_flag_3511 = 0
      move_thread_han_3511 = run move_thread_3511()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3511 > 1):
          join move_thread_han_3511
          $ 3512 "Until (distance)"
          break
        end
        sync()
      end
      $ 3513 "Wait: 0.3"
      sleep(0.3)
      $ 3514 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3515 "Wait: 0.3"
      sleep(0.3)
      $ 3516 "Loop 2 times"
      Loop_68 = 0
      while (Loop_68 < 2):
        $ 3517 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3518 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3519 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3520 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3521 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_68 = Loop_68 + 1
      end
      $ 3522 "Direction: Base Z+"
      global move_thread_flag_3522=0
      thread move_thread_3522():
        enter_critical
        move_thread_flag_3522 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3522 = 2
        exit_critical
      end
      move_thread_flag_3522 = 0
      move_thread_han_3522 = run move_thread_3522()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3522 > 1):
          join move_thread_han_3522
          $ 3523 "Until (distance)"
          break
        end
        sync()
      end
      $ 3524 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3525 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3526 "Call Quitar_broca"
      Quitar_broca()
      $ 3527 "Call Poner_broca"
      Poner_broca()
    end
    $ 3528 "Popup: Linea3 con media Terminada!"
    popup("Linea3 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 3529 "Linea4"
    $ 3530 "Marcar_puntos"
    $ 3531 "MoveL"
    $ 3532 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3533 "Linea4_A" "breakAfter"
    movel(Linea4_A_p, a=0.5, v=0.1)
    $ 3534 "Linea4_B" "breakAfter"
    movel(Linea4_B_p, a=0.5, v=0.1)
    $ 3535 "Linea4_C" "breakAfter"
    movel(Linea4_C_p, a=0.5, v=0.1)
    $ 3536 "Linea4_D" "breakAfter"
    movel(Linea4_D_p, a=0.5, v=0.1)
    $ 3537 "Linea4_E" "breakAfter"
    movel(Linea4_E_p, a=0.5, v=0.1)
    $ 3538 "Linea4_F" "breakAfter"
    movel(Linea4_F_p, a=0.5, v=0.1)
    $ 3539 "AB"
    $ 3540 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3541 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3542 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3543 "barreno_actual≔0"
    global barreno_actual=0
    $ 3544 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3545 "Perforacion"
      $ 3546 "MoveL"
      $ 3547 "internos≔interpolate_pose(Linea4_A, Linea4_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_A_p, Linea4_B_p, barreno_actual/barrenos_menos1)
      $ 3548 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3549 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3550 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3551 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3552 "Direction: Base Z-"
      global move_thread_flag_3552=0
      thread move_thread_3552():
        enter_critical
        move_thread_flag_3552 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3552 = 2
        exit_critical
      end
      move_thread_flag_3552 = 0
      move_thread_han_3552 = run move_thread_3552()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3552 > 1):
          join move_thread_han_3552
          $ 3553 "Until (distance)"
          break
        end
        sync()
      end
      $ 3554 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3555 "Direction: Base Z+"
      global move_thread_flag_3555=0
      thread move_thread_3555():
        enter_critical
        move_thread_flag_3555 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3555 = 2
        exit_critical
      end
      move_thread_flag_3555 = 0
      move_thread_han_3555 = run move_thread_3555()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3555 > 1):
          join move_thread_han_3555
          $ 3556 "Until (distance)"
          break
        end
        sync()
      end
      $ 3557 "Wait: 0.3"
      sleep(0.3)
      $ 3558 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3559 "Wait: 0.3"
      sleep(0.3)
      $ 3560 "Loop 2 times"
      Loop_72 = 0
      while (Loop_72 < 2):
        $ 3561 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3562 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3563 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3564 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3565 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_72 = Loop_72 + 1
      end
      $ 3566 "Direction: Base Z+"
      global move_thread_flag_3566=0
      thread move_thread_3566():
        enter_critical
        move_thread_flag_3566 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3566 = 2
        exit_critical
      end
      move_thread_flag_3566 = 0
      move_thread_han_3566 = run move_thread_3566()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3566 > 1):
          join move_thread_han_3566
          $ 3567 "Until (distance)"
          break
        end
        sync()
      end
      $ 3568 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3569 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3570 "Call Quitar_broca"
      Quitar_broca()
      $ 3571 "Call Poner_broca"
      Poner_broca()
    end
    $ 3572 "CD"
    $ 3573 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3574 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3575 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3576 "barreno_actual≔0"
    global barreno_actual=0
    $ 3577 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3578 "Perforacion"
      $ 3579 "MoveL"
      $ 3580 "internos≔interpolate_pose(Linea4_C, Linea4_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_C_p, Linea4_D_p, barreno_actual/barrenos_menos1)
      $ 3581 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3582 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3583 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3584 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3585 "Direction: Base Z-"
      global move_thread_flag_3585=0
      thread move_thread_3585():
        enter_critical
        move_thread_flag_3585 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3585 = 2
        exit_critical
      end
      move_thread_flag_3585 = 0
      move_thread_han_3585 = run move_thread_3585()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3585 > 1):
          join move_thread_han_3585
          $ 3586 "Until (distance)"
          break
        end
        sync()
      end
      $ 3587 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3588 "Direction: Base Z+"
      global move_thread_flag_3588=0
      thread move_thread_3588():
        enter_critical
        move_thread_flag_3588 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3588 = 2
        exit_critical
      end
      move_thread_flag_3588 = 0
      move_thread_han_3588 = run move_thread_3588()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3588 > 1):
          join move_thread_han_3588
          $ 3589 "Until (distance)"
          break
        end
        sync()
      end
      $ 3590 "Wait: 0.3"
      sleep(0.3)
      $ 3591 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3592 "Wait: 0.3"
      sleep(0.3)
      $ 3593 "Loop 2 times"
      Loop_77 = 0
      while (Loop_77 < 2):
        $ 3594 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3595 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3596 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3597 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3598 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_77 = Loop_77 + 1
      end
      $ 3599 "Direction: Base Z+"
      global move_thread_flag_3599=0
      thread move_thread_3599():
        enter_critical
        move_thread_flag_3599 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3599 = 2
        exit_critical
      end
      move_thread_flag_3599 = 0
      move_thread_han_3599 = run move_thread_3599()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3599 > 1):
          join move_thread_han_3599
          $ 3600 "Until (distance)"
          break
        end
        sync()
      end
      $ 3601 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3602 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3603 "Call Quitar_broca"
      Quitar_broca()
      $ 3604 "Call Poner_broca"
      Poner_broca()
    end
    $ 3605 "EF"
    $ 3606 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3607 "bajada_broca≔p[0,0,-0.012,0,0,0]"
    global bajada_broca=p[0,0,-0.012,0,0,0]
    $ 3608 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3609 "barreno_actual≔0"
    global barreno_actual=0
    $ 3610 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3611 "Perforacion"
      $ 3612 "MoveL"
      $ 3613 "internos≔interpolate_pose(Linea4_E, Linea4_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_E_p, Linea4_F_p, barreno_actual/barrenos_menos1)
      $ 3614 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3615 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3616 "bajada_broca≔p[0,0,-0.012,0,0,0]"
      global bajada_broca=p[0,0,-0.012,0,0,0]
      $ 3617 "bajada≔p[0,0,0.012,0,0,0]"
      global bajada=p[0,0,0.012,0,0,0]
      $ 3618 "Direction: Base Z-"
      global move_thread_flag_3618=0
      thread move_thread_3618():
        enter_critical
        move_thread_flag_3618 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.08)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3618 = 2
        exit_critical
      end
      move_thread_flag_3618 = 0
      move_thread_han_3618 = run move_thread_3618()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3618 > 1):
          join move_thread_han_3618
          $ 3619 "Until (distance)"
          break
        end
        sync()
      end
      $ 3620 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3621 "Direction: Base Z+"
      global move_thread_flag_3621=0
      thread move_thread_3621():
        enter_critical
        move_thread_flag_3621 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3621 = 2
        exit_critical
      end
      move_thread_flag_3621 = 0
      move_thread_han_3621 = run move_thread_3621()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3621 > 1):
          join move_thread_han_3621
          $ 3622 "Until (distance)"
          break
        end
        sync()
      end
      $ 3623 "Wait: 0.3"
      sleep(0.3)
      $ 3624 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3625 "Wait: 0.3"
      sleep(0.3)
      $ 3626 "Loop 2 times"
      Loop_81 = 0
      while (Loop_81 < 2):
        $ 3627 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3628 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3629 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3630 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3631 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_81 = Loop_81 + 1
      end
      $ 3632 "Direction: Base Z+"
      global move_thread_flag_3632=0
      thread move_thread_3632():
        enter_critical
        move_thread_flag_3632 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3632 = 2
        exit_critical
      end
      move_thread_flag_3632 = 0
      move_thread_han_3632 = run move_thread_3632()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3632 > 1):
          join move_thread_han_3632
          $ 3633 "Until (distance)"
          break
        end
        sync()
      end
      $ 3634 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3635 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3636 "If barreno_actual>barrenos_menos1"
      if (barreno_actual>barrenos_menos1):
        $ 3637 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 3638 "Call Quitar_broca"
      Quitar_broca()
      $ 3639 "Call Poner_broca"
      Poner_broca()
    end
    $ 3640 "Popup: Linea4 con media Terminada!"
    popup("Linea4 con media Terminada!", "Mensaje", False, False, blocking=True)
    $ 3641 "Broca_3"
    $ 3642 "Linea3"
    $ 3643 "Marcar_puntos"
    $ 3644 "MoveL"
    $ 3645 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3646 "var"
    $ 3647 "barrenos_hechos≔0"
    global barrenos_hechos=0
    $ 3648 "eje7≔3"
    global eje7=3
    $ 3649 "cambiar_broca≔ False "
    global cambiar_broca=  False  
    $ 3650 "iniciando_prog≔ True "
    global iniciando_prog=  True  
    $ 3651 "Call Poner_broca"
    Poner_broca()
    $ 3652 "Linea3_A" "breakAfter"
    movel(Linea3_A_p, a=0.5, v=0.1)
    $ 3653 "Linea3_B" "breakAfter"
    movel(Linea3_B_p, a=0.5, v=0.1)
    $ 3654 "Linea3_C" "breakAfter"
    movel(Linea3_C_p, a=0.5, v=0.1)
    $ 3655 "Linea3_D" "breakAfter"
    movel(Linea3_D_p, a=0.5, v=0.1)
    $ 3656 "Linea3_E" "breakAfter"
    movel(Linea3_E_p, a=0.5, v=0.1)
    $ 3657 "Linea3_F" "breakAfter"
    movel(Linea3_F_p, a=0.5, v=0.1)
    $ 3658 "AB"
    $ 3659 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3660 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3661 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3662 "barreno_actual≔5"
    global barreno_actual=5
    $ 3663 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3664 "Perforacion"
      $ 3665 "MoveL"
      $ 3666 "internos≔interpolate_pose(Linea3_A, Linea3_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_A_p, Linea3_B_p, barreno_actual/barrenos_menos1)
      $ 3667 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3668 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3669 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3670 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3671 "Direction: Base Z-"
      global move_thread_flag_3671=0
      thread move_thread_3671():
        enter_critical
        move_thread_flag_3671 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.083)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3671 = 2
        exit_critical
      end
      move_thread_flag_3671 = 0
      move_thread_han_3671 = run move_thread_3671()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3671 > 1):
          join move_thread_han_3671
          $ 3672 "Until (distance)"
          break
        end
        sync()
      end
      $ 3673 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3674 "Direction: Base Z+"
      global move_thread_flag_3674=0
      thread move_thread_3674():
        enter_critical
        move_thread_flag_3674 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3674 = 2
        exit_critical
      end
      move_thread_flag_3674 = 0
      move_thread_han_3674 = run move_thread_3674()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3674 > 1):
          join move_thread_han_3674
          $ 3675 "Until (distance)"
          break
        end
        sync()
      end
      $ 3676 "Wait: 0.3"
      sleep(0.3)
      $ 3677 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3678 "Wait: 0.3"
      sleep(0.3)
      $ 3679 "Loop 1 times"
      Loop_86 = 0
      while (Loop_86 < 1):
        $ 3680 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3681 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3682 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3683 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3684 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_86 = Loop_86 + 1
      end
      $ 3685 "Direction: Base Z+"
      global move_thread_flag_3685=0
      thread move_thread_3685():
        enter_critical
        move_thread_flag_3685 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3685 = 2
        exit_critical
      end
      move_thread_flag_3685 = 0
      move_thread_han_3685 = run move_thread_3685()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3685 > 1):
          join move_thread_han_3685
          $ 3686 "Until (distance)"
          break
        end
        sync()
      end
      $ 3687 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3688 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3689 "Call Quitar_broca"
      Quitar_broca()
      $ 3690 "Call Poner_broca"
      Poner_broca()
    end
    $ 3691 "CD"
    $ 3692 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3693 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3694 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3695 "barreno_actual≔0"
    global barreno_actual=0
    $ 3696 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3697 "Perforacion"
      $ 3698 "MoveL"
      $ 3699 "internos≔interpolate_pose(Linea3_C, Linea3_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_C_p, Linea3_D_p, barreno_actual/barrenos_menos1)
      $ 3700 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3701 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3702 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3703 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3704 "Direction: Base Z-"
      global move_thread_flag_3704=0
      thread move_thread_3704():
        enter_critical
        move_thread_flag_3704 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.083)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3704 = 2
        exit_critical
      end
      move_thread_flag_3704 = 0
      move_thread_han_3704 = run move_thread_3704()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3704 > 1):
          join move_thread_han_3704
          $ 3705 "Until (distance)"
          break
        end
        sync()
      end
      $ 3706 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3707 "Direction: Base Z+"
      global move_thread_flag_3707=0
      thread move_thread_3707():
        enter_critical
        move_thread_flag_3707 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3707 = 2
        exit_critical
      end
      move_thread_flag_3707 = 0
      move_thread_han_3707 = run move_thread_3707()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3707 > 1):
          join move_thread_han_3707
          $ 3708 "Until (distance)"
          break
        end
        sync()
      end
      $ 3709 "Wait: 0.3"
      sleep(0.3)
      $ 3710 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3711 "Wait: 0.3"
      sleep(0.3)
      $ 3712 "Loop 1 times"
      Loop_91 = 0
      while (Loop_91 < 1):
        $ 3713 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3714 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3715 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3716 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3717 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_91 = Loop_91 + 1
      end
      $ 3718 "Direction: Base Z+"
      global move_thread_flag_3718=0
      thread move_thread_3718():
        enter_critical
        move_thread_flag_3718 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3718 = 2
        exit_critical
      end
      move_thread_flag_3718 = 0
      move_thread_han_3718 = run move_thread_3718()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3718 > 1):
          join move_thread_han_3718
          $ 3719 "Until (distance)"
          break
        end
        sync()
      end
      $ 3720 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3721 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3722 "Call Quitar_broca"
      Quitar_broca()
      $ 3723 "Call Poner_broca"
      Poner_broca()
    end
    $ 3724 "EF"
    $ 3725 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3726 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3727 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3728 "barreno_actual≔0"
    global barreno_actual=0
    $ 3729 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3730 "Perforacion"
      $ 3731 "MoveL"
      $ 3732 "internos≔interpolate_pose(Linea3_E, Linea3_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea3_E_p, Linea3_F_p, barreno_actual/barrenos_menos1)
      $ 3733 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3734 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3735 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3736 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3737 "Direction: Base Z-"
      global move_thread_flag_3737=0
      thread move_thread_3737():
        enter_critical
        move_thread_flag_3737 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.083)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3737 = 2
        exit_critical
      end
      move_thread_flag_3737 = 0
      move_thread_han_3737 = run move_thread_3737()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3737 > 1):
          join move_thread_han_3737
          $ 3738 "Until (distance)"
          break
        end
        sync()
      end
      $ 3739 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3740 "Direction: Base Z+"
      global move_thread_flag_3740=0
      thread move_thread_3740():
        enter_critical
        move_thread_flag_3740 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3740 = 2
        exit_critical
      end
      move_thread_flag_3740 = 0
      move_thread_han_3740 = run move_thread_3740()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3740 > 1):
          join move_thread_han_3740
          $ 3741 "Until (distance)"
          break
        end
        sync()
      end
      $ 3742 "Wait: 0.3"
      sleep(0.3)
      $ 3743 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3744 "Wait: 0.3"
      sleep(0.3)
      $ 3745 "Loop 1 times"
      Loop_100 = 0
      while (Loop_100 < 1):
        $ 3746 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3747 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3748 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3749 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3750 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_100 = Loop_100 + 1
      end
      $ 3751 "Direction: Base Z+"
      global move_thread_flag_3751=0
      thread move_thread_3751():
        enter_critical
        move_thread_flag_3751 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3751 = 2
        exit_critical
      end
      move_thread_flag_3751 = 0
      move_thread_han_3751 = run move_thread_3751()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3751 > 1):
          join move_thread_han_3751
          $ 3752 "Until (distance)"
          break
        end
        sync()
      end
      $ 3753 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3754 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3755 "Call Quitar_broca"
      Quitar_broca()
      $ 3756 "Call Poner_broca"
      Poner_broca()
    end
    $ 3757 "Popup: Linea3 con full Terminada!"
    popup("Linea3 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 3758 "Linea4"
    $ 3759 "Marcar_puntos"
    $ 3760 "MoveL"
    $ 3761 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 3762 "Linea4_A" "breakAfter"
    movel(Linea4_A_p, a=0.5, v=0.1)
    $ 3763 "Linea4_B" "breakAfter"
    movel(Linea4_B_p, a=0.5, v=0.1)
    $ 3764 "Linea4_C" "breakAfter"
    movel(Linea4_C_p, a=0.5, v=0.1)
    $ 3765 "Linea4_D" "breakAfter"
    movel(Linea4_D_p, a=0.5, v=0.1)
    $ 3766 "Linea4_E" "breakAfter"
    movel(Linea4_E_p, a=0.5, v=0.1)
    $ 3767 "Linea4_F" "breakAfter"
    movel(Linea4_F_p, a=0.5, v=0.1)
    $ 3768 "AB"
    $ 3769 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3770 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3771 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3772 "barreno_actual≔0"
    global barreno_actual=0
    $ 3773 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3774 "Perforacion"
      $ 3775 "MoveL"
      $ 3776 "internos≔interpolate_pose(Linea4_A, Linea4_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_A_p, Linea4_B_p, barreno_actual/barrenos_menos1)
      $ 3777 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3778 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3779 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3780 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3781 "Direction: Base Z-"
      global move_thread_flag_3781=0
      thread move_thread_3781():
        enter_critical
        move_thread_flag_3781 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.083)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3781 = 2
        exit_critical
      end
      move_thread_flag_3781 = 0
      move_thread_han_3781 = run move_thread_3781()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3781 > 1):
          join move_thread_han_3781
          $ 3782 "Until (distance)"
          break
        end
        sync()
      end
      $ 3783 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3784 "Direction: Base Z+"
      global move_thread_flag_3784=0
      thread move_thread_3784():
        enter_critical
        move_thread_flag_3784 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3784 = 2
        exit_critical
      end
      move_thread_flag_3784 = 0
      move_thread_han_3784 = run move_thread_3784()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3784 > 1):
          join move_thread_han_3784
          $ 3785 "Until (distance)"
          break
        end
        sync()
      end
      $ 3786 "Wait: 0.3"
      sleep(0.3)
      $ 3787 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3788 "Wait: 0.3"
      sleep(0.3)
      $ 3789 "Loop 1 times"
      Loop_120 = 0
      while (Loop_120 < 1):
        $ 3790 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3791 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3792 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3793 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3794 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_120 = Loop_120 + 1
      end
      $ 3795 "Direction: Base Z+"
      global move_thread_flag_3795=0
      thread move_thread_3795():
        enter_critical
        move_thread_flag_3795 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3795 = 2
        exit_critical
      end
      move_thread_flag_3795 = 0
      move_thread_han_3795 = run move_thread_3795()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3795 > 1):
          join move_thread_han_3795
          $ 3796 "Until (distance)"
          break
        end
        sync()
      end
      $ 3797 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3798 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3799 "Call Quitar_broca"
      Quitar_broca()
      $ 3800 "Call Poner_broca"
      Poner_broca()
    end
    $ 3801 "CD"
    $ 3802 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3803 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3804 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3805 "barreno_actual≔0"
    global barreno_actual=0
    $ 3806 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3807 "Perforacion"
      $ 3808 "MoveL"
      $ 3809 "internos≔interpolate_pose(Linea4_C, Linea4_D, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_C_p, Linea4_D_p, barreno_actual/barrenos_menos1)
      $ 3810 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3811 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3812 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3813 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3814 "Direction: Base Z-"
      global move_thread_flag_3814=0
      thread move_thread_3814():
        enter_critical
        move_thread_flag_3814 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.083)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3814 = 2
        exit_critical
      end
      move_thread_flag_3814 = 0
      move_thread_han_3814 = run move_thread_3814()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3814 > 1):
          join move_thread_han_3814
          $ 3815 "Until (distance)"
          break
        end
        sync()
      end
      $ 3816 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3817 "Direction: Base Z+"
      global move_thread_flag_3817=0
      thread move_thread_3817():
        enter_critical
        move_thread_flag_3817 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3817 = 2
        exit_critical
      end
      move_thread_flag_3817 = 0
      move_thread_han_3817 = run move_thread_3817()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3817 > 1):
          join move_thread_han_3817
          $ 3818 "Until (distance)"
          break
        end
        sync()
      end
      $ 3819 "Wait: 0.3"
      sleep(0.3)
      $ 3820 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3821 "Wait: 0.3"
      sleep(0.3)
      $ 3822 "Loop 1 times"
      Loop_123 = 0
      while (Loop_123 < 1):
        $ 3823 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3824 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3825 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3826 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3827 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_123 = Loop_123 + 1
      end
      $ 3828 "Direction: Base Z+"
      global move_thread_flag_3828=0
      thread move_thread_3828():
        enter_critical
        move_thread_flag_3828 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3828 = 2
        exit_critical
      end
      move_thread_flag_3828 = 0
      move_thread_han_3828 = run move_thread_3828()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3828 > 1):
          join move_thread_han_3828
          $ 3829 "Until (distance)"
          break
        end
        sync()
      end
      $ 3830 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3831 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3832 "Call Quitar_broca"
      Quitar_broca()
      $ 3833 "Call Poner_broca"
      Poner_broca()
    end
    $ 3834 "EF"
    $ 3835 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 3836 "bajada_broca≔p[0,0,-0.024,0,0,0]"
    global bajada_broca=p[0,0,-0.024,0,0,0]
    $ 3837 "barrenos_menos1≔8"
    global barrenos_menos1=8
    $ 3838 "barreno_actual≔0"
    global barreno_actual=0
    $ 3839 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 3840 "Perforacion"
      $ 3841 "MoveL"
      $ 3842 "internos≔interpolate_pose(Linea4_E, Linea4_F, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea4_E_p, Linea4_F_p, barreno_actual/barrenos_menos1)
      $ 3843 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 3844 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 3845 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 3846 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 3847 "Direction: Base Z-"
      global move_thread_flag_3847=0
      thread move_thread_3847():
        enter_critical
        move_thread_flag_3847 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.083)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3847 = 2
        exit_critical
      end
      move_thread_flag_3847 = 0
      move_thread_han_3847 = run move_thread_3847()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3847 > 1):
          join move_thread_han_3847
          $ 3848 "Until (distance)"
          break
        end
        sync()
      end
      $ 3849 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 3850 "Direction: Base Z+"
      global move_thread_flag_3850=0
      thread move_thread_3850():
        enter_critical
        move_thread_flag_3850 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
        movel(towardsPos, a=0.005, v=0.003)
        move_thread_flag_3850 = 2
        exit_critical
      end
      move_thread_flag_3850 = 0
      move_thread_han_3850 = run move_thread_3850()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3850 > 1):
          join move_thread_han_3850
          $ 3851 "Until (distance)"
          break
        end
        sync()
      end
      $ 3852 "Wait: 0.3"
      sleep(0.3)
      $ 3853 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 3854 "Wait: 0.3"
      sleep(0.3)
      $ 3855 "Loop 1 times"
      Loop_125 = 0
      while (Loop_125 < 1):
        $ 3856 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 3857 "bajar" "breakAfter"
        movel(bajar, a=0.005, v=0.001)
        $ 3858 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 3859 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.01)
        $ 3860 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_125 = Loop_125 + 1
      end
      $ 3861 "Direction: Base Z+"
      global move_thread_flag_3861=0
      thread move_thread_3861():
        enter_critical
        move_thread_flag_3861 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.06)
        movel(towardsPos, a=0.035, v=0.03)
        move_thread_flag_3861 = 2
        exit_critical
      end
      move_thread_flag_3861 = 0
      move_thread_han_3861 = run move_thread_3861()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_3861 > 1):
          join move_thread_han_3861
          $ 3862 "Until (distance)"
          break
        end
        sync()
      end
      $ 3863 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 3864 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
      $ 3865 "If barreno_actual>barrenos_menos1"
      if (barreno_actual>barrenos_menos1):
        $ 3866 "cambiar_broca≔ True "
        global cambiar_broca=  True  
      end
      $ 3867 "Call Quitar_broca"
      Quitar_broca()
      $ 3868 "Call Poner_broca"
      Poner_broca()
    end
    $ 3869 "Popup: Linea4 con full Terminada!"
    popup("Linea4 con full Terminada!", "Mensaje", False, False, blocking=True)
    $ 4090 "720"
    $ 4091 "Broca_1"
    $ 4092 "Linea19"
    $ 4093 "Marcar_puntos"
    $ 4094 "MoveL"
    $ 4095 "Home3" "breakAfter"
    movel(Home3_p, a=0.5, v=0.1)
    $ 4096 "Linea19_A" "breakAfter"
    movel(Linea19_A_p, a=0.5, v=0.1)
    $ 4097 "bajada_comprobacion"
    $ 4098 "Direction: Base Z-"
    global move_thread_flag_4098=0
    thread move_thread_4098():
      enter_critical
      move_thread_flag_4098 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4098 = 2
      exit_critical
    end
    move_thread_flag_4098 = 0
    move_thread_han_4098 = run move_thread_4098()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4098 > 1):
        join move_thread_han_4098
        $ 4099 "Until (distance)"
        break
      end
      sync()
    end
    $ 4100 "Direction: Base Z-"
    global move_thread_flag_4100=0
    thread move_thread_4100():
      enter_critical
      move_thread_flag_4100 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4100 = 2
      exit_critical
    end
    move_thread_flag_4100 = 0
    move_thread_han_4100 = run move_thread_4100()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4100
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4101 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4102 "Direction: Base Z+"
    global move_thread_flag_4102=0
    thread move_thread_4102():
      enter_critical
      move_thread_flag_4102 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4102 = 2
      exit_critical
    end
    move_thread_flag_4102 = 0
    move_thread_han_4102 = run move_thread_4102()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4102 > 1):
        join move_thread_han_4102
        $ 4103 "Until (distance)"
        break
      end
      sync()
    end
    $ 4104 "Linea19_B" "breakAfter"
    movel(Linea19_B_p, a=0.5, v=0.1)
    $ 4105 "bajada_comprobacion"
    $ 4106 "Direction: Base Z-"
    global move_thread_flag_4106=0
    thread move_thread_4106():
      enter_critical
      move_thread_flag_4106 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4106 = 2
      exit_critical
    end
    move_thread_flag_4106 = 0
    move_thread_han_4106 = run move_thread_4106()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4106 > 1):
        join move_thread_han_4106
        $ 4107 "Until (distance)"
        break
      end
      sync()
    end
    $ 4108 "Direction: Base Z-"
    global move_thread_flag_4108=0
    thread move_thread_4108():
      enter_critical
      move_thread_flag_4108 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4108 = 2
      exit_critical
    end
    move_thread_flag_4108 = 0
    move_thread_han_4108 = run move_thread_4108()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4108
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4109 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4110 "Direction: Base Z+"
    global move_thread_flag_4110=0
    thread move_thread_4110():
      enter_critical
      move_thread_flag_4110 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4110 = 2
      exit_critical
    end
    move_thread_flag_4110 = 0
    move_thread_han_4110 = run move_thread_4110()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4110 > 1):
        join move_thread_han_4110
        $ 4111 "Until (distance)"
        break
      end
      sync()
    end
    $ 4112 "AB"
    $ 4113 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4114 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4115 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 4116 "barreno_actual≔0"
    global barreno_actual=0
    $ 4117 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4118 "Perforacion"
      $ 4119 "MoveL"
      $ 4120 "internos≔interpolate_pose(Linea19_A, Linea19_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea19_A_p, Linea19_B_p, barreno_actual/barrenos_menos1)
      $ 4121 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4122 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4123 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4124 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4125 "Direction: Base Z-"
      global move_thread_flag_4125=0
      thread move_thread_4125():
        enter_critical
        move_thread_flag_4125 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4125 = 2
        exit_critical
      end
      move_thread_flag_4125 = 0
      move_thread_han_4125 = run move_thread_4125()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4125 > 1):
          join move_thread_han_4125
          $ 4126 "Until (distance)"
          break
        end
        sync()
      end
      $ 4127 "Direction: Base Z-"
      global move_thread_flag_4127=0
      thread move_thread_4127():
        enter_critical
        move_thread_flag_4127 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4127 = 2
        exit_critical
      end
      move_thread_flag_4127 = 0
      move_thread_han_4127 = run move_thread_4127()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4127
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4128 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4129 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4130 "Direction: Base Z+"
      global move_thread_flag_4130=0
      thread move_thread_4130():
        enter_critical
        move_thread_flag_4130 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4130 = 2
        exit_critical
      end
      move_thread_flag_4130 = 0
      move_thread_han_4130 = run move_thread_4130()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4130 > 1):
          join move_thread_han_4130
          $ 4131 "Until (distance)"
          break
        end
        sync()
      end
      $ 4132 "Wait: 0.3"
      sleep(0.3)
      $ 4133 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4134 "Wait: 0.3"
      sleep(0.3)
      $ 4135 "Loop 1 times"
      Loop_47 = 0
      while (Loop_47 < 1):
        $ 4136 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4137 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4138 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4139 "Direction: Base Z+"
        global move_thread_flag_4139=0
        thread move_thread_4139():
          enter_critical
          move_thread_flag_4139 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4139 = 2
          exit_critical
        end
        move_thread_flag_4139 = 0
        move_thread_han_4139 = run move_thread_4139()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4139 > 1):
            join move_thread_han_4139
            $ 4140 "Until (distance)"
            break
          end
          sync()
        end
        $ 4141 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4142 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4143 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_47 = Loop_47 + 1
      end
      $ 4144 "Direction: Base Z+"
      global move_thread_flag_4144=0
      thread move_thread_4144():
        enter_critical
        move_thread_flag_4144 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4144 = 2
        exit_critical
      end
      move_thread_flag_4144 = 0
      move_thread_han_4144 = run move_thread_4144()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4144 > 1):
          join move_thread_han_4144
          $ 4145 "Until (distance)"
          break
        end
        sync()
      end
      $ 4146 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4147 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4150 "Popup: Linea19 con chica Terminada!"
    popup("Linea19 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4151 "Linea20"
    $ 4152 "Marcar_puntos"
    $ 4153 "MoveL"
    $ 4154 "Linea20_A" "breakAfter"
    movel(Linea20_A_p, a=0.5, v=0.1)
    $ 4155 "bajada_comprobacion"
    $ 4156 "Direction: Base Z-"
    global move_thread_flag_4156=0
    thread move_thread_4156():
      enter_critical
      move_thread_flag_4156 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4156 = 2
      exit_critical
    end
    move_thread_flag_4156 = 0
    move_thread_han_4156 = run move_thread_4156()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4156 > 1):
        join move_thread_han_4156
        $ 4157 "Until (distance)"
        break
      end
      sync()
    end
    $ 4158 "Direction: Base Z-"
    global move_thread_flag_4158=0
    thread move_thread_4158():
      enter_critical
      move_thread_flag_4158 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4158 = 2
      exit_critical
    end
    move_thread_flag_4158 = 0
    move_thread_han_4158 = run move_thread_4158()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4158
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4159 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4160 "Direction: Base Z+"
    global move_thread_flag_4160=0
    thread move_thread_4160():
      enter_critical
      move_thread_flag_4160 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4160 = 2
      exit_critical
    end
    move_thread_flag_4160 = 0
    move_thread_han_4160 = run move_thread_4160()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4160 > 1):
        join move_thread_han_4160
        $ 4161 "Until (distance)"
        break
      end
      sync()
    end
    $ 4162 "Linea20_B" "breakAfter"
    movel(Linea20_B_p, a=0.5, v=0.1)
    $ 4163 "bajada_comprobacion"
    $ 4164 "Direction: Base Z-"
    global move_thread_flag_4164=0
    thread move_thread_4164():
      enter_critical
      move_thread_flag_4164 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4164 = 2
      exit_critical
    end
    move_thread_flag_4164 = 0
    move_thread_han_4164 = run move_thread_4164()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4164 > 1):
        join move_thread_han_4164
        $ 4165 "Until (distance)"
        break
      end
      sync()
    end
    $ 4166 "Direction: Base Z-"
    global move_thread_flag_4166=0
    thread move_thread_4166():
      enter_critical
      move_thread_flag_4166 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4166 = 2
      exit_critical
    end
    move_thread_flag_4166 = 0
    move_thread_han_4166 = run move_thread_4166()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4166
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4167 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4168 "Direction: Base Z+"
    global move_thread_flag_4168=0
    thread move_thread_4168():
      enter_critical
      move_thread_flag_4168 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4168 = 2
      exit_critical
    end
    move_thread_flag_4168 = 0
    move_thread_han_4168 = run move_thread_4168()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4168 > 1):
        join move_thread_han_4168
        $ 4169 "Until (distance)"
        break
      end
      sync()
    end
    $ 4170 "AB"
    $ 4171 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4172 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4173 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 4174 "barreno_actual≔0"
    global barreno_actual=0
    $ 4175 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4176 "Perforacion"
      $ 4177 "MoveL"
      $ 4178 "internos≔interpolate_pose(Linea20_A, Linea20_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea20_A_p, Linea20_B_p, barreno_actual/barrenos_menos1)
      $ 4179 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4180 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4181 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4182 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4183 "Direction: Base Z-"
      global move_thread_flag_4183=0
      thread move_thread_4183():
        enter_critical
        move_thread_flag_4183 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4183 = 2
        exit_critical
      end
      move_thread_flag_4183 = 0
      move_thread_han_4183 = run move_thread_4183()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4183 > 1):
          join move_thread_han_4183
          $ 4184 "Until (distance)"
          break
        end
        sync()
      end
      $ 4185 "Direction: Base Z-"
      global move_thread_flag_4185=0
      thread move_thread_4185():
        enter_critical
        move_thread_flag_4185 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4185 = 2
        exit_critical
      end
      move_thread_flag_4185 = 0
      move_thread_han_4185 = run move_thread_4185()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4185
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4186 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4187 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4188 "Direction: Base Z+"
      global move_thread_flag_4188=0
      thread move_thread_4188():
        enter_critical
        move_thread_flag_4188 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4188 = 2
        exit_critical
      end
      move_thread_flag_4188 = 0
      move_thread_han_4188 = run move_thread_4188()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4188 > 1):
          join move_thread_han_4188
          $ 4189 "Until (distance)"
          break
        end
        sync()
      end
      $ 4190 "Wait: 0.3"
      sleep(0.3)
      $ 4191 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4192 "Wait: 0.3"
      sleep(0.3)
      $ 4193 "Loop 1 times"
      Loop_57 = 0
      while (Loop_57 < 1):
        $ 4194 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4195 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4196 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4197 "Direction: Base Z+"
        global move_thread_flag_4197=0
        thread move_thread_4197():
          enter_critical
          move_thread_flag_4197 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4197 = 2
          exit_critical
        end
        move_thread_flag_4197 = 0
        move_thread_han_4197 = run move_thread_4197()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4197 > 1):
            join move_thread_han_4197
            $ 4198 "Until (distance)"
            break
          end
          sync()
        end
        $ 4199 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4200 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4201 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_57 = Loop_57 + 1
      end
      $ 4202 "Direction: Base Z+"
      global move_thread_flag_4202=0
      thread move_thread_4202():
        enter_critical
        move_thread_flag_4202 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4202 = 2
        exit_critical
      end
      move_thread_flag_4202 = 0
      move_thread_han_4202 = run move_thread_4202()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4202 > 1):
          join move_thread_han_4202
          $ 4203 "Until (distance)"
          break
        end
        sync()
      end
      $ 4204 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4205 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4208 "Popup: Linea20 con chica Terminada!"
    popup("Linea20 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4209 "Linea21"
    $ 4210 "Marcar_puntos"
    $ 4211 "MoveL"
    $ 4212 "Linea21_A" "breakAfter"
    movel(Linea21_A_p, a=0.5, v=0.1)
    $ 4213 "bajada_comprobacion"
    $ 4214 "Direction: Base Z-"
    global move_thread_flag_4214=0
    thread move_thread_4214():
      enter_critical
      move_thread_flag_4214 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4214 = 2
      exit_critical
    end
    move_thread_flag_4214 = 0
    move_thread_han_4214 = run move_thread_4214()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4214 > 1):
        join move_thread_han_4214
        $ 4215 "Until (distance)"
        break
      end
      sync()
    end
    $ 4216 "Direction: Base Z-"
    global move_thread_flag_4216=0
    thread move_thread_4216():
      enter_critical
      move_thread_flag_4216 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4216 = 2
      exit_critical
    end
    move_thread_flag_4216 = 0
    move_thread_han_4216 = run move_thread_4216()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4216
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4217 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4218 "Direction: Base Z+"
    global move_thread_flag_4218=0
    thread move_thread_4218():
      enter_critical
      move_thread_flag_4218 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4218 = 2
      exit_critical
    end
    move_thread_flag_4218 = 0
    move_thread_han_4218 = run move_thread_4218()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4218 > 1):
        join move_thread_han_4218
        $ 4219 "Until (distance)"
        break
      end
      sync()
    end
    $ 4221 "Linea21_AB" "breakAfter"
    movel(Linea21_AB_p, a=0.5, v=0.1)
    $ 4222 "bajada_comprobacion"
    $ 4223 "Direction: Base Z-"
    global move_thread_flag_4223=0
    thread move_thread_4223():
      enter_critical
      move_thread_flag_4223 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4223 = 2
      exit_critical
    end
    move_thread_flag_4223 = 0
    move_thread_han_4223 = run move_thread_4223()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4223 > 1):
        join move_thread_han_4223
        $ 4224 "Until (distance)"
        break
      end
      sync()
    end
    $ 4225 "Direction: Base Z-"
    global move_thread_flag_4225=0
    thread move_thread_4225():
      enter_critical
      move_thread_flag_4225 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4225 = 2
      exit_critical
    end
    move_thread_flag_4225 = 0
    move_thread_han_4225 = run move_thread_4225()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4225
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4226 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4227 "Direction: Base Z+"
    global move_thread_flag_4227=0
    thread move_thread_4227():
      enter_critical
      move_thread_flag_4227 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4227 = 2
      exit_critical
    end
    move_thread_flag_4227 = 0
    move_thread_han_4227 = run move_thread_4227()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4227 > 1):
        join move_thread_han_4227
        $ 4228 "Until (distance)"
        break
      end
      sync()
    end
    $ 4229 "AB"
    $ 4230 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4231 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4232 "barrenos_menos1≔12"
    global barrenos_menos1=12
    $ 4233 "barreno_actual≔0"
    global barreno_actual=0
    $ 4234 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4235 "Perforacion"
      $ 4236 "MoveL"
      $ 4237 "If barreno_actual≟6"
      if (barreno_actual == 6):
        $ 4238 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 4239 "internos≔interpolate_pose(Linea21_A, Linea21_AB, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea21_A_p, Linea21_AB_p, barreno_actual/barrenos_menos1)
      $ 4240 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4241 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4242 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4243 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4244 "Direction: Base Z-"
      global move_thread_flag_4244=0
      thread move_thread_4244():
        enter_critical
        move_thread_flag_4244 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4244 = 2
        exit_critical
      end
      move_thread_flag_4244 = 0
      move_thread_han_4244 = run move_thread_4244()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4244 > 1):
          join move_thread_han_4244
          $ 4245 "Until (distance)"
          break
        end
        sync()
      end
      $ 4246 "Direction: Base Z-"
      global move_thread_flag_4246=0
      thread move_thread_4246():
        enter_critical
        move_thread_flag_4246 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4246 = 2
        exit_critical
      end
      move_thread_flag_4246 = 0
      move_thread_han_4246 = run move_thread_4246()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4246
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4247 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4248 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4249 "Direction: Base Z+"
      global move_thread_flag_4249=0
      thread move_thread_4249():
        enter_critical
        move_thread_flag_4249 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4249 = 2
        exit_critical
      end
      move_thread_flag_4249 = 0
      move_thread_han_4249 = run move_thread_4249()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4249 > 1):
          join move_thread_han_4249
          $ 4250 "Until (distance)"
          break
        end
        sync()
      end
      $ 4251 "Wait: 0.3"
      sleep(0.3)
      $ 4252 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4253 "Wait: 0.3"
      sleep(0.3)
      $ 4254 "Loop 1 times"
      Loop_76 = 0
      while (Loop_76 < 1):
        $ 4255 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4256 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4257 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4258 "Direction: Base Z+"
        global move_thread_flag_4258=0
        thread move_thread_4258():
          enter_critical
          move_thread_flag_4258 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4258 = 2
          exit_critical
        end
        move_thread_flag_4258 = 0
        move_thread_han_4258 = run move_thread_4258()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4258 > 1):
            join move_thread_han_4258
            $ 4259 "Until (distance)"
            break
          end
          sync()
        end
        $ 4260 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4261 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4262 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_76 = Loop_76 + 1
      end
      $ 4263 "Direction: Base Z+"
      global move_thread_flag_4263=0
      thread move_thread_4263():
        enter_critical
        move_thread_flag_4263 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4263 = 2
        exit_critical
      end
      move_thread_flag_4263 = 0
      move_thread_han_4263 = run move_thread_4263()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4263 > 1):
          join move_thread_han_4263
          $ 4264 "Until (distance)"
          break
        end
        sync()
      end
      $ 4265 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4266 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4269 "Popup: Linea21 con chica Terminada!"
    popup("Linea21 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4270 "Linea21B"
    $ 4271 "Marcar_puntos"
    $ 4272 "MoveL"
    $ 4274 "Linea21_BA" "breakAfter"
    movel(Linea21_BA_p, a=0.5, v=0.1)
    $ 4275 "bajada_comprobacion"
    $ 4276 "Direction: Base Z-"
    global move_thread_flag_4276=0
    thread move_thread_4276():
      enter_critical
      move_thread_flag_4276 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4276 = 2
      exit_critical
    end
    move_thread_flag_4276 = 0
    move_thread_han_4276 = run move_thread_4276()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4276 > 1):
        join move_thread_han_4276
        $ 4277 "Until (distance)"
        break
      end
      sync()
    end
    $ 4278 "Direction: Base Z-"
    global move_thread_flag_4278=0
    thread move_thread_4278():
      enter_critical
      move_thread_flag_4278 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4278 = 2
      exit_critical
    end
    move_thread_flag_4278 = 0
    move_thread_han_4278 = run move_thread_4278()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4278
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4279 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4280 "Direction: Base Z+"
    global move_thread_flag_4280=0
    thread move_thread_4280():
      enter_critical
      move_thread_flag_4280 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4280 = 2
      exit_critical
    end
    move_thread_flag_4280 = 0
    move_thread_han_4280 = run move_thread_4280()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4280 > 1):
        join move_thread_han_4280
        $ 4281 "Until (distance)"
        break
      end
      sync()
    end
    $ 4283 "Linea21_B" "breakAfter"
    movel(Linea21_B_p, a=0.5, v=0.1)
    $ 4284 "bajada_comprobacion"
    $ 4285 "Direction: Base Z-"
    global move_thread_flag_4285=0
    thread move_thread_4285():
      enter_critical
      move_thread_flag_4285 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4285 = 2
      exit_critical
    end
    move_thread_flag_4285 = 0
    move_thread_han_4285 = run move_thread_4285()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4285 > 1):
        join move_thread_han_4285
        $ 4286 "Until (distance)"
        break
      end
      sync()
    end
    $ 4287 "Direction: Base Z-"
    global move_thread_flag_4287=0
    thread move_thread_4287():
      enter_critical
      move_thread_flag_4287 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4287 = 2
      exit_critical
    end
    move_thread_flag_4287 = 0
    move_thread_han_4287 = run move_thread_4287()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4287
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4288 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4289 "Direction: Base Z+"
    global move_thread_flag_4289=0
    thread move_thread_4289():
      enter_critical
      move_thread_flag_4289 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4289 = 2
      exit_critical
    end
    move_thread_flag_4289 = 0
    move_thread_han_4289 = run move_thread_4289()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4289 > 1):
        join move_thread_han_4289
        $ 4290 "Until (distance)"
        break
      end
      sync()
    end
    $ 4291 "AB"
    $ 4292 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4293 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4294 "barrenos_menos1≔5"
    global barrenos_menos1=5
    $ 4295 "barreno_actual≔0"
    global barreno_actual=0
    $ 4296 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4297 "Perforacion"
      $ 4298 "MoveL"
      $ 4301 "internos≔interpolate_pose(Linea21_BA, Linea21_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea21_BA_p, Linea21_B_p, barreno_actual/barrenos_menos1)
      $ 4302 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4303 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4304 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4305 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4306 "Direction: Base Z-"
      global move_thread_flag_4306=0
      thread move_thread_4306():
        enter_critical
        move_thread_flag_4306 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4306 = 2
        exit_critical
      end
      move_thread_flag_4306 = 0
      move_thread_han_4306 = run move_thread_4306()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4306 > 1):
          join move_thread_han_4306
          $ 4307 "Until (distance)"
          break
        end
        sync()
      end
      $ 4308 "Direction: Base Z-"
      global move_thread_flag_4308=0
      thread move_thread_4308():
        enter_critical
        move_thread_flag_4308 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4308 = 2
        exit_critical
      end
      move_thread_flag_4308 = 0
      move_thread_han_4308 = run move_thread_4308()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4308
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4309 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4310 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4311 "Direction: Base Z+"
      global move_thread_flag_4311=0
      thread move_thread_4311():
        enter_critical
        move_thread_flag_4311 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4311 = 2
        exit_critical
      end
      move_thread_flag_4311 = 0
      move_thread_han_4311 = run move_thread_4311()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4311 > 1):
          join move_thread_han_4311
          $ 4312 "Until (distance)"
          break
        end
        sync()
      end
      $ 4313 "Wait: 0.3"
      sleep(0.3)
      $ 4314 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4315 "Wait: 0.3"
      sleep(0.3)
      $ 4316 "Loop 1 times"
      Loop_32 = 0
      while (Loop_32 < 1):
        $ 4317 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4318 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4319 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4320 "Direction: Base Z+"
        global move_thread_flag_4320=0
        thread move_thread_4320():
          enter_critical
          move_thread_flag_4320 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4320 = 2
          exit_critical
        end
        move_thread_flag_4320 = 0
        move_thread_han_4320 = run move_thread_4320()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4320 > 1):
            join move_thread_han_4320
            $ 4321 "Until (distance)"
            break
          end
          sync()
        end
        $ 4322 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4323 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4324 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_32 = Loop_32 + 1
      end
      $ 4325 "Direction: Base Z+"
      global move_thread_flag_4325=0
      thread move_thread_4325():
        enter_critical
        move_thread_flag_4325 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4325 = 2
        exit_critical
      end
      move_thread_flag_4325 = 0
      move_thread_han_4325 = run move_thread_4325()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4325 > 1):
          join move_thread_han_4325
          $ 4326 "Until (distance)"
          break
        end
        sync()
      end
      $ 4327 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4328 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4331 "Popup: Linea21B con chica Terminada!"
    popup("Linea21B con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4332 "Linea22"
    $ 4333 "Marcar_puntos"
    $ 4334 "MoveL"
    $ 4335 "Linea22_A" "breakAfter"
    movel(Linea22_A_p, a=0.5, v=0.1)
    $ 4336 "bajada_comprobacion"
    $ 4337 "Direction: Base Z-"
    global move_thread_flag_4337=0
    thread move_thread_4337():
      enter_critical
      move_thread_flag_4337 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4337 = 2
      exit_critical
    end
    move_thread_flag_4337 = 0
    move_thread_han_4337 = run move_thread_4337()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4337 > 1):
        join move_thread_han_4337
        $ 4338 "Until (distance)"
        break
      end
      sync()
    end
    $ 4339 "Direction: Base Z-"
    global move_thread_flag_4339=0
    thread move_thread_4339():
      enter_critical
      move_thread_flag_4339 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4339 = 2
      exit_critical
    end
    move_thread_flag_4339 = 0
    move_thread_han_4339 = run move_thread_4339()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4339
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4340 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4341 "Direction: Base Z+"
    global move_thread_flag_4341=0
    thread move_thread_4341():
      enter_critical
      move_thread_flag_4341 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4341 = 2
      exit_critical
    end
    move_thread_flag_4341 = 0
    move_thread_han_4341 = run move_thread_4341()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4341 > 1):
        join move_thread_han_4341
        $ 4342 "Until (distance)"
        break
      end
      sync()
    end
    $ 4343 "Linea22_B" "breakAfter"
    movel(Linea22_B_p, a=0.5, v=0.1)
    $ 4344 "bajada_comprobacion"
    $ 4345 "Direction: Base Z-"
    global move_thread_flag_4345=0
    thread move_thread_4345():
      enter_critical
      move_thread_flag_4345 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4345 = 2
      exit_critical
    end
    move_thread_flag_4345 = 0
    move_thread_han_4345 = run move_thread_4345()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4345 > 1):
        join move_thread_han_4345
        $ 4346 "Until (distance)"
        break
      end
      sync()
    end
    $ 4347 "Direction: Base Z-"
    global move_thread_flag_4347=0
    thread move_thread_4347():
      enter_critical
      move_thread_flag_4347 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4347 = 2
      exit_critical
    end
    move_thread_flag_4347 = 0
    move_thread_han_4347 = run move_thread_4347()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4347
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4348 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4349 "Direction: Base Z+"
    global move_thread_flag_4349=0
    thread move_thread_4349():
      enter_critical
      move_thread_flag_4349 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4349 = 2
      exit_critical
    end
    move_thread_flag_4349 = 0
    move_thread_han_4349 = run move_thread_4349()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4349 > 1):
        join move_thread_han_4349
        $ 4350 "Until (distance)"
        break
      end
      sync()
    end
    $ 4351 "AB"
    $ 4352 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4353 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4354 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 4355 "barreno_actual≔0"
    global barreno_actual=0
    $ 4356 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4357 "Perforacion"
      $ 4358 "MoveL"
      $ 4361 "internos≔interpolate_pose(Linea22_A, Linea22_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea22_A_p, Linea22_B_p, barreno_actual/barrenos_menos1)
      $ 4362 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4363 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4364 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4365 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4366 "Direction: Base Z-"
      global move_thread_flag_4366=0
      thread move_thread_4366():
        enter_critical
        move_thread_flag_4366 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4366 = 2
        exit_critical
      end
      move_thread_flag_4366 = 0
      move_thread_han_4366 = run move_thread_4366()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4366 > 1):
          join move_thread_han_4366
          $ 4367 "Until (distance)"
          break
        end
        sync()
      end
      $ 4368 "Direction: Base Z-"
      global move_thread_flag_4368=0
      thread move_thread_4368():
        enter_critical
        move_thread_flag_4368 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4368 = 2
        exit_critical
      end
      move_thread_flag_4368 = 0
      move_thread_han_4368 = run move_thread_4368()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4368
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4369 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4370 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4371 "Direction: Base Z+"
      global move_thread_flag_4371=0
      thread move_thread_4371():
        enter_critical
        move_thread_flag_4371 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4371 = 2
        exit_critical
      end
      move_thread_flag_4371 = 0
      move_thread_han_4371 = run move_thread_4371()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4371 > 1):
          join move_thread_han_4371
          $ 4372 "Until (distance)"
          break
        end
        sync()
      end
      $ 4373 "Wait: 0.3"
      sleep(0.3)
      $ 4374 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4375 "Wait: 0.3"
      sleep(0.3)
      $ 4376 "Loop 1 times"
      Loop_84 = 0
      while (Loop_84 < 1):
        $ 4377 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4378 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4379 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4380 "Direction: Base Z+"
        global move_thread_flag_4380=0
        thread move_thread_4380():
          enter_critical
          move_thread_flag_4380 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4380 = 2
          exit_critical
        end
        move_thread_flag_4380 = 0
        move_thread_han_4380 = run move_thread_4380()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4380 > 1):
            join move_thread_han_4380
            $ 4381 "Until (distance)"
            break
          end
          sync()
        end
        $ 4382 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4383 "subir" "breakAfter"
        movel(subir, a=0.01, v=0.005)
        $ 4384 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_84 = Loop_84 + 1
      end
      $ 4385 "Direction: Base Z+"
      global move_thread_flag_4385=0
      thread move_thread_4385():
        enter_critical
        move_thread_flag_4385 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4385 = 2
        exit_critical
      end
      move_thread_flag_4385 = 0
      move_thread_han_4385 = run move_thread_4385()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4385 > 1):
          join move_thread_han_4385
          $ 4386 "Until (distance)"
          break
        end
        sync()
      end
      $ 4387 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4388 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4391 "Popup: Linea22 con chica Terminada!"
    popup("Linea22 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4392 "Linea23"
    $ 4393 "Marcar_puntos"
    $ 4394 "MoveL"
    $ 4395 "Linea23_A" "breakAfter"
    movel(Linea23_A_p, a=0.5, v=0.1)
    $ 4396 "bajada_comprobacion"
    $ 4397 "Direction: Base Z-"
    global move_thread_flag_4397=0
    thread move_thread_4397():
      enter_critical
      move_thread_flag_4397 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4397 = 2
      exit_critical
    end
    move_thread_flag_4397 = 0
    move_thread_han_4397 = run move_thread_4397()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4397 > 1):
        join move_thread_han_4397
        $ 4398 "Until (distance)"
        break
      end
      sync()
    end
    $ 4399 "Direction: Base Z-"
    global move_thread_flag_4399=0
    thread move_thread_4399():
      enter_critical
      move_thread_flag_4399 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4399 = 2
      exit_critical
    end
    move_thread_flag_4399 = 0
    move_thread_han_4399 = run move_thread_4399()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4399
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4400 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4401 "Direction: Base Z+"
    global move_thread_flag_4401=0
    thread move_thread_4401():
      enter_critical
      move_thread_flag_4401 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4401 = 2
      exit_critical
    end
    move_thread_flag_4401 = 0
    move_thread_han_4401 = run move_thread_4401()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4401 > 1):
        join move_thread_han_4401
        $ 4402 "Until (distance)"
        break
      end
      sync()
    end
    $ 4403 "Linea23_B" "breakAfter"
    movel(Linea23_B_p, a=0.5, v=0.1)
    $ 4404 "bajada_comprobacion"
    $ 4405 "Direction: Base Z-"
    global move_thread_flag_4405=0
    thread move_thread_4405():
      enter_critical
      move_thread_flag_4405 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4405 = 2
      exit_critical
    end
    move_thread_flag_4405 = 0
    move_thread_han_4405 = run move_thread_4405()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4405 > 1):
        join move_thread_han_4405
        $ 4406 "Until (distance)"
        break
      end
      sync()
    end
    $ 4407 "Direction: Base Z-"
    global move_thread_flag_4407=0
    thread move_thread_4407():
      enter_critical
      move_thread_flag_4407 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4407 = 2
      exit_critical
    end
    move_thread_flag_4407 = 0
    move_thread_han_4407 = run move_thread_4407()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4407
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4408 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4409 "Direction: Base Z+"
    global move_thread_flag_4409=0
    thread move_thread_4409():
      enter_critical
      move_thread_flag_4409 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4409 = 2
      exit_critical
    end
    move_thread_flag_4409 = 0
    move_thread_han_4409 = run move_thread_4409()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4409 > 1):
        join move_thread_han_4409
        $ 4410 "Until (distance)"
        break
      end
      sync()
    end
    $ 4411 "AB"
    $ 4412 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4413 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4414 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 4415 "barreno_actual≔0"
    global barreno_actual=0
    $ 4416 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4417 "Perforacion"
      $ 4418 "MoveL"
      $ 4421 "internos≔interpolate_pose(Linea23_A, Linea23_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea23_A_p, Linea23_B_p, barreno_actual/barrenos_menos1)
      $ 4422 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4423 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4424 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4425 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4426 "Direction: Base Z-"
      global move_thread_flag_4426=0
      thread move_thread_4426():
        enter_critical
        move_thread_flag_4426 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4426 = 2
        exit_critical
      end
      move_thread_flag_4426 = 0
      move_thread_han_4426 = run move_thread_4426()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4426 > 1):
          join move_thread_han_4426
          $ 4427 "Until (distance)"
          break
        end
        sync()
      end
      $ 4428 "Direction: Base Z-"
      global move_thread_flag_4428=0
      thread move_thread_4428():
        enter_critical
        move_thread_flag_4428 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4428 = 2
        exit_critical
      end
      move_thread_flag_4428 = 0
      move_thread_han_4428 = run move_thread_4428()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4428
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4429 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4430 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4431 "Direction: Base Z+"
      global move_thread_flag_4431=0
      thread move_thread_4431():
        enter_critical
        move_thread_flag_4431 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4431 = 2
        exit_critical
      end
      move_thread_flag_4431 = 0
      move_thread_han_4431 = run move_thread_4431()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4431 > 1):
          join move_thread_han_4431
          $ 4432 "Until (distance)"
          break
        end
        sync()
      end
      $ 4433 "Wait: 0.3"
      sleep(0.3)
      $ 4434 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4435 "Wait: 0.3"
      sleep(0.3)
      $ 4436 "Loop 1 times"
      Loop_88 = 0
      while (Loop_88 < 1):
        $ 4437 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4438 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4439 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4440 "Direction: Base Z+"
        global move_thread_flag_4440=0
        thread move_thread_4440():
          enter_critical
          move_thread_flag_4440 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4440 = 2
          exit_critical
        end
        move_thread_flag_4440 = 0
        move_thread_han_4440 = run move_thread_4440()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4440 > 1):
            join move_thread_han_4440
            $ 4441 "Until (distance)"
            break
          end
          sync()
        end
        $ 4442 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4443 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4444 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_88 = Loop_88 + 1
      end
      $ 4445 "Direction: Base Z+"
      global move_thread_flag_4445=0
      thread move_thread_4445():
        enter_critical
        move_thread_flag_4445 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4445 = 2
        exit_critical
      end
      move_thread_flag_4445 = 0
      move_thread_han_4445 = run move_thread_4445()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4445 > 1):
          join move_thread_han_4445
          $ 4446 "Until (distance)"
          break
        end
        sync()
      end
      $ 4447 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4448 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4451 "Popup: Linea23 con chica Terminada!"
    popup("Linea23 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4452 "Linea24"
    $ 4453 "Marcar_puntos"
    $ 4454 "MoveL"
    $ 4455 "Linea24_A" "breakAfter"
    movel(Linea24_A_p, a=0.5, v=0.1)
    $ 4456 "bajada_comprobacion"
    $ 4457 "Direction: Base Z-"
    global move_thread_flag_4457=0
    thread move_thread_4457():
      enter_critical
      move_thread_flag_4457 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4457 = 2
      exit_critical
    end
    move_thread_flag_4457 = 0
    move_thread_han_4457 = run move_thread_4457()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4457 > 1):
        join move_thread_han_4457
        $ 4458 "Until (distance)"
        break
      end
      sync()
    end
    $ 4459 "Direction: Base Z-"
    global move_thread_flag_4459=0
    thread move_thread_4459():
      enter_critical
      move_thread_flag_4459 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4459 = 2
      exit_critical
    end
    move_thread_flag_4459 = 0
    move_thread_han_4459 = run move_thread_4459()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4459
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4460 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4461 "Direction: Base Z+"
    global move_thread_flag_4461=0
    thread move_thread_4461():
      enter_critical
      move_thread_flag_4461 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4461 = 2
      exit_critical
    end
    move_thread_flag_4461 = 0
    move_thread_han_4461 = run move_thread_4461()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4461 > 1):
        join move_thread_han_4461
        $ 4462 "Until (distance)"
        break
      end
      sync()
    end
    $ 4463 "Linea24_B" "breakAfter"
    movel(Linea24_B_p, a=0.5, v=0.1)
    $ 4464 "bajada_comprobacion"
    $ 4465 "Direction: Base Z-"
    global move_thread_flag_4465=0
    thread move_thread_4465():
      enter_critical
      move_thread_flag_4465 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4465 = 2
      exit_critical
    end
    move_thread_flag_4465 = 0
    move_thread_han_4465 = run move_thread_4465()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4465 > 1):
        join move_thread_han_4465
        $ 4466 "Until (distance)"
        break
      end
      sync()
    end
    $ 4467 "Direction: Base Z-"
    global move_thread_flag_4467=0
    thread move_thread_4467():
      enter_critical
      move_thread_flag_4467 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4467 = 2
      exit_critical
    end
    move_thread_flag_4467 = 0
    move_thread_han_4467 = run move_thread_4467()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4467
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4468 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4469 "Direction: Base Z+"
    global move_thread_flag_4469=0
    thread move_thread_4469():
      enter_critical
      move_thread_flag_4469 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4469 = 2
      exit_critical
    end
    move_thread_flag_4469 = 0
    move_thread_han_4469 = run move_thread_4469()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4469 > 1):
        join move_thread_han_4469
        $ 4470 "Until (distance)"
        break
      end
      sync()
    end
    $ 4471 "AB"
    $ 4472 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4473 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4474 "barrenos_menos1≔4"
    global barrenos_menos1=4
    $ 4475 "barreno_actual≔0"
    global barreno_actual=0
    $ 4476 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4477 "Perforacion"
      $ 4478 "MoveL"
      $ 4479 "If barreno_actual≟2"
      if (barreno_actual == 2):
        $ 4480 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 4481 "internos≔interpolate_pose(Linea24_A, Linea24_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea24_A_p, Linea24_B_p, barreno_actual/barrenos_menos1)
      $ 4482 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4483 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4484 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4485 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4486 "Direction: Base Z-"
      global move_thread_flag_4486=0
      thread move_thread_4486():
        enter_critical
        move_thread_flag_4486 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4486 = 2
        exit_critical
      end
      move_thread_flag_4486 = 0
      move_thread_han_4486 = run move_thread_4486()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4486 > 1):
          join move_thread_han_4486
          $ 4487 "Until (distance)"
          break
        end
        sync()
      end
      $ 4488 "Direction: Base Z-"
      global move_thread_flag_4488=0
      thread move_thread_4488():
        enter_critical
        move_thread_flag_4488 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4488 = 2
        exit_critical
      end
      move_thread_flag_4488 = 0
      move_thread_han_4488 = run move_thread_4488()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4488
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4489 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4490 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4491 "Direction: Base Z+"
      global move_thread_flag_4491=0
      thread move_thread_4491():
        enter_critical
        move_thread_flag_4491 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4491 = 2
        exit_critical
      end
      move_thread_flag_4491 = 0
      move_thread_han_4491 = run move_thread_4491()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4491 > 1):
          join move_thread_han_4491
          $ 4492 "Until (distance)"
          break
        end
        sync()
      end
      $ 4493 "Wait: 0.3"
      sleep(0.3)
      $ 4494 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4495 "Wait: 0.3"
      sleep(0.3)
      $ 4496 "Loop 1 times"
      Loop_102 = 0
      while (Loop_102 < 1):
        $ 4497 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4498 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4499 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4500 "Direction: Base Z+"
        global move_thread_flag_4500=0
        thread move_thread_4500():
          enter_critical
          move_thread_flag_4500 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4500 = 2
          exit_critical
        end
        move_thread_flag_4500 = 0
        move_thread_han_4500 = run move_thread_4500()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4500 > 1):
            join move_thread_han_4500
            $ 4501 "Until (distance)"
            break
          end
          sync()
        end
        $ 4502 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4503 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4504 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_102 = Loop_102 + 1
      end
      $ 4505 "Direction: Base Z+"
      global move_thread_flag_4505=0
      thread move_thread_4505():
        enter_critical
        move_thread_flag_4505 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4505 = 2
        exit_critical
      end
      move_thread_flag_4505 = 0
      move_thread_han_4505 = run move_thread_4505()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4505 > 1):
          join move_thread_han_4505
          $ 4506 "Until (distance)"
          break
        end
        sync()
      end
      $ 4507 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4508 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4511 "Popup: Linea24 con chica Terminada!"
    popup("Linea24 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4512 "Linea25"
    $ 4513 "Marcar_puntos"
    $ 4514 "MoveL"
    $ 4515 "Linea25_A" "breakAfter"
    movel(Linea25_A_p, a=0.5, v=0.1)
    $ 4516 "bajada_comprobacion"
    $ 4517 "Direction: Base Z-"
    global move_thread_flag_4517=0
    thread move_thread_4517():
      enter_critical
      move_thread_flag_4517 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4517 = 2
      exit_critical
    end
    move_thread_flag_4517 = 0
    move_thread_han_4517 = run move_thread_4517()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4517 > 1):
        join move_thread_han_4517
        $ 4518 "Until (distance)"
        break
      end
      sync()
    end
    $ 4519 "Direction: Base Z-"
    global move_thread_flag_4519=0
    thread move_thread_4519():
      enter_critical
      move_thread_flag_4519 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4519 = 2
      exit_critical
    end
    move_thread_flag_4519 = 0
    move_thread_han_4519 = run move_thread_4519()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4519
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4520 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4521 "Direction: Base Z+"
    global move_thread_flag_4521=0
    thread move_thread_4521():
      enter_critical
      move_thread_flag_4521 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4521 = 2
      exit_critical
    end
    move_thread_flag_4521 = 0
    move_thread_han_4521 = run move_thread_4521()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4521 > 1):
        join move_thread_han_4521
        $ 4522 "Until (distance)"
        break
      end
      sync()
    end
    $ 4523 "Linea25_B" "breakAfter"
    movel(Linea25_B_p, a=0.5, v=0.1)
    $ 4524 "bajada_comprobacion"
    $ 4525 "Direction: Base Z-"
    global move_thread_flag_4525=0
    thread move_thread_4525():
      enter_critical
      move_thread_flag_4525 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4525 = 2
      exit_critical
    end
    move_thread_flag_4525 = 0
    move_thread_han_4525 = run move_thread_4525()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4525 > 1):
        join move_thread_han_4525
        $ 4526 "Until (distance)"
        break
      end
      sync()
    end
    $ 4527 "Direction: Base Z-"
    global move_thread_flag_4527=0
    thread move_thread_4527():
      enter_critical
      move_thread_flag_4527 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4527 = 2
      exit_critical
    end
    move_thread_flag_4527 = 0
    move_thread_han_4527 = run move_thread_4527()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4527
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4528 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4529 "Direction: Base Z+"
    global move_thread_flag_4529=0
    thread move_thread_4529():
      enter_critical
      move_thread_flag_4529 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4529 = 2
      exit_critical
    end
    move_thread_flag_4529 = 0
    move_thread_han_4529 = run move_thread_4529()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4529 > 1):
        join move_thread_han_4529
        $ 4530 "Until (distance)"
        break
      end
      sync()
    end
    $ 4531 "AB"
    $ 4532 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4533 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4534 "barrenos_menos1≔2"
    global barrenos_menos1=2
    $ 4535 "barreno_actual≔0"
    global barreno_actual=0
    $ 4536 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4537 "Perforacion"
      $ 4538 "MoveL"
      $ 4541 "internos≔interpolate_pose(Linea25_A, Linea25_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea25_A_p, Linea25_B_p, barreno_actual/barrenos_menos1)
      $ 4542 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4543 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4544 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4545 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4546 "Direction: Base Z-"
      global move_thread_flag_4546=0
      thread move_thread_4546():
        enter_critical
        move_thread_flag_4546 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4546 = 2
        exit_critical
      end
      move_thread_flag_4546 = 0
      move_thread_han_4546 = run move_thread_4546()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4546 > 1):
          join move_thread_han_4546
          $ 4547 "Until (distance)"
          break
        end
        sync()
      end
      $ 4548 "Direction: Base Z-"
      global move_thread_flag_4548=0
      thread move_thread_4548():
        enter_critical
        move_thread_flag_4548 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4548 = 2
        exit_critical
      end
      move_thread_flag_4548 = 0
      move_thread_han_4548 = run move_thread_4548()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4548
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4549 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4550 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4551 "Direction: Base Z+"
      global move_thread_flag_4551=0
      thread move_thread_4551():
        enter_critical
        move_thread_flag_4551 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4551 = 2
        exit_critical
      end
      move_thread_flag_4551 = 0
      move_thread_han_4551 = run move_thread_4551()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4551 > 1):
          join move_thread_han_4551
          $ 4552 "Until (distance)"
          break
        end
        sync()
      end
      $ 4553 "Wait: 0.3"
      sleep(0.3)
      $ 4554 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4555 "Wait: 0.3"
      sleep(0.3)
      $ 4556 "Loop 1 times"
      Loop_135 = 0
      while (Loop_135 < 1):
        $ 4557 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4558 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4559 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4560 "Direction: Base Z+"
        global move_thread_flag_4560=0
        thread move_thread_4560():
          enter_critical
          move_thread_flag_4560 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4560 = 2
          exit_critical
        end
        move_thread_flag_4560 = 0
        move_thread_han_4560 = run move_thread_4560()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4560 > 1):
            join move_thread_han_4560
            $ 4561 "Until (distance)"
            break
          end
          sync()
        end
        $ 4562 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4563 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4564 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_135 = Loop_135 + 1
      end
      $ 4565 "Direction: Base Z+"
      global move_thread_flag_4565=0
      thread move_thread_4565():
        enter_critical
        move_thread_flag_4565 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4565 = 2
        exit_critical
      end
      move_thread_flag_4565 = 0
      move_thread_han_4565 = run move_thread_4565()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4565 > 1):
          join move_thread_han_4565
          $ 4566 "Until (distance)"
          break
        end
        sync()
      end
      $ 4567 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4568 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4571 "Popup: Linea25 con chica Terminada!"
    popup("Linea25 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4572 "Linea26"
    $ 4573 "Marcar_puntos"
    $ 4574 "MoveL"
    $ 4575 "Linea26_A" "breakAfter"
    movel(Linea26_A_p, a=0.5, v=0.1)
    $ 4576 "bajada_comprobacion"
    $ 4577 "Direction: Base Z-"
    global move_thread_flag_4577=0
    thread move_thread_4577():
      enter_critical
      move_thread_flag_4577 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4577 = 2
      exit_critical
    end
    move_thread_flag_4577 = 0
    move_thread_han_4577 = run move_thread_4577()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4577 > 1):
        join move_thread_han_4577
        $ 4578 "Until (distance)"
        break
      end
      sync()
    end
    $ 4579 "Direction: Base Z-"
    global move_thread_flag_4579=0
    thread move_thread_4579():
      enter_critical
      move_thread_flag_4579 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4579 = 2
      exit_critical
    end
    move_thread_flag_4579 = 0
    move_thread_han_4579 = run move_thread_4579()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4579
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4580 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4581 "Direction: Base Z+"
    global move_thread_flag_4581=0
    thread move_thread_4581():
      enter_critical
      move_thread_flag_4581 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4581 = 2
      exit_critical
    end
    move_thread_flag_4581 = 0
    move_thread_han_4581 = run move_thread_4581()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4581 > 1):
        join move_thread_han_4581
        $ 4582 "Until (distance)"
        break
      end
      sync()
    end
    $ 4583 "Linea26_B" "breakAfter"
    movel(Linea26_B_p, a=0.5, v=0.1)
    $ 4584 "bajada_comprobacion"
    $ 4585 "Direction: Base Z-"
    global move_thread_flag_4585=0
    thread move_thread_4585():
      enter_critical
      move_thread_flag_4585 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4585 = 2
      exit_critical
    end
    move_thread_flag_4585 = 0
    move_thread_han_4585 = run move_thread_4585()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4585 > 1):
        join move_thread_han_4585
        $ 4586 "Until (distance)"
        break
      end
      sync()
    end
    $ 4587 "Direction: Base Z-"
    global move_thread_flag_4587=0
    thread move_thread_4587():
      enter_critical
      move_thread_flag_4587 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4587 = 2
      exit_critical
    end
    move_thread_flag_4587 = 0
    move_thread_han_4587 = run move_thread_4587()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4587
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4588 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4589 "Direction: Base Z+"
    global move_thread_flag_4589=0
    thread move_thread_4589():
      enter_critical
      move_thread_flag_4589 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4589 = 2
      exit_critical
    end
    move_thread_flag_4589 = 0
    move_thread_han_4589 = run move_thread_4589()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4589 > 1):
        join move_thread_han_4589
        $ 4590 "Until (distance)"
        break
      end
      sync()
    end
    $ 4591 "AB"
    $ 4592 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4593 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4594 "barrenos_menos1≔1"
    global barrenos_menos1=1
    $ 4595 "barreno_actual≔0"
    global barreno_actual=0
    $ 4596 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4597 "Perforacion"
      $ 4598 "MoveL"
      $ 4601 "internos≔interpolate_pose(Linea26_A, Linea26_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea26_A_p, Linea26_B_p, barreno_actual/barrenos_menos1)
      $ 4602 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4603 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4604 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4605 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4606 "Direction: Base Z-"
      global move_thread_flag_4606=0
      thread move_thread_4606():
        enter_critical
        move_thread_flag_4606 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4606 = 2
        exit_critical
      end
      move_thread_flag_4606 = 0
      move_thread_han_4606 = run move_thread_4606()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4606 > 1):
          join move_thread_han_4606
          $ 4607 "Until (distance)"
          break
        end
        sync()
      end
      $ 4608 "Direction: Base Z-"
      global move_thread_flag_4608=0
      thread move_thread_4608():
        enter_critical
        move_thread_flag_4608 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4608 = 2
        exit_critical
      end
      move_thread_flag_4608 = 0
      move_thread_han_4608 = run move_thread_4608()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4608
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4609 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4610 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4611 "Direction: Base Z+"
      global move_thread_flag_4611=0
      thread move_thread_4611():
        enter_critical
        move_thread_flag_4611 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4611 = 2
        exit_critical
      end
      move_thread_flag_4611 = 0
      move_thread_han_4611 = run move_thread_4611()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4611 > 1):
          join move_thread_han_4611
          $ 4612 "Until (distance)"
          break
        end
        sync()
      end
      $ 4613 "Wait: 0.3"
      sleep(0.3)
      $ 4614 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4615 "Wait: 0.3"
      sleep(0.3)
      $ 4616 "Loop 1 times"
      Loop_138 = 0
      while (Loop_138 < 1):
        $ 4617 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4618 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4619 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4620 "Direction: Base Z+"
        global move_thread_flag_4620=0
        thread move_thread_4620():
          enter_critical
          move_thread_flag_4620 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4620 = 2
          exit_critical
        end
        move_thread_flag_4620 = 0
        move_thread_han_4620 = run move_thread_4620()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4620 > 1):
            join move_thread_han_4620
            $ 4621 "Until (distance)"
            break
          end
          sync()
        end
        $ 4622 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4623 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4624 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_138 = Loop_138 + 1
      end
      $ 4625 "Direction: Base Z+"
      global move_thread_flag_4625=0
      thread move_thread_4625():
        enter_critical
        move_thread_flag_4625 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4625 = 2
        exit_critical
      end
      move_thread_flag_4625 = 0
      move_thread_han_4625 = run move_thread_4625()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4625 > 1):
          join move_thread_han_4625
          $ 4626 "Until (distance)"
          break
        end
        sync()
      end
      $ 4627 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4628 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4631 "Popup: Linea26 con chica Terminada!"
    popup("Linea26 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4632 "Linea27"
    $ 4633 "Marcar_puntos"
    $ 4634 "MoveL"
    $ 4635 "Linea27_A" "breakAfter"
    movel(Linea27_A_p, a=0.5, v=0.1)
    $ 4636 "bajada_comprobacion"
    $ 4637 "Direction: Base Z-"
    global move_thread_flag_4637=0
    thread move_thread_4637():
      enter_critical
      move_thread_flag_4637 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4637 = 2
      exit_critical
    end
    move_thread_flag_4637 = 0
    move_thread_han_4637 = run move_thread_4637()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4637 > 1):
        join move_thread_han_4637
        $ 4638 "Until (distance)"
        break
      end
      sync()
    end
    $ 4639 "Direction: Base Z-"
    global move_thread_flag_4639=0
    thread move_thread_4639():
      enter_critical
      move_thread_flag_4639 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4639 = 2
      exit_critical
    end
    move_thread_flag_4639 = 0
    move_thread_han_4639 = run move_thread_4639()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4639
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4640 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4641 "Direction: Base Z+"
    global move_thread_flag_4641=0
    thread move_thread_4641():
      enter_critical
      move_thread_flag_4641 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4641 = 2
      exit_critical
    end
    move_thread_flag_4641 = 0
    move_thread_han_4641 = run move_thread_4641()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4641 > 1):
        join move_thread_han_4641
        $ 4642 "Until (distance)"
        break
      end
      sync()
    end
    $ 4643 "Linea27_B" "breakAfter"
    movel(Linea27_B_p, a=0.5, v=0.1)
    $ 4644 "bajada_comprobacion"
    $ 4645 "Direction: Base Z-"
    global move_thread_flag_4645=0
    thread move_thread_4645():
      enter_critical
      move_thread_flag_4645 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4645 = 2
      exit_critical
    end
    move_thread_flag_4645 = 0
    move_thread_han_4645 = run move_thread_4645()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4645 > 1):
        join move_thread_han_4645
        $ 4646 "Until (distance)"
        break
      end
      sync()
    end
    $ 4647 "Direction: Base Z-"
    global move_thread_flag_4647=0
    thread move_thread_4647():
      enter_critical
      move_thread_flag_4647 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4647 = 2
      exit_critical
    end
    move_thread_flag_4647 = 0
    move_thread_han_4647 = run move_thread_4647()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4647
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4648 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4649 "Direction: Base Z+"
    global move_thread_flag_4649=0
    thread move_thread_4649():
      enter_critical
      move_thread_flag_4649 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4649 = 2
      exit_critical
    end
    move_thread_flag_4649 = 0
    move_thread_han_4649 = run move_thread_4649()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4649 > 1):
        join move_thread_han_4649
        $ 4650 "Until (distance)"
        break
      end
      sync()
    end
    $ 4651 "AB"
    $ 4652 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4653 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4654 "barrenos_menos1≔6"
    global barrenos_menos1=6
    $ 4655 "barreno_actual≔0"
    global barreno_actual=0
    $ 4656 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4657 "Perforacion"
      $ 4658 "MoveL"
      $ 4659 "If barreno_actual≟3"
      if (barreno_actual == 3):
        $ 4660 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 4661 "internos≔interpolate_pose(Linea27_A, Linea27_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea27_A_p, Linea27_B_p, barreno_actual/barrenos_menos1)
      $ 4662 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4663 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4664 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4665 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4666 "Direction: Base Z-"
      global move_thread_flag_4666=0
      thread move_thread_4666():
        enter_critical
        move_thread_flag_4666 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4666 = 2
        exit_critical
      end
      move_thread_flag_4666 = 0
      move_thread_han_4666 = run move_thread_4666()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4666 > 1):
          join move_thread_han_4666
          $ 4667 "Until (distance)"
          break
        end
        sync()
      end
      $ 4668 "Direction: Base Z-"
      global move_thread_flag_4668=0
      thread move_thread_4668():
        enter_critical
        move_thread_flag_4668 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4668 = 2
        exit_critical
      end
      move_thread_flag_4668 = 0
      move_thread_han_4668 = run move_thread_4668()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4668
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4669 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4670 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4671 "Direction: Base Z+"
      global move_thread_flag_4671=0
      thread move_thread_4671():
        enter_critical
        move_thread_flag_4671 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4671 = 2
        exit_critical
      end
      move_thread_flag_4671 = 0
      move_thread_han_4671 = run move_thread_4671()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4671 > 1):
          join move_thread_han_4671
          $ 4672 "Until (distance)"
          break
        end
        sync()
      end
      $ 4673 "Wait: 0.3"
      sleep(0.3)
      $ 4674 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4675 "Wait: 0.3"
      sleep(0.3)
      $ 4676 "Loop 1 times"
      Loop_142 = 0
      while (Loop_142 < 1):
        $ 4677 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4678 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4679 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4680 "Direction: Base Z+"
        global move_thread_flag_4680=0
        thread move_thread_4680():
          enter_critical
          move_thread_flag_4680 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4680 = 2
          exit_critical
        end
        move_thread_flag_4680 = 0
        move_thread_han_4680 = run move_thread_4680()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4680 > 1):
            join move_thread_han_4680
            $ 4681 "Until (distance)"
            break
          end
          sync()
        end
        $ 4682 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4683 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4684 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_142 = Loop_142 + 1
      end
      $ 4685 "Direction: Base Z+"
      global move_thread_flag_4685=0
      thread move_thread_4685():
        enter_critical
        move_thread_flag_4685 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4685 = 2
        exit_critical
      end
      move_thread_flag_4685 = 0
      move_thread_han_4685 = run move_thread_4685()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4685 > 1):
          join move_thread_han_4685
          $ 4686 "Until (distance)"
          break
        end
        sync()
      end
      $ 4687 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4688 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4691 "Popup: Linea27 con chica Terminada!"
    popup("Linea27 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4692 "Linea28"
    $ 4693 "Marcar_puntos"
    $ 4694 "MoveL"
    $ 4695 "Linea28_B" "breakAfter"
    movel(Linea28_B_p, a=0.5, v=0.1)
    $ 4696 "bajada_comprobacion"
    $ 4697 "Direction: Base Z-"
    global move_thread_flag_4697=0
    thread move_thread_4697():
      enter_critical
      move_thread_flag_4697 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4697 = 2
      exit_critical
    end
    move_thread_flag_4697 = 0
    move_thread_han_4697 = run move_thread_4697()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4697 > 1):
        join move_thread_han_4697
        $ 4698 "Until (distance)"
        break
      end
      sync()
    end
    $ 4699 "Direction: Base Z-"
    global move_thread_flag_4699=0
    thread move_thread_4699():
      enter_critical
      move_thread_flag_4699 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4699 = 2
      exit_critical
    end
    move_thread_flag_4699 = 0
    move_thread_han_4699 = run move_thread_4699()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4699
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4700 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4701 "Direction: Base Z+"
    global move_thread_flag_4701=0
    thread move_thread_4701():
      enter_critical
      move_thread_flag_4701 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4701 = 2
      exit_critical
    end
    move_thread_flag_4701 = 0
    move_thread_han_4701 = run move_thread_4701()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4701 > 1):
        join move_thread_han_4701
        $ 4702 "Until (distance)"
        break
      end
      sync()
    end
    $ 4703 "AB"
    $ 4704 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4705 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4706 "barrenos_menos1≔0"
    global barrenos_menos1=0
    $ 4707 "barreno_actual≔0"
    global barreno_actual=0
    $ 4708 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4709 "Perforacion"
      $ 4710 "MoveL"
      $ 4715 "Linea28_B" "breakAfter"
      movel(Linea28_B_p, a=0.5, v=0.1)
      $ 4716 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4717 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4718 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4719 "Direction: Base Z-"
      global move_thread_flag_4719=0
      thread move_thread_4719():
        enter_critical
        move_thread_flag_4719 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4719 = 2
        exit_critical
      end
      move_thread_flag_4719 = 0
      move_thread_han_4719 = run move_thread_4719()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4719 > 1):
          join move_thread_han_4719
          $ 4720 "Until (distance)"
          break
        end
        sync()
      end
      $ 4721 "Direction: Base Z-"
      global move_thread_flag_4721=0
      thread move_thread_4721():
        enter_critical
        move_thread_flag_4721 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4721 = 2
        exit_critical
      end
      move_thread_flag_4721 = 0
      move_thread_han_4721 = run move_thread_4721()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4721
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4722 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4723 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4724 "Direction: Base Z+"
      global move_thread_flag_4724=0
      thread move_thread_4724():
        enter_critical
        move_thread_flag_4724 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.01)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4724 = 2
        exit_critical
      end
      move_thread_flag_4724 = 0
      move_thread_han_4724 = run move_thread_4724()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4724 > 1):
          join move_thread_han_4724
          $ 4725 "Until (distance)"
          break
        end
        sync()
      end
      $ 4726 "Wait: 0.3"
      sleep(0.3)
      $ 4727 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4728 "Wait: 0.3"
      sleep(0.3)
      $ 4729 "Loop 1 times"
      Loop_146 = 0
      while (Loop_146 < 1):
        $ 4730 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4731 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4732 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4733 "Direction: Base Z+"
        global move_thread_flag_4733=0
        thread move_thread_4733():
          enter_critical
          move_thread_flag_4733 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4733 = 2
          exit_critical
        end
        move_thread_flag_4733 = 0
        move_thread_han_4733 = run move_thread_4733()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4733 > 1):
            join move_thread_han_4733
            $ 4734 "Until (distance)"
            break
          end
          sync()
        end
        $ 4735 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4736 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4737 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_146 = Loop_146 + 1
      end
      $ 4738 "Direction: Base Z+"
      global move_thread_flag_4738=0
      thread move_thread_4738():
        enter_critical
        move_thread_flag_4738 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4738 = 2
        exit_critical
      end
      move_thread_flag_4738 = 0
      move_thread_han_4738 = run move_thread_4738()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4738 > 1):
          join move_thread_han_4738
          $ 4739 "Until (distance)"
          break
        end
        sync()
      end
      $ 4740 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4741 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4744 "Popup: Linea28 con chica Terminada!"
    popup("Linea28 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 4745 "Linea29"
    $ 4746 "Marcar_puntos"
    $ 4747 "MoveL"
    $ 4748 "Linea29_A" "breakAfter"
    movel(Linea29_A_p, a=0.5, v=0.1)
    $ 4750 "bajada_comprobacion"
    $ 4751 "Direction: Base Z-"
    global move_thread_flag_4751=0
    thread move_thread_4751():
      enter_critical
      move_thread_flag_4751 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4751 = 2
      exit_critical
    end
    move_thread_flag_4751 = 0
    move_thread_han_4751 = run move_thread_4751()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4751 > 1):
        join move_thread_han_4751
        $ 4752 "Until (distance)"
        break
      end
      sync()
    end
    $ 4753 "Direction: Base Z-"
    global move_thread_flag_4753=0
    thread move_thread_4753():
      enter_critical
      move_thread_flag_4753 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4753 = 2
      exit_critical
    end
    move_thread_flag_4753 = 0
    move_thread_han_4753 = run move_thread_4753()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4753
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4754 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4755 "Direction: Base Z+"
    global move_thread_flag_4755=0
    thread move_thread_4755():
      enter_critical
      move_thread_flag_4755 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4755 = 2
      exit_critical
    end
    move_thread_flag_4755 = 0
    move_thread_han_4755 = run move_thread_4755()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4755 > 1):
        join move_thread_han_4755
        $ 4756 "Until (distance)"
        break
      end
      sync()
    end
    $ 4758 "Linea29_AB" "breakAfter"
    movel(Linea29_AB_p, a=0.5, v=0.1)
    $ 4759 "bajada_comprobacion"
    $ 4760 "Direction: Base Z-"
    global move_thread_flag_4760=0
    thread move_thread_4760():
      enter_critical
      move_thread_flag_4760 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4760 = 2
      exit_critical
    end
    move_thread_flag_4760 = 0
    move_thread_han_4760 = run move_thread_4760()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4760 > 1):
        join move_thread_han_4760
        $ 4761 "Until (distance)"
        break
      end
      sync()
    end
    $ 4762 "Direction: Base Z-"
    global move_thread_flag_4762=0
    thread move_thread_4762():
      enter_critical
      move_thread_flag_4762 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4762 = 2
      exit_critical
    end
    move_thread_flag_4762 = 0
    move_thread_han_4762 = run move_thread_4762()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4762
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4763 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4764 "Direction: Base Z+"
    global move_thread_flag_4764=0
    thread move_thread_4764():
      enter_critical
      move_thread_flag_4764 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4764 = 2
      exit_critical
    end
    move_thread_flag_4764 = 0
    move_thread_han_4764 = run move_thread_4764()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4764 > 1):
        join move_thread_han_4764
        $ 4765 "Until (distance)"
        break
      end
      sync()
    end
    $ 4766 "AB"
    $ 4767 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4768 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4769 "barrenos_menos1≔9"
    global barrenos_menos1=9
    $ 4770 "barreno_actual≔0"
    global barreno_actual=0
    $ 4771 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4772 "Perforacion"
      $ 4773 "MoveL"
      $ 4774 "If barreno_actual≟7"
      if (barreno_actual == 7):
        $ 4775 "barreno_actual≔barreno_actual+1"
        global barreno_actual=barreno_actual+1
      end
      $ 4776 "internos≔interpolate_pose(Linea29_A, Linea29_AB, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea29_A_p, Linea29_AB_p, barreno_actual/barrenos_menos1)
      $ 4780 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4781 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4782 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4783 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4784 "Direction: Base Z-"
      global move_thread_flag_4784=0
      thread move_thread_4784():
        enter_critical
        move_thread_flag_4784 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4784 = 2
        exit_critical
      end
      move_thread_flag_4784 = 0
      move_thread_han_4784 = run move_thread_4784()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4784 > 1):
          join move_thread_han_4784
          $ 4785 "Until (distance)"
          break
        end
        sync()
      end
      $ 4786 "Direction: Base Z-"
      global move_thread_flag_4786=0
      thread move_thread_4786():
        enter_critical
        move_thread_flag_4786 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4786 = 2
        exit_critical
      end
      move_thread_flag_4786 = 0
      move_thread_han_4786 = run move_thread_4786()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4786
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4787 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4788 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4789 "Direction: Base Z+"
      global move_thread_flag_4789=0
      thread move_thread_4789():
        enter_critical
        move_thread_flag_4789 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4789 = 2
        exit_critical
      end
      move_thread_flag_4789 = 0
      move_thread_han_4789 = run move_thread_4789()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4789 > 1):
          join move_thread_han_4789
          $ 4790 "Until (distance)"
          break
        end
        sync()
      end
      $ 4791 "Wait: 0.3"
      sleep(0.3)
      $ 4792 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4793 "Wait: 0.3"
      sleep(0.3)
      $ 4794 "Loop 1 times"
      Loop_150 = 0
      while (Loop_150 < 1):
        $ 4795 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4796 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4797 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4798 "Direction: Base Z+"
        global move_thread_flag_4798=0
        thread move_thread_4798():
          enter_critical
          move_thread_flag_4798 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4798 = 2
          exit_critical
        end
        move_thread_flag_4798 = 0
        move_thread_han_4798 = run move_thread_4798()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4798 > 1):
            join move_thread_han_4798
            $ 4799 "Until (distance)"
            break
          end
          sync()
        end
        $ 4800 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4801 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4802 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_150 = Loop_150 + 1
      end
      $ 4803 "Direction: Base Z+"
      global move_thread_flag_4803=0
      thread move_thread_4803():
        enter_critical
        move_thread_flag_4803 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.04)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4803 = 2
        exit_critical
      end
      move_thread_flag_4803 = 0
      move_thread_han_4803 = run move_thread_4803()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4803 > 1):
          join move_thread_han_4803
          $ 4804 "Until (distance)"
          break
        end
        sync()
      end
      $ 4805 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4806 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4809 "Linea29B"
    $ 4810 "Marcar_puntos"
    $ 4811 "MoveL"
    $ 4813 "Linea29_BA" "breakAfter"
    movel(Linea29_BA_p, a=0.5, v=0.1)
    $ 4814 "bajada_comprobacion"
    $ 4815 "Direction: Base Z-"
    global move_thread_flag_4815=0
    thread move_thread_4815():
      enter_critical
      move_thread_flag_4815 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4815 = 2
      exit_critical
    end
    move_thread_flag_4815 = 0
    move_thread_han_4815 = run move_thread_4815()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4815 > 1):
        join move_thread_han_4815
        $ 4816 "Until (distance)"
        break
      end
      sync()
    end
    $ 4817 "Direction: Base Z-"
    global move_thread_flag_4817=0
    thread move_thread_4817():
      enter_critical
      move_thread_flag_4817 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4817 = 2
      exit_critical
    end
    move_thread_flag_4817 = 0
    move_thread_han_4817 = run move_thread_4817()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4817
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4818 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4819 "Direction: Base Z+"
    global move_thread_flag_4819=0
    thread move_thread_4819():
      enter_critical
      move_thread_flag_4819 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4819 = 2
      exit_critical
    end
    move_thread_flag_4819 = 0
    move_thread_han_4819 = run move_thread_4819()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4819 > 1):
        join move_thread_han_4819
        $ 4820 "Until (distance)"
        break
      end
      sync()
    end
    $ 4821 "Linea29_B" "breakAfter"
    movel(Linea29_B_p, a=0.5, v=0.1)
    $ 4823 "bajada_comprobacion"
    $ 4824 "Direction: Base Z-"
    global move_thread_flag_4824=0
    thread move_thread_4824():
      enter_critical
      move_thread_flag_4824 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4824 = 2
      exit_critical
    end
    move_thread_flag_4824 = 0
    move_thread_han_4824 = run move_thread_4824()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4824 > 1):
        join move_thread_han_4824
        $ 4825 "Until (distance)"
        break
      end
      sync()
    end
    $ 4826 "Direction: Base Z-"
    global move_thread_flag_4826=0
    thread move_thread_4826():
      enter_critical
      move_thread_flag_4826 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
      movel(towardsPos, a=0.007, v=0.007)
      move_thread_flag_4826 = 2
      exit_critical
    end
    move_thread_flag_4826 = 0
    move_thread_han_4826 = run move_thread_4826()
    while (True):
      local targetTcpDirection=get_target_tcp_speed()
      local stepsToRetract=tool_contact(direction=targetTcpDirection)
      if (stepsToRetract > 0):
        kill move_thread_han_4826
        stopl(0.02)
        local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
        local contactPose=get_forward_kin(backTrackMovement)
        local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
        local retractTo=contactPose
        if (norm(posDir) > 1e-6):
          local normalizedPosDir=normalize(posDir)
          local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
          retractTo = pose_sub(contactPose, additionalRetraction)
        end
        movel(retractTo, a=0.02, v=0.1)
        $ 4827 "Until (tool_contact_detection)"
        break
      end
      sync()
    end
    $ 4828 "Direction: Base Z+"
    global move_thread_flag_4828=0
    thread move_thread_4828():
      enter_critical
      move_thread_flag_4828 = 1
      local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.08)
      movel(towardsPos, a=0.15, v=0.1)
      move_thread_flag_4828 = 2
      exit_critical
    end
    move_thread_flag_4828 = 0
    move_thread_han_4828 = run move_thread_4828()
    while (True):
      sleep(1.0E-10)
      if (move_thread_flag_4828 > 1):
        join move_thread_han_4828
        $ 4829 "Until (distance)"
        break
      end
      sync()
    end
    $ 4830 "AB"
    $ 4831 "'desbaste_inicial'"
    # 'desbaste_inicial'
    $ 4832 "bajada_broca≔p[0,0,-0.008,0,0,0]"
    global bajada_broca=p[0,0,-0.008,0,0,0]
    $ 4833 "barrenos_menos1≔10"
    global barrenos_menos1=10
    $ 4834 "barreno_actual≔5"
    global barreno_actual=5
    $ 4835 "Loop barreno_actual≤barrenos_menos1"
    while (barreno_actual <= barrenos_menos1):
      $ 4836 "Perforacion"
      $ 4837 "MoveL"
      $ 4840 "internos≔interpolate_pose(Linea29_BA, Linea29_B, barreno_actual/barrenos_menos1)"
      global internos= interpolate_pose (Linea29_BA_p, Linea29_B_p, barreno_actual/barrenos_menos1)
      $ 4844 "internos" "breakAfter"
      movel(internos, a=0.5, v=0.1)
      $ 4845 "'desbaste_inicial'"
      # 'desbaste_inicial'
      $ 4846 "bajada_broca≔p[0,0,-0.024,0,0,0]"
      global bajada_broca=p[0,0,-0.024,0,0,0]
      $ 4847 "bajada≔p[0,0,0.024,0,0,0]"
      global bajada=p[0,0,0.024,0,0,0]
      $ 4848 "Direction: Base Z-"
      global move_thread_flag_4848=0
      thread move_thread_4848():
        enter_critical
        move_thread_flag_4848 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 0.071)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4848 = 2
        exit_critical
      end
      move_thread_flag_4848 = 0
      move_thread_han_4848 = run move_thread_4848()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4848 > 1):
          join move_thread_han_4848
          $ 4849 "Until (distance)"
          break
        end
        sync()
      end
      $ 4850 "Direction: Base Z-"
      global move_thread_flag_4850=0
      thread move_thread_4850():
        enter_critical
        move_thread_flag_4850 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,-1.0], 1000.0)
        movel(towardsPos, a=0.007, v=0.007)
        move_thread_flag_4850 = 2
        exit_critical
      end
      move_thread_flag_4850 = 0
      move_thread_han_4850 = run move_thread_4850()
      while (True):
        local targetTcpDirection=get_target_tcp_speed()
        local stepsToRetract=tool_contact(direction=targetTcpDirection)
        if (stepsToRetract > 0):
          kill move_thread_han_4850
          stopl(0.02)
          local backTrackMovement=get_actual_joint_positions_history(stepsToRetract)
          local contactPose=get_forward_kin(backTrackMovement)
          local posDir=[targetTcpDirection[0],targetTcpDirection[1],targetTcpDirection[2]]
          local retractTo=contactPose
          if (norm(posDir) > 1e-6):
            local normalizedPosDir=normalize(posDir)
            local additionalRetraction=p[normalizedPosDir[0] * 0.0, normalizedPosDir[1] * 0.0, normalizedPosDir[2] * 0.0, 0, 0, 0]
            retractTo = pose_sub(contactPose, additionalRetraction)
          end
          movel(retractTo, a=0.02, v=0.1)
          $ 4851 "Until (tool_contact_detection)"
          break
        end
        sync()
      end
      $ 4852 "Popup: punto contacto alanzdo"
      popup("punto contacto alanzdo", "Mensaje", False, False, blocking=True)
      $ 4853 "Direction: Base Z+"
      global move_thread_flag_4853=0
      thread move_thread_4853():
        enter_critical
        move_thread_flag_4853 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.007)
        movel(towardsPos, a=0.015, v=0.015)
        move_thread_flag_4853 = 2
        exit_critical
      end
      move_thread_flag_4853 = 0
      move_thread_han_4853 = run move_thread_4853()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4853 > 1):
          join move_thread_han_4853
          $ 4854 "Until (distance)"
          break
        end
        sync()
      end
      $ 4855 "Wait: 0.3"
      sleep(0.3)
      $ 4856 "Set CO[1]=Encender"
      set_configurable_digital_out(1, True)
      $ 4857 "Wait: 0.3"
      sleep(0.3)
      $ 4858 "Loop 1 times"
      Loop_30 = 0
      while (Loop_30 < 1):
        $ 4859 "bajar≔pose_add(get_actual_tcp_pose(), bajada_broca)"
        global bajar= pose_add ( get_actual_tcp_pose (), bajada_broca)
        $ 4860 "bajar" "breakAfter"
        movel(bajar, a=0.004, v=0.004)
        $ 4861 "subir≔pose_sub(get_actual_tcp_pose(), bajada_broca)"
        global subir= pose_sub ( get_actual_tcp_pose (), bajada_broca)
        $ 4862 "Direction: Base Z+"
        global move_thread_flag_4862=0
        thread move_thread_4862():
          enter_critical
          move_thread_flag_4862 = 1
          local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.002)
          movel(towardsPos, a=0.015, v=0.015)
          move_thread_flag_4862 = 2
          exit_critical
        end
        move_thread_flag_4862 = 0
        move_thread_han_4862 = run move_thread_4862()
        while (True):
          sleep(1.0E-10)
          if (move_thread_flag_4862 > 1):
            join move_thread_han_4862
            $ 4863 "Until (distance)"
            break
          end
          sync()
        end
        $ 4864 "Set CO[1]=Apagar"
        set_configurable_digital_out(1, False)
        $ 4865 "subir" "breakAfter"
        movel(subir, a=0.015, v=0.015)
        $ 4866 "bajada_broca≔pose_sub(bajada_broca, bajada)"
        global bajada_broca= pose_sub (bajada_broca, bajada)
        Loop_30 = Loop_30 + 1
      end
      $ 4867 "Direction: Base Z+"
      global move_thread_flag_4867=0
      thread move_thread_4867():
        enter_critical
        move_thread_flag_4867 = 1
        local towardsPos=calculate_point_to_move_towards(p[0.0,0.0,0.0,0.0,0.0,0.0], [0.0,0.0,1.0], 0.04)
        movel(towardsPos, a=0.15, v=0.1)
        move_thread_flag_4867 = 2
        exit_critical
      end
      move_thread_flag_4867 = 0
      move_thread_han_4867 = run move_thread_4867()
      while (True):
        sleep(1.0E-10)
        if (move_thread_flag_4867 > 1):
          join move_thread_han_4867
          $ 4868 "Until (distance)"
          break
        end
        sync()
      end
      $ 4869 "Set CO[1]=Apagar"
      set_configurable_digital_out(1, False)
      $ 4870 "barreno_actual≔barreno_actual+1"
      global barreno_actual=barreno_actual+1
    end
    $ 4873 "Popup: Linea29 con chica Terminada!"
    popup("Linea29 con chica Terminada!", "Mensaje", False, False, blocking=True)
    $ 5361 "'Subprogramas:'"
    # 'Subprogramas:'
  end
end
